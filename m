Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [213.254.12.146])
	by mail.lfdr.de (Postfix) with ESMTPS id 27FF336F94C
	for <lists+linux-ltp@lfdr.de>; Fri, 30 Apr 2021 13:28:20 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id A4A053C60E0
	for <lists+linux-ltp@lfdr.de>; Fri, 30 Apr 2021 13:28:19 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-4.smtp.seeweb.it (in-4.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::4])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (2048 bits))
 (No client certificate requested)
 by picard.linux.it (Postfix) with ESMTPS id 794863C604B
 for <ltp@lists.linux.it>; Fri, 30 Apr 2021 13:27:09 +0200 (CEST)
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by in-4.smtp.seeweb.it (Postfix) with ESMTPS id A382410013BB
 for <ltp@lists.linux.it>; Fri, 30 Apr 2021 13:27:07 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.com; s=susede1;
 t=1619782027; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=eX6+vIUiVbNqWGwkViakzl2d6oiNvwO0KBkXqRkKVmQ=;
 b=ciXssovYqJWDvuYte1q/842cUte+GVxcuXwTTqwoAxVH7adMRivTFgObkUEyuqaG5STzlP
 R3t2s+NdnUBPLc/rmN9axa3l6BzskJm/pGCND3TlaV1oFPFQgJZRcIXQKbm0b8YjzQr6wm
 Q+GT1K68wlOHPfB4BoEs9+HbskgKHTI=
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 196EAB2C5;
 Fri, 30 Apr 2021 11:27:07 +0000 (UTC)
To: ltp@lists.linux.it
Date: Fri, 30 Apr 2021 12:26:45 +0100
Message-Id: <20210430112649.16302-4-rpalethorpe@suse.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20210430112649.16302-1-rpalethorpe@suse.com>
References: <20210430112649.16302-1-rpalethorpe@suse.com>
MIME-Version: 1.0
X-Virus-Scanned: clamav-milter 0.102.4 at in-4.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=0.1 required=7.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,DKIM_VALID_EF,SPF_HELO_NONE,SPF_PASS autolearn=disabled
 version=3.4.4
X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on in-4.smtp.seeweb.it
Subject: [LTP] [PATCH v5 3/7] Add new CGroups APIs
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
From: Richard Palethorpe via ltp <ltp@lists.linux.it>
Reply-To: Richard Palethorpe <rpalethorpe@suse.com>
Cc: Richard Palethorpe <rpalethorpe@suse.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

Q29tcGxldGUgcmV3cml0ZSBvZiB0aGUgQ0dyb3VwcyBBUEkgd2hpY2ggcHJvdmlkZXMgdHdvIGxh
eWVycyBvZgppbmRpcmVjdGlvbiBiZXR3ZWVuIHRoZSB0ZXN0IGF1dGhvciBhbmQgdGhlIFNVVCdz
IENHcm91cApjb25maWd1cmF0aW9uLgoKU2lnbmVkLW9mZi1ieTogUmljaGFyZCBQYWxldGhvcnBl
IDxycGFsZXRob3JwZUBzdXNlLmNvbT4KLS0tCiBpbmNsdWRlL3RzdF9jZ3JvdXAuaCB8ICAxNzkg
KysrKystCiBpbmNsdWRlL3RzdF90ZXN0LmggICB8ICAgIDEgLQogbGliL3RzdF9jZ3JvdXAuYyAg
ICAgfCAxMjkwICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tLQogMyBm
aWxlcyBjaGFuZ2VkLCAxMTI5IGluc2VydGlvbnMoKyksIDM0MSBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9pbmNsdWRlL3RzdF9jZ3JvdXAuaCBiL2luY2x1ZGUvdHN0X2Nncm91cC5oCmluZGV4
IGJmZDg0ODI2MC4uY2JjMjhmM2FjIDEwMDY0NAotLS0gYS9pbmNsdWRlL3RzdF9jZ3JvdXAuaAor
KysgYi9pbmNsdWRlL3RzdF9jZ3JvdXAuaApAQCAtMiw0NiArMiwxNzkgQEAKIC8qCiAgKiBDb3B5
cmlnaHQgKGMpIDIwMjAgUmVkIEhhdCwgSW5jLgogICogQ29weXJpZ2h0IChjKSAyMDIwIExpIFdh
bmcgPGxpd2FuZ0ByZWRoYXQuY29tPgorICogQ29weXJpZ2h0IChjKSAyMDIwLTIwMjEgU1VTRSBM
TEMgPHJwYWxldGhvcnBlQHN1c2UuY29tPgorICovCisvKlwKKyAqIFtERVNDUklQVElPTl0KKyAq
CisgKiBUaGUgTFRQIENHcm91cHMgQVBJIHRyaWVzIHRvIHByZXNlbnQgYSBjb25zaXN0ZW50IGlu
dGVyZmFjZSB0byB0aGUKKyAqIG1hbnkgcG9zc2libGUgQ0dyb3VwIGNvbmZpZ3VyYXRpb25zIGEg
c3lzdGVtIGNvdWxkIGhhdmUuCisgKgorICogWW91IG1heSBhc2s7ICJXaHkgZG9uJ3QgeW91IGp1
c3QgbW91bnQgYSBzaW1wbGUgQ0dyb3VwIGhpZXJhcmNoeSwKKyAqIGluc3RlYWQgb2Ygc2Nhbm5p
bmcgdGhlIGN1cnJlbnQgc2V0dXA/Ii4gVGhlIHNob3J0IGFuc3dlciBpcyB0aGF0CisgKiBpdCBp
cyBub3QgcG9zc2libGUgdW5sZXNzIG5vIENHcm91cHMgYXJlIGN1cnJlbnRseSBhY3RpdmUgYW5k
CisgKiBhbG1vc3QgYWxsIG9mIG91ciB1c2VycyB3aWxsIGhhdmUgQ0dyb3VwcyBhY3RpdmUuIEV2
ZW4gaWYKKyAqIHVubW91bnRpbmcgdGhlIGN1cnJlbnQgQ0dyb3VwIGhpZXJhcmNoeSBpcyBhIHJl
YXNvbmFibGUgdGhpbmcgdG8gZG8KKyAqIHRvIHRoZSBzeXRlbSBtYW5hZ2VyLCBpdCBpcyBoaWdo
bHkgdW5saWtlbHkgdGhlIENHcm91cCBoaWVyYXJjaHkKKyAqIHdpbGwgYmUgZGVzdHJveWVkLiBT
byB1c2VycyB3b3VsZCBiZSBmb3JjZWQgdG8gcmVtb3ZlIHRoZWlyIENHcm91cAorICogY29uZmln
dXJhdGlvbiBhbmQgcmVib290IHRoZSBzeXN0ZW0uCisgKgorICogVGhlIGNvcmUgbGlicmFyeSB0
cmllcyB0byBlbnN1cmUgYW4gTFRQIENHcm91cCBleGlzdHMgb24gZWFjaAorICogaGllcmFyY2h5
IHJvb3QuIEluc2lkZSB0aGUgTFRQIGdyb3VwIGl0IGVuc3VyZXMgYSAnZHJhaW4nIGdyb3VwCisg
KiBleGlzdHMgYW5kIGNyZWF0cyBhIHRlc3QgZ3JvdXAgZm9yIHRoZSBjdXJyZW50IHRlc3QuIElu
IHRoZSB3b3JzdAorICogY2FzZSB3ZSBlbmQgdXAgd2l0aCBhIHNldCBvZiBoaWVyYXJjaGllcyBs
aWtlIHRoZSBmb2xsd29pbmcuIFdoZXJlCisgKiBleGlzdGluZyBzeXN0ZW0tbWFuYWdlci1jcmVh
dGVkIENHcm91cHMgaGF2ZSBiZWVuIG9taXR0ZWQuCisgKgorICogCShWMiBSb290KQkoVjEgUm9v
dCAxKQkuLi4JKFYxIFJvb3QgTikKKyAqIAkgICAgfAkJICAgICB8CQkJICAgICB8CisgKgkgIChs
dHApCQkgICAobHRwKQkuLi4JICAgKGx0cCkKKyAqCSAvICAgICBcCSAgLwlcCQkgIC8JXAorICog
IChkcmFpbikgKHRlc3QtbikgKGRyYWluKSAgKHRlc3QtbikgIC4uLiAgKGRyYWluKSAgKHRlc3Qt
bikKKyAqCisgKiBWMiBDR3JvdXAgY29udHJvbGxlcnMgdXNlIGEgc2luZ2xlIHVuaWZpZWQgaGll
cmFyY2h5IG9uIGEgc2luZ2xlCisgKiByb290LiBUd28gb3IgbW9yZSBWMSBjb250cm9sbGVycyBt
YXkgc2hhcmUgYSByb290IG9yIGhhdmUgdGhlaXIgb3duCisgKiByb290LiBIb3dldmVyIHRoZXJl
IG1heSBleGlzdCBvbmx5IG9uZSBpbnN0YW5jZSBvZiBhIGNvbnRyb2xsZXIuCisgKiBTbyB5b3Ug
Y2FuIG5vdCBoYXZlIHRoZSBzYW1lIFYxIGNvbnRyb2xsZXIgb24gbXVsdGlwbGUgcm9vdHMuCisg
KgorICogSXQgaXMgcG9zc2libGUgdG8gaGF2ZSBib3RoIGEgVjIgaGllcmFyY2h5IGFuZCBWMSBo
aWVyYXJjaGllcworICogYWN0aXZlIGF0IHRoZSBzYW1lIHRpbWUuIFdoaWNoIGlzIHdoYXQgaXMg
c2hvd24gYWJvdmUuIEFueQorICogY29udHJvbGxlcnMgYXR0YWNoZWQgdG8gVjEgaGllcmFyY2hp
ZXMgd2lsbCBub3QgYmUgYXZhaWxhYmxlIGluIHRoZQorICogVjIgaGllcmFyY2h5LiBUaGUgcmV2
ZXJzZSBpcyBhbHNvIHRydWUuCisgKgorICogTm90ZSB0aGF0IGEgc2luZ2xlIGhpZXJhcmNoeSBt
YXkgYmUgbW91bnRlZCBtdWx0aXBsZQorICogdGltZXMuIEFsbG93aW5nIGl0IHRvIGJlIGFjY2Vz
c2VkIGF0IGRpZmZlcmVudCBsb2NhdGlvbnMuIEhvd2V2ZXIKKyAqIHN1YnNlcXVlbnQgbW91bnQg
b3BlcmF0aW9ucyB3aWxsIGZhaWwgaWYgdGhlIG1vdW50IG9wdGlvbnMgYXJlCisgKiBkaWZmZXJl
bnQgZnJvbSB0aGUgZmlyc3QuCisgKgorICogVGhlIHVzZXIgbWF5IHByZS1jcmVhdGUgdGhlIENH
cm91cCBoaWVyYXJjaGllcyBhbmQgdGhlIGx0cCBDR3JvdXAsCisgKiBvdGhlcndpc2UgdGhlIGxp
YnJhcnkgd2lsbCB0cnkgdG8gY3JlYXRlIHRoZW0uIElmIHRoZSBsdHAgZ3JvdXAKKyAqIGFscmVh
ZHkgZXhpc3RzIGFuZCBoYXMgYXBwcm9wcmlhdGUgcGVybWlzc2lvbnMsIHRoZW4gYWRtaW4KKyAq
IHByaXZpbGVnZXMgd2lsbCBub3QgYmUgcmVxdWlyZWQgdG8gcnVuIHRoZSB0ZXN0cy4KKyAqCisg
KiBCZWNhdXNlIHRoZSB0ZXN0IG1heSBub3QgaGF2ZSBhY2Nlc3MgdG8gdGhlIENHcm91cCByb290
KHMpLCB0aGUKKyAqIGRyYWluIENHcm91cCBpcyBjcmVhdGVkLiBUaGlzIGNhbiBiZSB1c2VkIHRv
IHN0b3JlIHByb2Nlc3NlcyB3aGljaAorICogd291bGQgb3RoZXJ3aXNlIGJsb2NrIHRoZSBkZXN0
cnVjdGlvbiBvZiB0aGUgaW5kaXZpZHVhbCB0ZXN0IENHcm91cAorICogb3Igb25lIG9mIGl0cyBk
ZXNjZW5kYW50cy4KKyAqCisgKiBUaGUgdGVzdCBhdXRob3IgbWF5IGNyZWF0ZSBjaGlsZCBDR3Jv
dXBzIHdpdGhpbiB0aGUgdGVzdCBDR3JvdXAKKyAqIHVzaW5nIHRoZSBDR3JvdXAgSXRlbSBBUEku
IFRoZSBsaWJyYXJ5IHdpbGwgY3JlYXRlIHRoZSBuZXcgQ0dyb3VwCisgKiBpbiBhbGwgdGhlIHJl
bGV2YW50IGhpZXJhcmNoaWVzLgorICoKKyAqIFRoZXJlIGFyZSBtYW55IGRpZmZlcmVuY2VzIGJl
dHdlZW4gdGhlIFYxIGFuZCBWMiBDR3JvdXAgQVBJcy4gSWYgYQorICogY29udHJvbGxlciBpcyBv
biBib3RoIFYxIGFuZCBWMiwgaXQgbWF5IGhhdmUgZGlmZmVyZW50IHBhcmFtZXRlcnMKKyAqIGFu
ZCBjb250cm9sIGZpbGVzLiBTb21lIG9mIHRoZXNlIGNvbnRyb2wgZmlsZXMgaGF2ZSBhIGRpZmZl
cmVudAorICogbmFtZSwgYnV0IHNpbWlsYXIgZnVuY3Rpb25hbGl0eS4gSW4gdGhpcyBjYXNlIHRo
ZSBJdGVtIEFQSSB1c2VzCisgKiB0aGUgVjIgbmFtZXMgYW5kIGFsaWFzZXMgdGhlbSB0byB0aGUg
VjEgbmFtZSB3aGVuIGFwcHJvcHJpYXRlLgorICoKKyAqIFNvbWUgY29udHJvbCBmaWxlcyBvbmx5
IGV4aXN0IG9uIG9uZSBvZiB0aGUgdmVyc2lvbnMgb3IgdGhleSBjYW4gYmUKKyAqIG1pc3Npbmcg
ZHVlIHRvIG90aGVyIHJlYXNvbnMuIFRoZSBJdGVtIEFQSSBhbGxvd3MgdGhlIHVzZXIgdG8gY2hl
Y2sKKyAqIGlmIHRoZSBmaWxlIGV4aXN0cyBiZWZvcmUgdHJ5aW5nIHRvIHVzZSBpdC4KKyAqCisg
KiBPZnRlbiBhIGNvbnRyb2wgZmlsZSBoYXMgYWxtb3N0IHRoZSBzYW1lIGZ1bmN0aW9uYWxpdHkg
YmV0d2VlbiBWMQorICogYW5kIFYyLiBXaGljaCBtZWFucyBpdCBjYW4gYmUgdXNlZCBpbiB0aGUg
c2FtZSB3YXkgbW9zdCBvZiB0aGUKKyAqIHRpbWUsIGJ1dCBub3QgYWxsLiBGb3Igbm93IHRoaXMg
aXMgaGFuZGxlZCBieSBleHBvc2luZyB0aGUgQVBJCisgKiB2ZXJzaW9uIGEgY29udHJvbGxlciBp
cyB1c2luZyB0byBhbGxvdyB0aGUgdGVzdCBhdXRob3IgdG8gaGFuZGxlCisgKiBlZGdlIGNhc2Vz
LiAoZS5nLiBWMiBtZW1vcnkuc3dhcC5tYXggYWNjZXB0cyAibWF4IiwgYnV0IFYxCisgKiBtZW1v
cnkubWVtc3cubGltaXRfaW5fYnl0ZXMgZG9lcyBub3QpLgogICovCiAKICNpZm5kZWYgVFNUX0NH
Uk9VUF9ICiAjZGVmaW5lIFRTVF9DR1JPVVBfSAogCi0jZGVmaW5lIFBBVEhfVE1QX0NHX01FTQki
L3RtcC9jZ3JvdXBfbWVtIgotI2RlZmluZSBQQVRIX1RNUF9DR19DU1QJIi90bXAvY2dyb3VwX2Nz
dCIKKyNpbmNsdWRlIDxzeXMvdHlwZXMuaD4KIAorLyogQ0dyb3VwcyBLZXJuZWwgQVBJIHZlcnNp
b24gKi8KIGVudW0gdHN0X2Nncm91cF92ZXIgewogCVRTVF9DR1JPVVBfVjEgPSAxLAogCVRTVF9D
R1JPVVBfVjIgPSAyLAogfTsKIAotZW51bSB0c3RfY2dyb3VwX2N0cmwgewotCVRTVF9DR1JPVVBf
TUVNQ0cgPSAxLAotCVRTVF9DR1JPVVBfQ1BVU0VUID0gMiwKLQkvKiBhZGQgY2dyb3VwIGNvbnRy
b2xsZXIgKi8KKy8qIFVzZWQgdG8gc3BlY2lmeSBDR3JvdXAgaGllcmFyY2h5IGNvbmZpZ3VyYXRp
b24gb3B0aW9ucywgYWxsb3dpbmcgYQorICogdGVzdCB0byByZXF1ZXN0IGEgcGFydGljdWxhciBD
R3JvdXAgc3RydWN0dXJlLgorICovCitzdHJ1Y3QgdHN0X2Nncm91cF9vcHRzIHsKKwkvKiBPbmx5
IHRyeSB0byBtb3VudCBWMSBDR3JvdXAgY29udHJvbGxlcnMuIFRoaXMgd2lsbCBub3QKKwkgKiBw
cmV2ZW50IFYyIGZyb20gYmVpbmcgdXNlZCBpZiBpdCBpcyBhbHJlYWR5IG1vdW50ZWQsIGl0CisJ
ICogb25seSBpbmRpY2F0ZXMgdGhhdCB3ZSBzaG91bGQgbW91bnQgVjEgY29udHJvbGxlcnMgaWYK
KwkgKiBub3RoaW5nIGlzIHByZXNlbnQuIEJ5IGRlZmF1bHQgd2UgdHJ5IHRvIG1vdW50IFYyIGZp
cnN0LiAqLworCWludCBvbmx5X21vdW50X3YxOjE7CiB9OwogCi1lbnVtIHRzdF9jZ3JvdXBfdmVy
IHRzdF9jZ3JvdXBfdmVyc2lvbih2b2lkKTsKKy8qIEEgQ29udHJvbCBHcm91cCBpbiBMVFAncyBh
Z2dyZWdhdGVkIGhpZXJhcmNoeSAqLworc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXA7CisKKy8qIFNl
YXJjaCB0aGUgc3lzdGVtIGZvciBtb3VudGVkIGNncm91cHMgYW5kIGF2YWlsYWJsZQorICogY29u
dHJvbGxlcnMuIENhbGxlZCBhdXRvbWF0aWNhbGx5IGJ5IHRzdF9jZ3JvdXBfcmVxdWlyZS4KKyAq
Lwordm9pZCB0c3RfY2dyb3VwX3NjYW4odm9pZCk7CisvKiBQcmludCB0aGUgY29uZmlnIGRldGVj
dGVkIGJ5IHRzdF9jZ3JvdXBfc2NhbiAqLwordm9pZCB0c3RfY2dyb3VwX3ByaW50X2NvbmZpZyh2
b2lkKTsKKworLyogRW5zdXJlIHRoZSBzcGVjaWZpZWQgY29udHJvbGxlciBpcyBhdmFpbGFibGUg
aW4gdGhlIHRlc3QncyBkZWZhdWx0CisgKiBDR3JvdXAsIG1vdW50aW5nL2VuYWJsaW5nIGl0IGlm
IG5lY2Vzc2FyeSAqLwordm9pZCB0c3RfY2dyb3VwX3JlcXVpcmUoY29uc3QgY2hhciAqY3RybF9u
YW1lLAorCQkJY29uc3Qgc3RydWN0IHRzdF9jZ3JvdXBfb3B0cyAqb3B0aW9ucyk7CisKKy8qIFRl
YXIgZG93biBhbnkgQ0dyb3VwcyBjcmVhdGVkIGJ5IGNhbGxzIHRvIHRzdF9jZ3JvdXBfcmVxdWly
ZSAqLwordm9pZCB0c3RfY2dyb3VwX2NsZWFudXAodm9pZCk7CisKKy8qIEdldCB0aGUgZGVmYXVs
dCBDR3JvdXAgZm9yIHRoZSB0ZXN0LiBJdCBhbGxvY2F0ZXMgbWVtb3J5IChpbiBhCisgKiBndWFy
ZGVkIGJ1ZmZlcikgc28gc2hvdWxkIGFsd2F5cyBiZSBjYWxsZWQgZnJvbSBzZXR1cAorICovCitj
b25zdCBzdHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqdHN0X2Nncm91cF9nZXRfdGVzdF9ncm91cCh2
b2lkKTsKKy8qIEdldCB0aGUgc2hhcmVkIGRyYWluIGdyb3VwLiBBbHNvIHNob3VsZCBiZSBjYWxs
ZWQgZnJvbSBzZXR1cCAqLworY29uc3Qgc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKnRzdF9jZ3Jv
dXBfZ2V0X2RyYWluX2dyb3VwKHZvaWQpOworLyogQ3JlYXRlIGEgZGVzY2VuZGFudCBDR3JvdXAg
Ki8KK3N0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICoKK3RzdF9jZ3JvdXBfZ3JvdXBfbWsoY29uc3Qg
c3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKnBhcmVudCwKKwkJICAgIGNvbnN0IGNoYXIgKm5hbWUp
OworLyogUmVtb3ZlIGEgZGVzY2VuZGFudCBDR3JvdXAgKi8KK3N0cnVjdCB0c3RfY2dyb3VwX2dy
b3VwICp0c3RfY2dyb3VwX2dyb3VwX3JtKHN0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICpjZyk7CisK
KworI2RlZmluZSBUU1RfQ0dST1VQX1ZFUihjZywgY3RybF9uYW1lKSBcCisJdHN0X2Nncm91cF92
ZXIoX19GSUxFX18sIF9fTElORV9fLCAoY2cpLCAoY3RybF9uYW1lKSkKKworZW51bSB0c3RfY2dy
b3VwX3ZlciB0c3RfY2dyb3VwX3Zlcihjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5v
LAorCQkJCSAgIGNvbnN0IHN0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICpjZywKKwkJCQkgICBjb25z
dCBjaGFyICpjdHJsX25hbWUpOworCisjZGVmaW5lIFNBRkVfQ0dST1VQX0hBUyhjZywgZmlsZV9u
YW1lKSBcCisJc2FmZV9jZ3JvdXBfaGFzKF9fRklMRV9fLCBfX0xJTkVfXywgKGNnKSwgKGZpbGVf
bmFtZSkpCisKK2ludCBzYWZlX2Nncm91cF9oYXMoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50
IGxpbmVubywKKwkJICAgIGNvbnN0IHN0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICpjZywgY29uc3Qg
Y2hhciAqZmlsZV9uYW1lKTsKKworI2RlZmluZSBTQUZFX0NHUk9VUF9SRUFEKGNnLCBmaWxlX25h
bWUsIG91dCwgbGVuKQkJCVwKKwlzYWZlX2Nncm91cF9yZWFkKF9fRklMRV9fLCBfX0xJTkVfXywJ
CQkJXAorCQkJIChjZyksIChmaWxlX25hbWUpLCAob3V0KSwgKGxlbikpCisKK3NzaXplX3Qgc2Fm
ZV9jZ3JvdXBfcmVhZChjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAorCQkJIGNv
bnN0IHN0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICpjZywKKwkJCSBjb25zdCBjaGFyICpmaWxlX25h
bWUsCisJCQkgY2hhciAqb3V0LCBzaXplX3QgbGVuKTsKKworI2RlZmluZSBTQUZFX0NHUk9VUF9Q
UklOVEYoY2csIGZpbGVfbmFtZSwgZm10LCAuLi4pCQkJXAorCXNhZmVfY2dyb3VwX3ByaW50Zihf
X0ZJTEVfXywgX19MSU5FX18sCQkJCVwKKwkJCSAgIChjZyksIChmaWxlX25hbWUpLCAoZm10KSwg
X19WQV9BUkdTX18pCiAKLS8qIFRvIG1vdW50L3Vtb3VudCBzcGVjaWZpZWQgY2dyb3VwIGNvbnRy
b2xsZXIgb24gJ2Nncm91cF9kaXInIHBhdGggKi8KLXZvaWQgdHN0X2Nncm91cF9tb3VudChlbnVt
IHRzdF9jZ3JvdXBfY3RybCBjdHJsLCBjb25zdCBjaGFyICpjZ3JvdXBfZGlyKTsKLXZvaWQgdHN0
X2Nncm91cF91bW91bnQoY29uc3QgY2hhciAqY2dyb3VwX2Rpcik7CisjZGVmaW5lIFNBRkVfQ0dS
T1VQX1BSSU5UKGNnLCBmaWxlX25hbWUsIHN0cikJCQkJXAorCXNhZmVfY2dyb3VwX3ByaW50Zihf
X0ZJTEVfXywgX19MSU5FX18sIChjZyksIChmaWxlX25hbWUpLCAiJXMiLCAoc3RyKSkKIAotLyog
VG8gbW92ZSBjdXJyZW50IHByb2Nlc3MgUElEIHRvIHRoZSBtb3VudGVkIGNncm91cCB0YXNrcyAq
Lwotdm9pZCB0c3RfY2dyb3VwX21vdmVfY3VycmVudChjb25zdCBjaGFyICpjZ3JvdXBfZGlyKTsK
K3ZvaWQgc2FmZV9jZ3JvdXBfcHJpbnRmKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5l
bm8sCisJCQljb25zdCBzdHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqY2csCisJCQljb25zdCBjaGFy
ICpmaWxlX25hbWUsCisJCQljb25zdCBjaGFyICpmbXQsIC4uLikKKwkJCV9fYXR0cmlidXRlX18g
KChmb3JtYXQgKHByaW50ZiwgNSwgNikpKTsKIAotLyogVG8gc2V0IGNncm91cCBjb250cm9sbGVy
IGtub2Igd2l0aCBuZXcgdmFsdWUgKi8KLXZvaWQgdHN0X2Nncm91cF9zZXRfa25vYihjb25zdCBj
aGFyICpjZ3JvdXBfZGlyLCBjb25zdCBjaGFyICprbm9iLCBsb25nIHZhbHVlKTsKKyNkZWZpbmUg
U0FGRV9DR1JPVVBfU0NBTkYoY2csIGZpbGVfbmFtZSwgZm10LCAuLi4pCQkJXAorCXNhZmVfY2dy
b3VwX3NjYW5mKF9fRklMRV9fLCBfX0xJTkVfXywJCQkJXAorCQkJICAoY2cpLCAoZmlsZV9uYW1l
KSwgKGZtdCksIF9fVkFfQVJHU19fKQogCi0vKiBTZXQgb2YgZnVuY3Rpb25zIHRvIHNldCBrbm9i
cyB1bmRlciB0aGUgbWVtb3J5IGNvbnRyb2xsZXIgKi8KLXZvaWQgdHN0X2Nncm91cF9tZW1fc2V0
X21heGJ5dGVzKGNvbnN0IGNoYXIgKmNncm91cF9kaXIsIGxvbmcgbWVtc3opOwotaW50ICB0c3Rf
Y2dyb3VwX21lbV9zd2FwYWNjdF9lbmFibGVkKGNvbnN0IGNoYXIgKmNncm91cF9kaXIpOwotdm9p
ZCB0c3RfY2dyb3VwX21lbV9zZXRfbWF4c3dhcChjb25zdCBjaGFyICpjZ3JvdXBfZGlyLCBsb25n
IG1lbXN6KTsKK3ZvaWQgc2FmZV9jZ3JvdXBfc2NhbmYoY29uc3QgY2hhciAqZmlsZSwgY29uc3Qg
aW50IGxpbmVubywKKwkJICAgICAgIGNvbnN0IHN0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICpjZywg
Y29uc3QgY2hhciAqZmlsZV9uYW1lLAorCQkgICAgICAgY29uc3QgY2hhciAqZm10LCAuLi4pCisJ
CSAgICAgICBfX2F0dHJpYnV0ZV9fICgoZm9ybWF0IChzY2FuZiwgNSwgNikpKTsKIAotLyogU2V0
IG9mIGZ1bmN0aW9ucyB0byByZWFkL3dyaXRlIGNwdXNldCBjb250cm9sbGVyIGZpbGVzIGNvbnRl
bnQgKi8KLXZvaWQgdHN0X2Nncm91cF9jcHVzZXRfcmVhZF9maWxlcyhjb25zdCBjaGFyICpjZ3Jv
dXBfZGlyLCBjb25zdCBjaGFyICpmaWxlbmFtZSwKLQljaGFyICpyZXRidWYsIHNpemVfdCByZXRi
dWZfc3opOwotdm9pZCB0c3RfY2dyb3VwX2NwdXNldF93cml0ZV9maWxlcyhjb25zdCBjaGFyICpj
Z3JvdXBfZGlyLCBjb25zdCBjaGFyICpmaWxlbmFtZSwKLQljb25zdCBjaGFyICpidWYpOwogCiAj
ZW5kaWYgLyogVFNUX0NHUk9VUF9IICovCmRpZmYgLS1naXQgYS9pbmNsdWRlL3RzdF90ZXN0Lmgg
Yi9pbmNsdWRlL3RzdF90ZXN0LmgKaW5kZXggNGVlZTZmODk3Li42YWQzNTU1MDYgMTAwNjQ0Ci0t
LSBhL2luY2x1ZGUvdHN0X3Rlc3QuaAorKysgYi9pbmNsdWRlL3RzdF90ZXN0LmgKQEAgLTM5LDcg
KzM5LDYgQEAKICNpbmNsdWRlICJ0c3RfY2FwYWJpbGl0eS5oIgogI2luY2x1ZGUgInRzdF9odWdl
cGFnZS5oIgogI2luY2x1ZGUgInRzdF9hc3NlcnQuaCIKLSNpbmNsdWRlICJ0c3RfY2dyb3VwLmgi
CiAjaW5jbHVkZSAidHN0X2xvY2tkb3duLmgiCiAjaW5jbHVkZSAidHN0X2ZpcHMuaCIKICNpbmNs
dWRlICJ0c3RfdGFpbnQuaCIKZGlmZiAtLWdpdCBhL2xpYi90c3RfY2dyb3VwLmMgYi9saWIvdHN0
X2Nncm91cC5jCmluZGV4IDk2Yzk1MjRkMi4uYzlhN2Y1YjlmIDEwMDY0NAotLS0gYS9saWIvdHN0
X2Nncm91cC5jCisrKyBiL2xpYi90c3RfY2dyb3VwLmMKQEAgLTIsNDUzICsyLDExMDkgQEAKIC8q
CiAgKiBDb3B5cmlnaHQgKGMpIDIwMjAgUmVkIEhhdCwgSW5jLgogICogQ29weXJpZ2h0IChjKSAy
MDIwIExpIFdhbmcgPGxpd2FuZ0ByZWRoYXQuY29tPgorICogQ29weXJpZ2h0IChjKSAyMDIwLTIw
MjEgU1VTRSBMTEMgPHJwYWxldGhvcnBlQHN1c2UuY29tPgogICovCiAKICNkZWZpbmUgVFNUX05P
X0RFRkFVTFRfTUFJTgogCiAjaW5jbHVkZSA8c3RkaW8uaD4KKyNpbmNsdWRlIDxzdGRkZWYuaD4K
ICNpbmNsdWRlIDxzdGRsaWIuaD4KKyNpbmNsdWRlIDxtbnRlbnQuaD4KICNpbmNsdWRlIDxzeXMv
bW91bnQuaD4KLSNpbmNsdWRlIDxmY250bC5oPgotI2luY2x1ZGUgPHVuaXN0ZC5oPgogCiAjaW5j
bHVkZSAidHN0X3Rlc3QuaCIKLSNpbmNsdWRlICJ0c3Rfc2FmZV9tYWNyb3MuaCIKLSNpbmNsdWRl
ICJ0c3Rfc2FmZV9zdGRpby5oIgorI2luY2x1ZGUgImxhcGkvZmNudGwuaCIKKyNpbmNsdWRlICJs
YXBpL21vdW50LmgiCisjaW5jbHVkZSAibGFwaS9ta2RpcmF0LmgiCisjaW5jbHVkZSAidHN0X3Nh
ZmVfZmlsZV9hdC5oIgogI2luY2x1ZGUgInRzdF9jZ3JvdXAuaCIKLSNpbmNsdWRlICJ0c3RfZGV2
aWNlLmgiCiAKLXN0YXRpYyBlbnVtIHRzdF9jZ3JvdXBfdmVyIHRzdF9jZ192ZXI7Ci1zdGF0aWMg
aW50IGNsb25lX2NoaWxkcmVuOworc3RydWN0IGNncm91cF9yb290OwogCi1zdGF0aWMgaW50IHRz
dF9jZ3JvdXBfY2hlY2soY29uc3QgY2hhciAqY2dyb3VwKQorLyogQSBub2RlIGluIGEgc2luZ2xl
IENHcm91cCBoaWVyYXJjaHkuIEl0IGV4aXN0cyBtYWlubHkgZm9yCisgKiBjb252ZW5pZW5jZSBz
byB0aGF0IHdlIGRvIG5vdCBoYXZlIHRvIHRyYXZlcnNlIHRoZSBDR3JvdXAgc3RydWN0dXJlCisg
KiBmb3IgZnJlcXVlbnQgb3BlcmF0aW9ucy4KKyAqCisgKiBUaGlzIGlzIGFjdHVhbGx5IGEgc2lu
Z2xlLWxpbmtlZCBsaXN0IG5vdCBhIHRyZWUuIFdlIG9ubHkgbmVlZCB0bworICogdHJhdmVyc2Ug
ZnJvbSBsZWFmIHRvd2FyZHMgcm9vdC4KKyAqLworc3RydWN0IGNncm91cF9kaXIgeworCWNvbnN0
IGNoYXIgKmRpcl9uYW1lOworCWNvbnN0IHN0cnVjdCBjZ3JvdXBfZGlyICpkaXJfcGFyZW50Owor
CisJLyogU2hvcnRjdXQgdG8gcm9vdCAqLworCWNvbnN0IHN0cnVjdCBjZ3JvdXBfcm9vdCAqZGly
X3Jvb3Q7CisKKwkvKiBTdWJzeXN0ZW1zIChjb250cm9sbGVycykgYml0IGZpZWxkLiBPbmx5IGNv
bnRyb2xsZXJzIHdoaWNoCisJICogd2VyZSByZXF1aXJlZCBhbmQgY29uZmlndXJlZCBmb3IgdGhp
cyBub2RlIGFyZSBhZGRlZCB0bworCSAqIHRoaXMgZmllbGQuIFNvIGl0IG1heSBiZSBkaWZmZXJl
bnQgZnJvbSByb290LT5jc3NfZmllbGQuCisJICovCisJdWludDMyX3QgY3RybF9maWVsZDsKKwor
CS8qIEluIGdlbmVyYWwgd2UgYXZvaWQgaGF2aW5nIHNwcmludGZzIGV2ZXJ5d2hlcmUgYW5kIHVz
ZQorCSAqIG9wZW5hdCwgbGlua2F0LCBldGMuCisJICovCisJaW50IGRpcl9mZDsKKworCWludCB3
ZV9jcmVhdGVkX2l0OjE7Cit9OworCisvKiBUaGUgcm9vdCBvZiBhIENHcm91cCBoaWVyYXJjaHkv
dHJlZSAqLworc3RydWN0IGNncm91cF9yb290IHsKKwllbnVtIHRzdF9jZ3JvdXBfdmVyIHZlcjsK
KwkvKiBBIG1vdW50IHBhdGggKi8KKwljaGFyIG1udF9wYXRoW1BBVEhfTUFYXTsKKwkvKiBTdWJz
eXN0ZW1zIChjb250cm9sbGVycykgYml0IGZpZWxkLiBJbmNsdWRlcyBhbGwKKwkgKiBjb250cm9s
bGVycyBmb3VuZCB3aGlsZSBzY2FubmluZyB0aGlzIHJvb3QuCisJICovCisJdWludDMyX3QgY3Ry
bF9maWVsZDsKKworCS8qIENHcm91cCBoaWVyYXJjaHk6IG1udCAtPiBsdHAgLT4ge2RyYWluLCB0
ZXN0IC0+ID8/PyB9IFdlCisJICoga2VlcCBhIGZsYXQgcmVmZXJlbmNlIHRvIGx0cCwgZHJhaW4g
YW5kIHRlc3QgZm9yCisJICogY29udmVuaWVuY2UuCisJICovCisKKwkvKiBNb3VudCBkaXJlY3Rv
cnkgKi8KKwlzdHJ1Y3QgY2dyb3VwX2RpciBtbnRfZGlyOworCS8qIExUUCBDR3JvdXAgZGlyZWN0
b3J5LCBjb250YWlucyBkcmFpbiBhbmQgdGVzdCBkaXJzICovCisJc3RydWN0IGNncm91cF9kaXIg
bHRwX2RpcjsKKwkvKiBEcmFpbiBDR3JvdXAsIHNlZSBjZ3JvdXBfY2xlYW51cCAqLworCXN0cnVj
dCBjZ3JvdXBfZGlyIGRyYWluX2RpcjsKKwkvKiBDR3JvdXAgZm9yIGN1cnJlbnQgdGVzdC4gV2hp
Y2ggbWF5IGhhdmUgY2hpbGRyZW4uICovCisJc3RydWN0IGNncm91cF9kaXIgdGVzdF9kaXI7CisK
KwlpbnQgd2VfbW91bnRlZF9pdDoxOworCS8qIGNwdXNldCBpcyBpbiBjb21wYXRhYmlsaXR5IG1v
ZGUgKi8KKwlpbnQgbm9fY3B1c2V0X3ByZWZpeDoxOworfTsKKworLyogQ29udHJvbGxlciBzdWIt
c3lzdGVtcyAqLworZW51bSBjZ3JvdXBfY3RybF9pbmR4IHsKKwlDVFJMX01FTU9SWSA9IDEsCisJ
Q1RSTF9DUFVTRVQgPSAyLAorfTsKKyNkZWZpbmUgQ1RSTFNfTUFYIENUUkxfQ1BVU0VUCisKKy8q
IEF0IG1vc3Qgd2UgY2FuIGhhdmUgb25lIGNncm91cCBWMSB0cmVlIGZvciBlYWNoIGNvbnRyb2xs
ZXIgYW5kIG9uZQorICogKGVtcHR5KSB2MiB0cmVlLgorICovCisjZGVmaW5lIFJPT1RTX01BWCAo
Q1RSTFNfTUFYICsgMSkKKworLyogRGVzY3JpYmVzIGEgY29udHJvbGxlciBmaWxlIG9yIGtub2IK
KyAqCisgKiBUaGUgcHJpbWFyeSBwdXJwb3NlIG9mIHRoaXMgaXMgdG8gbWFwIFYyIG5hbWVzIHRv
IFYxCisgKiBuYW1lcy4KKyAqLworc3RydWN0IGNncm91cF9maWxlIHsKKwkvKiBDYW5vbmljYWwg
bmFtZS4gSXMgdGhlIFYyIG5hbWUgdW5sZXNzIGFuIGl0ZW0gaXMgVjEgb25seSAqLworCWNvbnN0
IGNoYXIgKmNvbnN0IGZpbGVfbmFtZTsKKwkvKiBWMSBuYW1lIG9yIE5VTEwgaWYgaXRlbSBpcyBW
MiBvbmx5ICovCisJY29uc3QgY2hhciAqY29uc3QgZmlsZV9uYW1lX3YxOworCisJLyogVGhlIGNv
bnRyb2xsZXIgdGhpcyBpdGVtIGJlbG9uZ3MgdG8gb3IgemVybyBmb3IKKwkgKiAnY2dyb3VwLjxp
dGVtPicuCisJICovCisJY29uc3QgZW51bSBjZ3JvdXBfY3RybF9pbmR4IGN0cmxfaW5keDsKK307
CisKKy8qIERlc2NyaWJlcyBhIENvbnRyb2xsZXIgb3Igc3Vic3lzdGVtCisgKgorICogSW50ZXJu
YWxseSB0aGUga2VybmVsIHNlZW1zIHRvIGNhbGwgY29udHJvbGxlcnMgc3Vic3lzdGVtcyBhbmQg
dXNlcworICogdGhlIGFiYnJldmlhdGlvbnMgc3Vic3lzIGFuZCBjc3MuCisgKi8KK3N0cnVjdCBj
Z3JvdXBfY3RybCB7CisJLyogVXNlcmxhbmQgbmFtZSBvZiB0aGUgY29udHJvbGxlciAoZS5nLiAn
bWVtb3J5JyBub3QgJ21lbWNnJykgKi8KKwljb25zdCBjaGFyICpjb25zdCBjdHJsX25hbWU7CisJ
LyogTGlzdCBvZiBmaWxlcyBiZWxvbmdpbmcgdG8gdGhpcyBjb250cm9sbGVyICovCisJY29uc3Qg
c3RydWN0IGNncm91cF9maWxlICpjb25zdCBmaWxlczsKKwkvKiBPdXIgaW5kZXggZm9yIHRoZSBj
b250cm9sbGVyICovCisJY29uc3QgZW51bSBjZ3JvdXBfY3RybF9pbmR4IGN0cmxfaW5keDsKKwor
CS8qIFJ1bnRpbWU7IGhpZXJhcmNoeSB0aGUgY29udHJvbGxlciBpcyBhdHRhY2hlZCB0byAqLwor
ICAgICAgICBzdHJ1Y3QgY2dyb3VwX3Jvb3QgKmN0cmxfcm9vdDsKKwkvKiBSdW50aW1lOyB3aGV0
aGVyIHdlIHJlcXVpcmVkIHRoZSBjb250cm9sbGVyICovCisJaW50IHdlX3JlcXVpcmVfaXQ6MTsK
K307CisKK3N0cnVjdCB0c3RfY2dyb3VwX2dyb3VwIHsKKwljaGFyIGdyb3VwX25hbWVbTkFNRV9N
QVggKyAxXTsKKwkvKiBNYXBzIGNvbnRyb2xsZXIgSUQgdG8gdGhlIHRyZWUgd2hpY2ggY29udGFp
bnMgaXQuIFRoZSBWMgorCSAqIHRyZWUgaXMgYXQgemVybyBldmVuIGlmIGl0IGNvbnRhaW5zIG5v
IGNvbnRyb2xsZXJzLgorCSAqLworCXN0cnVjdCBjZ3JvdXBfZGlyICpkaXJzX2J5X2N0cmxbUk9P
VFNfTUFYXTsKKwkvKiBOVUxMIHRlcm1pbmF0ZWQgbGlzdCBvZiB0cmVlcyAqLworCXN0cnVjdCBj
Z3JvdXBfZGlyICpkaXJzW1JPT1RTX01BWCArIDFdOworfTsKKworLyogQWx3YXlzIHVzZSBmaXJz
dCBpdGVtIGZvciB1bmlmaWVkIGhpZXJhcmNoeSAqLworc3RydWN0IGNncm91cF9yb290IHJvb3Rz
W1JPT1RTX01BWCArIDFdOworCisvKiBMb29rdXAgdHJlZSBmb3IgaXRlbSBuYW1lcy4gKi8KK3R5
cGVkZWYgc3RydWN0IGNncm91cF9maWxlIGZpbGVzX3RbXTsKKworc3RhdGljIGNvbnN0IGZpbGVz
X3QgY2dyb3VwX2N0cmxfZmlsZXMgPSB7CisJLyogcHJvY3MgZXhpc3RzIG9uIFYxLCBob3dldmVy
IGl0IHdhcyByZWFkLW9ubHkgdW50aWwga2VybmVsIHYzLjAuICovCisJeyAiY2dyb3VwLnByb2Nz
IiwgInRhc2tzIiwgMCB9LAorCXsgImNncm91cC5zdWJ0cmVlX2NvbnRyb2wiLCBOVUxMLCAwIH0s
CisJeyAiY2dyb3VwLmNsb25lX2NoaWxkcmVuIiwgImNsb25lX2NoaWxkcmVuIiwgMCB9LAorCXsg
fQorfTsKKworc3RhdGljIGNvbnN0IGZpbGVzX3QgbWVtb3J5X2N0cmxfZmlsZXMgPSB7CisJeyAi
bWVtb3J5LmN1cnJlbnQiLCAibWVtb3J5LnVzYWdlX2luX2J5dGVzIiwgQ1RSTF9NRU1PUlkgfSwK
Kwl7ICJtZW1vcnkubWF4IiwgIm1lbW9yeS5saW1pdF9pbl9ieXRlcyIsIENUUkxfTUVNT1JZIH0s
CisJeyAibWVtb3J5LnN3YXBwaW5lc3MiLCAibWVtb3J5LnN3YXBwaW5lc3MiLCBDVFJMX01FTU9S
WSB9LAorCXsgIm1lbW9yeS5zd2FwLmN1cnJlbnQiLCAibWVtb3J5Lm1lbXN3LnVzYWdlX2luX2J5
dGVzIiwgQ1RSTF9NRU1PUlkgfSwKKwl7ICJtZW1vcnkuc3dhcC5tYXgiLCAibWVtb3J5Lm1lbXN3
LmxpbWl0X2luX2J5dGVzIiwgQ1RSTF9NRU1PUlkgfSwKKwl7ICJtZW1vcnkua21lbS51c2FnZV9p
bl9ieXRlcyIsICJtZW1vcnkua21lbS51c2FnZV9pbl9ieXRlcyIsIENUUkxfTUVNT1JZIH0sCisJ
eyAibWVtb3J5LmttZW0ubGltaXRfaW5fYnl0ZXMiLCAibWVtb3J5LmttZW0udXNhZ2VfaW5fYnl0
ZXMiLCBDVFJMX01FTU9SWSB9LAorCXsgfQorfTsKKworc3RhdGljIGNvbnN0IGZpbGVzX3QgY3B1
c2V0X2N0cmxfZmlsZXMgPSB7CisJeyAiY3B1c2V0LmNwdXMiLCAiY3B1c2V0LmNwdXMiLCBDVFJM
X0NQVVNFVCB9LAorCXsgImNwdXNldC5tZW1zIiwgImNwdXNldC5tZW1zIiwgQ1RSTF9DUFVTRVQg
fSwKKwl7ICJjcHVzZXQubWVtb3J5X21pZ3JhdGUiLCAiY3B1c2V0Lm1lbW9yeV9taWdyYXRlIiwg
Q1RSTF9DUFVTRVQgfSwKKwl7IH0KK307CisKK3N0YXRpYyBzdHJ1Y3QgY2dyb3VwX2N0cmwgY29u
dHJvbGxlcnNbXSA9IHsKKwlbMF0gPSB7ICJjZ3JvdXAiLCBjZ3JvdXBfY3RybF9maWxlcywgMCwg
TlVMTCwgMCB9LAorCVtDVFJMX01FTU9SWV0gPSB7CisJCSJtZW1vcnkiLCBtZW1vcnlfY3RybF9m
aWxlcywgQ1RSTF9NRU1PUlksIE5VTEwsIDAKKwl9LAorCVtDVFJMX0NQVVNFVF0gPSB7CisJCSJj
cHVzZXQiLCBjcHVzZXRfY3RybF9maWxlcywgQ1RSTF9DUFVTRVQsIE5VTEwsIDAKKwl9LAorCXsg
fQorfTsKKworc3RhdGljIGNvbnN0IHN0cnVjdCB0c3RfY2dyb3VwX29wdHMgZGVmYXVsdF9vcHRz
ID0geyAwIH07CisKKy8qIFdlIHNob3VsZCBwcm9iYWJseSBhbGxvdyB0aGVzZSB0byBiZSBzZXQg
aW4gZW52aXJvbm1lbnQKKyAqIHZhcmlhYmxlcyAqLworc3RhdGljIGNvbnN0IGNoYXIgKmx0cF9j
Z3JvdXBfZGlyID0gImx0cCI7CitzdGF0aWMgY29uc3QgY2hhciAqbHRwX2Nncm91cF9kcmFpbl9k
aXIgPSAiZHJhaW4iOworc3RhdGljIGNoYXIgdGVzdF9jZ3JvdXBfZGlyW05BTUVfTUFYICsgMV07
CitzdGF0aWMgY29uc3QgY2hhciAqbHRwX21vdW50X3ByZWZpeCA9ICIvdG1wL2Nncm91cF8iOwor
c3RhdGljIGNvbnN0IGNoYXIgKmx0cF92Ml9tb3VudCA9ICJ1bmlmaWVkIjsKKworI2RlZmluZSBm
aXJzdF9yb290CQkJCVwKKwkocm9vdHNbMF0udmVyID8gcm9vdHMgOiByb290cyArIDEpCisjZGVm
aW5lIGZvcl9lYWNoX3Jvb3QocikJCQlcCisJZm9yICgocikgPSBmaXJzdF9yb290OyAociktPnZl
cjsgKHIpKyspCisjZGVmaW5lIGZvcl9lYWNoX3YxX3Jvb3QocikJCQlcCisJZm9yICgocikgPSBy
b290cyArIDE7IChyKS0+dmVyOyAocikrKykKKyNkZWZpbmUgZm9yX2VhY2hfY3RybChjdHJsKQkJ
CVwKKwlmb3IgKChjdHJsKSA9IGNvbnRyb2xsZXJzICsgMTsgKGN0cmwpLT5jdHJsX25hbWU7IChj
dHJsKSsrKQorCisvKiBJbiBhbGwgY2FzZXMgZXhjZXB0IG9uZSwgdGhpcyBvbmx5IGxvb3BzIG9u
Y2UuCisgKgorICogSWYgKGN0cmwpID09IDAgYW5kIG11bHRpcGxlIFYxIChhbmQgYSBWMikgaGll
cmFyY2hpZXMgYXJlIG1vdW50ZWQsCisgKiB0aGVuIHdlIG5lZWQgdG8gbG9vcCBvdmVyIG11bHRp
cGxlIGRpcmVjdG9yaWVzLiBGb3IgZXhhbXBsZSBpZiB3ZQorICogbmVlZCB0byB3cml0ZSB0byAi
dGFza3MiLyJjZ3JvdXAucHJvY3MiIHdoaWNoIGV4aXN0cyBmb3IgZWFjaAorICogaGllcmFyY2h5
LgorICovCisjZGVmaW5lIGZvcl9lYWNoX2RpcihjZywgY3RybCwgdCkJCQkJCVwKKwlmb3IgKCh0
KSA9IChjdHJsKSA/IChjZyktPmRpcnNfYnlfY3RybCArIChjdHJsKSA6IChjZyktPmRpcnM7CVwK
KwkgICAgICoodCk7CQkJCQkJCVwKKwkgICAgICh0KSA9IChjdHJsKSA/IChjZyktPmRpcnMgKyBS
T09UU19NQVggOiAodCkgKyAxKQorCitzdGF0aWMgaW50IGhhc19jdHJsKGNvbnN0IHVpbnQzMl90
IGN0cmxfZmllbGQsIGNvbnN0IHN0cnVjdCBjZ3JvdXBfY3RybCAqY3RybCkKIHsKLQljaGFyIGxp
bmVbUEFUSF9NQVhdOwotCUZJTEUgKmZpbGU7Ci0JaW50IGNnX2NoZWNrID0gMDsKKwlyZXR1cm4g
ISEoY3RybF9maWVsZCAmICgxIDw8IGN0cmwtPmN0cmxfaW5keCkpOworfQogCi0JZmlsZSA9IFNB
RkVfRk9QRU4oIi9wcm9jL2ZpbGVzeXN0ZW1zIiwgInIiKTsKLQl3aGlsZSAoZmdldHMobGluZSwg
c2l6ZW9mKGxpbmUpLCBmaWxlKSkgewotCQlpZiAoc3Ryc3RyKGxpbmUsIGNncm91cCkgIT0gTlVM
TCkgewotCQkJY2dfY2hlY2sgPSAxOwotCQkJYnJlYWs7Ci0JCX0KK3N0YXRpYyB2b2lkIGFkZF9j
dHJsKHVpbnQzMl90ICpjb25zdCBjdHJsX2ZpZWxkLCBjb25zdCBzdHJ1Y3QgY2dyb3VwX2N0cmwg
KmN0cmwpCit7CisJKmN0cmxfZmllbGQgfD0gMSA8PCBjdHJsLT5jdHJsX2luZHg7Cit9CisKK3N0
cnVjdCBjZ3JvdXBfcm9vdCAqdHN0X2Nncm91cF9yb290X2dldCh2b2lkKQoreworCXJldHVybiBy
b290c1swXS52ZXIgPyByb290cyA6IHJvb3RzICsgMTsKK30KKworc3RhdGljIGludCBjZ3JvdXBf
djJfbW91bnRlZCh2b2lkKQoreworCXJldHVybiAhIXJvb3RzWzBdLnZlcjsKK30KKworc3RhdGlj
IGludCBjZ3JvdXBfdjFfbW91bnRlZCh2b2lkKQoreworCXJldHVybiAhIXJvb3RzWzFdLnZlcjsK
K30KKworc3RhdGljIGludCBjZ3JvdXBfbW91bnRlZCh2b2lkKQoreworCXJldHVybiBjZ3JvdXBf
djJfbW91bnRlZCgpIHx8IGNncm91cF92MV9tb3VudGVkKCk7Cit9CisKK3N0YXRpYyBpbnQgY2dy
b3VwX2N0cmxfb25fdjIoY29uc3Qgc3RydWN0IGNncm91cF9jdHJsICpjb25zdCBjdHJsKQorewor
CXJldHVybiBjdHJsLT5jdHJsX3Jvb3QgJiYgY3RybC0+Y3RybF9yb290LT52ZXIgPT0gVFNUX0NH
Uk9VUF9WMjsKK30KKworaW50IGNncm91cF9kaXJfbWsoY29uc3Qgc3RydWN0IGNncm91cF9kaXIg
KmNvbnN0IHBhcmVudCwKKwkJICBjb25zdCBjaGFyICpjb25zdCBkaXJfbmFtZSwKKwkJICBzdHJ1
Y3QgY2dyb3VwX2RpciAqY29uc3QgbmV3KQoreworCWNoYXIgKmRwYXRoOworCisJbmV3LT5kaXJf
cm9vdCA9IHBhcmVudC0+ZGlyX3Jvb3Q7CisJbmV3LT5kaXJfbmFtZSA9IGRpcl9uYW1lOworCW5l
dy0+ZGlyX3BhcmVudCA9IHBhcmVudDsKKwluZXctPmN0cmxfZmllbGQgPSBwYXJlbnQtPmN0cmxf
ZmllbGQ7CisJbmV3LT53ZV9jcmVhdGVkX2l0ID0gMDsKKworCWlmICghbWtkaXJhdChwYXJlbnQt
PmRpcl9mZCwgZGlyX25hbWUsIDA3NzcpKSB7CisJCW5ldy0+d2VfY3JlYXRlZF9pdCA9IDE7CisJ
CWdvdG8gb3BlbmRpcjsKKwl9CisKKwlpZiAoZXJybm8gPT0gRUVYSVNUKQorCQlnb3RvIG9wZW5k
aXI7CisKKwlkcGF0aCA9IHRzdF9kZWNvZGVfZmQocGFyZW50LT5kaXJfZmQpOworCisJaWYgKGVy
cm5vID09IEVBQ0NFUykgeworCQl0c3RfYnJrKFRDT05GIHwgVEVSUk5PLAorCQkJIkxhY2sgcGVy
bWlzc2lvbiB0byBtYWtlICclcy8lcyc7IHByZW1ha2UgaXQgb3IgcnVuIGFzIHJvb3QiLAorCQkJ
ZHBhdGgsIGRpcl9uYW1lKTsKKwl9IGVsc2UgeworCQl0c3RfYnJrKFRCUk9LIHwgVEVSUk5PLAor
CQkJIm1rZGlyYXQoJWQ8JXM+LCAnJXMnLCAwNzc3KSIsCisJCQlwYXJlbnQtPmRpcl9mZCwgZHBh
dGgsIGRpcl9uYW1lKTsKIAl9Ci0JU0FGRV9GQ0xPU0UoZmlsZSk7CiAKLQlyZXR1cm4gY2dfY2hl
Y2s7CisJcmV0dXJuIC0xOworb3BlbmRpcjoKKwluZXctPmRpcl9mZCA9IFNBRkVfT1BFTkFUKHBh
cmVudC0+ZGlyX2ZkLCBkaXJfbmFtZSwKKwkJCQkgIE9fUEFUSCB8IE9fRElSRUNUT1JZKTsKKwor
CXJldHVybiAwOwogfQogCi1lbnVtIHRzdF9jZ3JvdXBfdmVyIHRzdF9jZ3JvdXBfdmVyc2lvbih2
b2lkKQordm9pZCB0c3RfY2dyb3VwX3ByaW50X2NvbmZpZyh2b2lkKQogewotICAgICAgICBlbnVt
IHRzdF9jZ3JvdXBfdmVyIGNnX3ZlcjsKKwlzdHJ1Y3QgY2dyb3VwX3Jvb3QgKnJvb3Q7CisJY29u
c3Qgc3RydWN0IGNncm91cF9jdHJsICpjdHJsOworCisJdHN0X3JlcyhUSU5GTywgIkRldGVjdGVk
IENvbnRyb2xsZXJzOiIpOworCisJZm9yX2VhY2hfY3RybChjdHJsKSB7CisJCXJvb3QgPSBjdHJs
LT5jdHJsX3Jvb3Q7CiAKLSAgICAgICAgaWYgKHRzdF9jZ3JvdXBfY2hlY2soImNncm91cDIiKSkg
ewotICAgICAgICAgICAgICAgIGlmICghdHN0X2lzX21vdW50ZWQoImNncm91cDIiKSAmJiB0c3Rf
aXNfbW91bnRlZCgiY2dyb3VwIikpCi0gICAgICAgICAgICAgICAgICAgICAgICBjZ192ZXIgPSBU
U1RfQ0dST1VQX1YxOwotICAgICAgICAgICAgICAgIGVsc2UKLSAgICAgICAgICAgICAgICAgICAg
ICAgIGNnX3ZlciA9IFRTVF9DR1JPVVBfVjI7CisJCWlmICghcm9vdCkKKwkJCWNvbnRpbnVlOwog
Ci0gICAgICAgICAgICAgICAgZ290byBvdXQ7Ci0gICAgICAgIH0KKwkJdHN0X3JlcyhUSU5GTywg
Ilx0JS4xMHMgJXMgQCAlczolcyIsCisJCQljdHJsLT5jdHJsX25hbWUsCisJCQlyb290LT5ub19j
cHVzZXRfcHJlZml4ID8gIltub3ByZWZpeF0iIDogIiIsCisJCQlyb290LT52ZXIgPT0gVFNUX0NH
Uk9VUF9WMSA/ICJWMSIgOiAiVjIiLAorCQkJcm9vdC0+bW50X3BhdGgpOworCX0KK30KKworc3Rh
dGljIHN0cnVjdCBjZ3JvdXBfY3RybCAqY2dyb3VwX2ZpbmRfY3RybChjb25zdCBjaGFyICpjb25z
dCBjdHJsX25hbWUpCit7CisJc3RydWN0IGNncm91cF9jdHJsICpjdHJsID0gY29udHJvbGxlcnM7
CiAKLSAgICAgICAgaWYgKHRzdF9jZ3JvdXBfY2hlY2soImNncm91cCIpKQotICAgICAgICAgICAg
ICAgIGNnX3ZlciA9IFRTVF9DR1JPVVBfVjE7CisJd2hpbGUgKGN0cmwtPmN0cmxfbmFtZSAmJiBz
dHJjbXAoY3RybF9uYW1lLCBjdHJsLT5jdHJsX25hbWUpKQorCQljdHJsKys7CiAKLSAgICAgICAg
aWYgKCFjZ192ZXIpCi0gICAgICAgICAgICAgICAgdHN0X2JyayhUQ09ORiwgIkNncm91cCBpcyBu
b3QgY29uZmlndXJlZCIpOworCWlmICghY3RybC0+Y3RybF9uYW1lKQorCQljdHJsID0gTlVMTDsK
IAotb3V0OgotICAgICAgICByZXR1cm4gY2dfdmVyOworCXJldHVybiBjdHJsOwogfQogCi1zdGF0
aWMgdm9pZCB0c3RfY2dyb3VwMV9tb3VudChjb25zdCBjaGFyICpuYW1lLCBjb25zdCBjaGFyICpv
cHRpb24sCi0JCQljb25zdCBjaGFyICptbnRfcGF0aCwgY29uc3QgY2hhciAqbmV3X3BhdGgpCisv
KiBEZXRlcm1pbmUgaWYgYSBtb3VudGVkIGNncm91cCBoaWVyYXJjaHkgaXMgdW5pcXVlIGFuZCBy
ZWNvcmQgaXQgaWYgc28uCisgKgorICogRm9yIENHcm91cHMgVjIgdGhpcyBpcyB2ZXJ5IHNpbXBs
ZSBhcyB0aGVyZSBpcyBvbmx5IG9uZQorICogaGllcmFyY2h5LiBXZSBqdXN0IHJlY29yZCB3aGlj
aCBjb250cm9sbGVycyBhcmUgYXZhaWxhYmxlIGFuZCBjaGVjaworICogaWYgdGhpcyBtYXRjaGVz
IHdoYXQgd2UgcmVhZCBmcm9tIGFueSBwcmV2aW91cyBtb3VudCBwb2ludHMuCisgKgorICogRm9y
IFYxIHRoZSBzZXQgb2YgY29udHJvbGxlcnMgUyBpcyBwYXJ0aXRpb25lZCBpbnRvIHNldHMge1Bf
MSwgUF8yLAorICogLi4uLCBQX259IHdpdGggb25lIG9yIG1vcmUgY29udHJvbGxlcnMgaW4gZWFj
aCBwYXJ0aW9uLiBFYWNoCisgKiBwYXJ0aXRpb24gUF9uIGNhbiBiZSBtb3VudGVkIG11bHRpcGxl
IHRpbWVzLCBidXQgdGhlIHNhbWUKKyAqIGNvbnRyb2xsZXIgY2FuIG5vdCBhcHBlYXIgaW4gbW9y
ZSB0aGFuIG9uZSBwYXJ0aXRpb24uIFVzdWFsbHkgZWFjaAorICogcGFydGl0aW9uIGNvbnRhaW5z
IGEgc2luZ2xlIGNvbnRyb2xsZXIsIGJ1dCwgZm9yIGV4YW1wbGUsIGNwdSBhbmQKKyAqIGNwdWFj
Y3QgYXJlIG9mdGVuIG1vdW50ZWQgdG9nZXRoZXIgaW4gdGhlIHNhbWUgcGFydGlpb24uCisgKgor
ICogRWFjaCBjb250cm9sbGVyIHBhcnRpdGlvbiBoYXMgaXRzIG93biBoaWVyYXJjaHkgKHJvb3Qp
IHdoaWNoIHdlCisgKiBtdXN0IHRyYWNrIGFuZCB1cGRhdGUgaW5kZXBlbmRlbnRseS4KKyAqLwor
c3RhdGljIHZvaWQgY2dyb3VwX3Jvb3Rfc2Nhbihjb25zdCBjaGFyICpjb25zdCBtbnRfdHlwZSwK
KwkJCSAgICAgY29uc3QgY2hhciAqY29uc3QgbW50X2RpciwKKwkJCSAgICAgY2hhciAqY29uc3Qg
bW50X29wdHMpCiB7Ci0JY2hhciBrbm9iX3BhdGhbUEFUSF9NQVhdOwotCWlmICh0c3RfaXNfbW91
bnRlZChtbnRfcGF0aCkpCi0JCWdvdG8gb3V0OworCXN0cnVjdCBjZ3JvdXBfcm9vdCAqcm9vdCA9
IHJvb3RzOworCWNvbnN0IHN0cnVjdCBjZ3JvdXBfY3RybCAqY29uc3RfY3RybDsKKwlzdHJ1Y3Qg
Y2dyb3VwX2N0cmwgKmN0cmw7CisJdWludDMyX3QgY3RybF9maWVsZCA9IDA7CisJaW50IG5vX3By
ZWZpeCA9IDA7CisJY2hhciBidWZbQlVGU0laXTsKKwljaGFyICp0b2s7CisJY29uc3QgaW50IG1u
dF9kZmQgPSBTQUZFX09QRU4obW50X2RpciwgT19QQVRIIHwgT19ESVJFQ1RPUlkpOworCisJaWYg
KCFzdHJjbXAobW50X3R5cGUsICJjZ3JvdXAiKSkKKwkJZ290byB2MTsKKworCVNBRkVfRklMRV9S
RUFEQVQobW50X2RmZCwgImNncm91cC5jb250cm9sbGVycyIsIGJ1Ziwgc2l6ZW9mKGJ1ZikpOwor
CisJZm9yICh0b2sgPSBzdHJ0b2soYnVmLCAiICIpOyB0b2s7IHRvayA9IHN0cnRvayhOVUxMLCAi
ICIpKSB7CisJCWlmICgoY29uc3RfY3RybCA9IGNncm91cF9maW5kX2N0cmwodG9rKSkpCisJCQlh
ZGRfY3RybCgmY3RybF9maWVsZCwgY29uc3RfY3RybCk7CisJfQogCi0JU0FGRV9NS0RJUihtbnRf
cGF0aCwgMDc3Nyk7Ci0JaWYgKG1vdW50KG5hbWUsIG1udF9wYXRoLCAiY2dyb3VwIiwgMCwgb3B0
aW9uKSA9PSAtMSkgewotCQlpZiAoZXJybm8gPT0gRU5PREVWKSB7Ci0JCQlpZiAocm1kaXIobW50
X3BhdGgpID09IC0xKQotCQkJCXRzdF9yZXMoVFdBUk4gfCBURVJSTk8sICJybWRpciAlcyBmYWls
ZWQiLCBtbnRfcGF0aCk7Ci0JCQl0c3RfYnJrKFRDT05GLAotCQkJCSAiQ2dyb3VwIHYxIGlzIG5v
dCBjb25maWd1cmVkIGluIGtlcm5lbCIpOwotCQl9Ci0JCXRzdF9icmsoVEJST0sgfCBURVJSTk8s
ICJtb3VudCAlcyIsIG1udF9wYXRoKTsKKwlpZiAocm9vdC0+dmVyICYmIGN0cmxfZmllbGQgPT0g
cm9vdC0+Y3RybF9maWVsZCkKKwkJZ290byBkaXNjYXJkOworCisJaWYgKHJvb3QtPmN0cmxfZmll
bGQpCisJCXRzdF9icmsoVEJST0ssICJBdmFpbGFibGUgVjIgY29udHJvbGxlcnMgYXJlIGNoYW5n
aW5nIGJldHdlZW4gc2NhbnM/Iik7CisKKwlyb290LT52ZXIgPSBUU1RfQ0dST1VQX1YyOworCisJ
Z290byBiYWNrcmVmOworCit2MToKKwlmb3IgKHRvayA9IHN0cnRvayhtbnRfb3B0cywgIiwiKTsg
dG9rOyB0b2sgPSBzdHJ0b2soTlVMTCwgIiwiKSkgeworCQlpZiAoKGNvbnN0X2N0cmwgPSBjZ3Jv
dXBfZmluZF9jdHJsKHRvaykpKQorCQkJYWRkX2N0cmwoJmN0cmxfZmllbGQsIGNvbnN0X2N0cmwp
OworCisJCW5vX3ByZWZpeCB8PSAhc3RyY21wKCJub3ByZWZpeCIsIHRvayk7CiAJfQogCi0JLyoK
LQkgKiBXZSBzaG91bGQgYXNzaWduIG9uZSBvciBtb3JlIG1lbW9yeSBub2RlcyB0byBjcHVzZXQu
bWVtcyBhbmQKLQkgKiBjcHVzZXQuY3B1cywgb3RoZXJ3aXNlLCBlY2hvICQkID4gdGFza3MgZ2l2
ZXMg4oCcRU5PU1BDOiBubyBzcGFjZQotCSAqIGxlZnQgb24gZGV2aWNl4oCdIHdoZW4gdHJ5aW5n
IHRvIHVzZSBjcHVzZXQuCi0JICoKLQkgKiBPciwgc2V0dGluZyBjZ3JvdXAuY2xvbmVfY2hpbGRy
ZW4gdG8gMSBjYW4gaGVscCBpbiBhdXRvbWF0aWNhbGx5Ci0JICogaW5oZXJpdGluZyBtZW1vcnkg
YW5kIG5vZGUgc2V0dGluZyBmcm9tIHBhcmVudCBjZ3JvdXAgd2hlbiBhCi0JICogY2hpbGQgY2dy
b3VwIGlzIGNyZWF0ZWQuCi0JICovCi0JaWYgKHN0cmNtcChvcHRpb24sICJjcHVzZXQiKSA9PSAw
KSB7Ci0JCXNwcmludGYoa25vYl9wYXRoLCAiJXMvY2dyb3VwLmNsb25lX2NoaWxkcmVuIiwgbW50
X3BhdGgpOwotCQlTQUZFX0ZJTEVfU0NBTkYoa25vYl9wYXRoLCAiJWQiLCAmY2xvbmVfY2hpbGRy
ZW4pOwotCQlTQUZFX0ZJTEVfUFJJTlRGKGtub2JfcGF0aCwgIiVkIiwgMSk7CisJaWYgKCFjdHJs
X2ZpZWxkKQorCQlnb3RvIGRpc2NhcmQ7CisKKwlmb3JfZWFjaF92MV9yb290KHJvb3QpIHsKKwkJ
aWYgKCEoY3RybF9maWVsZCAmIHJvb3QtPmN0cmxfZmllbGQpKQorCQkJY29udGludWU7CisKKwkJ
aWYgKGN0cmxfZmllbGQgPT0gcm9vdC0+Y3RybF9maWVsZCkKKwkJCWdvdG8gZGlzY2FyZDsKKwor
CQl0c3RfYnJrKFRCUk9LLAorCQkJIlRoZSBpbnRlcnNlY3Rpb24gb2YgdHdvIGRpc3RpbmN0IHNl
dHMgb2YgbW91bnRlZCBjb250cm9sbGVycyBzaG91bGQgYmUgbnVsbD8iCisJCQkiQ2hlY2sgJyVz
JyBhbmQgJyVzJyIsIHJvb3QtPm1udF9wYXRoLCBtbnRfZGlyKTsKIAl9Ci1vdXQ6Ci0JU0FGRV9N
S0RJUihuZXdfcGF0aCwgMDc3Nyk7CiAKLQl0c3RfcmVzKFRJTkZPLCAiQ2dyb3VwKCVzKSB2MSBt
b3VudCBhdCAlcyBzdWNjZXNzIiwgb3B0aW9uLCBtbnRfcGF0aCk7CisJaWYgKHJvb3QgPj0gcm9v
dHMgKyBST09UU19NQVgpIHsKKwkJdHN0X2JyayhUQlJPSywKKwkJCSJVbmlxdWUgY29udHJvbGxl
ciBtb3VudHMgaGF2ZSBleGNlZWRlZCBvdXIgbGltaXQgJWQ/IiwKKwkJCVJPT1RTX01BWCk7CisJ
fQorCisJcm9vdC0+dmVyID0gVFNUX0NHUk9VUF9WMTsKKworYmFja3JlZjoKKwlzdHJjcHkocm9v
dC0+bW50X3BhdGgsIG1udF9kaXIpOworCXJvb3QtPm1udF9kaXIuZGlyX3Jvb3QgPSByb290Owor
CXJvb3QtPm1udF9kaXIuZGlyX25hbWUgPSByb290LT5tbnRfcGF0aDsKKwlyb290LT5tbnRfZGly
LmRpcl9mZCA9IG1udF9kZmQ7CisJcm9vdC0+Y3RybF9maWVsZCA9IGN0cmxfZmllbGQ7CisJcm9v
dC0+bm9fY3B1c2V0X3ByZWZpeCA9IG5vX3ByZWZpeDsKKworCWZvcl9lYWNoX2N0cmwoY3RybCkg
eworCQlpZiAoaGFzX2N0cmwocm9vdC0+Y3RybF9maWVsZCwgY3RybCkpCisJCQljdHJsLT5jdHJs
X3Jvb3QgPSByb290OworCX0KKworCXJldHVybjsKKworZGlzY2FyZDoKKwljbG9zZShtbnRfZGZk
KTsKIH0KIAotc3RhdGljIHZvaWQgdHN0X2Nncm91cDJfbW91bnQoY29uc3QgY2hhciAqbW50X3Bh
dGgsIGNvbnN0IGNoYXIgKm5ld19wYXRoKQordm9pZCB0c3RfY2dyb3VwX3NjYW4odm9pZCkKIHsK
LQlpZiAodHN0X2lzX21vdW50ZWQobW50X3BhdGgpKQotCQlnb3RvIG91dDsKKwlzdHJ1Y3QgbW50
ZW50ICptbnQ7CisJRklMRSAqZiA9IHNldG1udGVudCgiL3Byb2Mvc2VsZi9tb3VudHMiLCAiciIp
OwogCi0JU0FGRV9NS0RJUihtbnRfcGF0aCwgMDc3Nyk7Ci0JaWYgKG1vdW50KCJjZ3JvdXAyIiwg
bW50X3BhdGgsICJjZ3JvdXAyIiwgMCwgTlVMTCkgPT0gLTEpIHsKLQkJaWYgKGVycm5vID09IEVO
T0RFVikgewotCQkJaWYgKHJtZGlyKG1udF9wYXRoKSA9PSAtMSkKLQkJCQl0c3RfcmVzKFRXQVJO
IHwgVEVSUk5PLCAicm1kaXIgJXMgZmFpbGVkIiwgbW50X3BhdGgpOwotCQkJdHN0X2JyayhUQ09O
RiwKLQkJCQkgIkNncm91cCB2MiBpcyBub3QgY29uZmlndXJlZCBpbiBrZXJuZWwiKTsKLQkJfQot
CQl0c3RfYnJrKFRCUk9LIHwgVEVSUk5PLCAibW91bnQgJXMiLCBtbnRfcGF0aCk7CisJaWYgKCFm
KSB7CisJCXRzdF9icmsoVEJST0sgfCBURVJSTk8sICJDYW4ndCBvcGVuIC9wcm9jL3NlbGYvbW91
bnRzIik7CisJCXJldHVybjsKIAl9CiAKLW91dDoKLQlTQUZFX01LRElSKG5ld19wYXRoLCAwNzc3
KTsKKwltbnQgPSBnZXRtbnRlbnQoZik7CisJaWYgKCFtbnQpIHsKKwkJdHN0X2JyayhUQlJPSyB8
IFRFUlJOTywgIkNhbid0IHJlYWQgbW91bnRzIG9yIG5vIG1vdW50cz8iKTsKKwkJcmV0dXJuOwor
CX0KIAotCXRzdF9yZXMoVElORk8sICJDZ3JvdXAgdjIgbW91bnQgYXQgJXMgc3VjY2VzcyIsIG1u
dF9wYXRoKTsKKwlkbyB7CisgICAgICAgICAgICAgICAgaWYgKHN0cm5jbXAobW50LT5tbnRfdHlw
ZSwgImNncm91cCIsIDYpKQorCQkJY29udGludWU7CisKKwkJY2dyb3VwX3Jvb3Rfc2NhbihtbnQt
Pm1udF90eXBlLCBtbnQtPm1udF9kaXIsIG1udC0+bW50X29wdHMpOworCX0gd2hpbGUgKChtbnQg
PSBnZXRtbnRlbnQoZikpKTsKIH0KIAotc3RhdGljIHZvaWQgdHN0X2Nncm91cE5fdW1vdW50KGNv
bnN0IGNoYXIgKm1udF9wYXRoLCBjb25zdCBjaGFyICpuZXdfcGF0aCkKK3N0YXRpYyB2b2lkIGNn
cm91cF9tb3VudF92Mih2b2lkKQogewotCUZJTEUgKmZwOwotCWludCBmZDsKLQljaGFyIHNfbmV3
W0JVRlNJWl0sIHNbQlVGU0laXSwgdmFsdWVbQlVGU0laXTsKLQljaGFyIGtub2JfcGF0aFtQQVRI
X01BWF07CisJY2hhciBtbnRfcGF0aFtQQVRIX01BWF07CiAKLQlpZiAoIXRzdF9pc19tb3VudGVk
KG1udF9wYXRoKSkKKwlzcHJpbnRmKG1udF9wYXRoLCAiJXMlcyIsIGx0cF9tb3VudF9wcmVmaXgs
IGx0cF92Ml9tb3VudCk7CisKKwlpZiAoIW1rZGlyKG1udF9wYXRoLCAwNzc3KSkgeworCQlyb290
c1swXS5tbnRfZGlyLndlX2NyZWF0ZWRfaXQgPSAxOworCQlnb3RvIG1vdW50OworCX0KKworCWlm
IChlcnJubyA9PSBFRVhJU1QpCisJCWdvdG8gbW91bnQ7CisKKwlpZiAoZXJybm8gPT0gRUFDQ0VT
KSB7CisJCXRzdF9yZXMoVElORk8gfCBURVJSTk8sCisJCQkiTGFjayBwZXJtaXNzaW9uIHRvIG1h
a2UgJXMsIHByZW1ha2UgaXQgb3IgcnVuIGFzIHJvb3QiLAorCQkJbW50X3BhdGgpOwogCQlyZXR1
cm47CisJfQogCi0JLyogTW92ZSBhbGwgcHJvY2Vzc2VzIGluIHRhc2sodjI6IGNncm91cC5wcm9j
cykgdG8gaXRzIHBhcmVudCBub2RlLiAqLwotCWlmICh0c3RfY2dfdmVyICYgVFNUX0NHUk9VUF9W
MSkKLQkJc3ByaW50ZihzLCAiJXMvdGFza3MiLCBtbnRfcGF0aCk7Ci0JaWYgKHRzdF9jZ192ZXIg
JiBUU1RfQ0dST1VQX1YyKQotCQlzcHJpbnRmKHMsICIlcy9jZ3JvdXAucHJvY3MiLCBtbnRfcGF0
aCk7Ci0KLQlmZCA9IG9wZW4ocywgT19XUk9OTFkpOwotCWlmIChmZCA9PSAtMSkKLQkJdHN0X3Jl
cyhUV0FSTiB8IFRFUlJOTywgIm9wZW4gJXMiLCBzKTsKLQotCWlmICh0c3RfY2dfdmVyICYgVFNU
X0NHUk9VUF9WMSkKLQkJc25wcmludGYoc19uZXcsIEJVRlNJWiwgIiVzL3Rhc2tzIiwgbmV3X3Bh
dGgpOwotCWlmICh0c3RfY2dfdmVyICYgVFNUX0NHUk9VUF9WMikKLQkJc25wcmludGYoc19uZXcs
IEJVRlNJWiwgIiVzL2Nncm91cC5wcm9jcyIsIG5ld19wYXRoKTsKLQotCWZwID0gZm9wZW4oc19u
ZXcsICJyIik7Ci0JaWYgKGZwID09IE5VTEwpCi0JCXRzdF9yZXMoVFdBUk4gfCBURVJSTk8sICJm
b3BlbiAlcyIsIHNfbmV3KTsKLQlpZiAoKGZkICE9IC0xKSAmJiAoZnAgIT0gTlVMTCkpIHsKLQkJ
d2hpbGUgKGZnZXRzKHZhbHVlLCBCVUZTSVosIGZwKSAhPSBOVUxMKQotCQkJaWYgKHdyaXRlKGZk
LCB2YWx1ZSwgc3RybGVuKHZhbHVlKSAtIDEpCi0JCQkgICAgIT0gKHNzaXplX3Qpc3RybGVuKHZh
bHVlKSAtIDEpCi0JCQkJdHN0X3JlcyhUV0FSTiB8IFRFUlJOTywgIndyaXRlICVzIiwgcyk7Ci0J
fQotCWlmICh0c3RfY2dfdmVyICYgVFNUX0NHUk9VUF9WMSkgewotCQlzcHJpbnRmKGtub2JfcGF0
aCwgIiVzL2NwdXNldC5jcHVzIiwgbW50X3BhdGgpOwotCQlpZiAoIWFjY2Vzcyhrbm9iX3BhdGgs
IEZfT0spKSB7Ci0JCQlzcHJpbnRmKGtub2JfcGF0aCwgIiVzL2Nncm91cC5jbG9uZV9jaGlsZHJl
biIsIG1udF9wYXRoKTsKLQkJCVNBRkVfRklMRV9QUklOVEYoa25vYl9wYXRoLCAiJWQiLCBjbG9u
ZV9jaGlsZHJlbik7Ci0JCX0KKwl0c3RfYnJrKFRCUk9LIHwgVEVSUk5PLCAibWtkaXIoJXMsIDA3
NzcpIiwgbW50X3BhdGgpOworCXJldHVybjsKKworbW91bnQ6CisJaWYgKCFtb3VudCgiY2dyb3Vw
MiIsIG1udF9wYXRoLCAiY2dyb3VwMiIsIDAsIE5VTEwpKSB7CisJCXRzdF9yZXMoVElORk8sICJN
b3VudGVkIFYyIENHcm91cHMgb24gJXMiLCBtbnRfcGF0aCk7CisJCXRzdF9jZ3JvdXBfc2Nhbigp
OworCQlyb290c1swXS53ZV9tb3VudGVkX2l0ID0gMTsKKwkJcmV0dXJuOwogCX0KLQlpZiAoZmQg
IT0gLTEpCi0JCWNsb3NlKGZkKTsKLQlpZiAoZnAgIT0gTlVMTCkKLQkJZmNsb3NlKGZwKTsKLQlp
ZiAocm1kaXIobmV3X3BhdGgpID09IC0xKQotCQl0c3RfcmVzKFRXQVJOIHwgVEVSUk5PLCAicm1k
aXIgJXMiLCBuZXdfcGF0aCk7Ci0JaWYgKHVtb3VudChtbnRfcGF0aCkgPT0gLTEpCi0JCXRzdF9y
ZXMoVFdBUk4gfCBURVJSTk8sICJ1bW91bnQgJXMiLCBtbnRfcGF0aCk7Ci0JaWYgKHJtZGlyKG1u
dF9wYXRoKSA9PSAtMSkKLQkJdHN0X3JlcyhUV0FSTiB8IFRFUlJOTywgInJtZGlyICVzIiwgbW50
X3BhdGgpOwotCi0JaWYgKHRzdF9jZ192ZXIgJiBUU1RfQ0dST1VQX1YxKQotCQl0c3RfcmVzKFRJ
TkZPLCAiQ2dyb3VwIHYxIHVubW91bnQgc3VjY2VzcyIpOwotCWlmICh0c3RfY2dfdmVyICYgVFNU
X0NHUk9VUF9WMikKLQkJdHN0X3JlcyhUSU5GTywgIkNncm91cCB2MiB1bm1vdW50IHN1Y2Nlc3Mi
KTsKLX0KLQotc3RydWN0IHRzdF9jZ3JvdXBfcGF0aCB7Ci0JY2hhciAqbW50X3BhdGg7Ci0JY2hh
ciAqbmV3X3BhdGg7Ci0Jc3RydWN0IHRzdF9jZ3JvdXBfcGF0aCAqbmV4dDsKLX07CiAKLXN0YXRp
YyBzdHJ1Y3QgdHN0X2Nncm91cF9wYXRoICp0c3RfY2dyb3VwX3BhdGhzOworCXRzdF9yZXMoVElO
Rk8gfCBURVJSTk8sICJDb3VsZCBub3QgbW91bnQgVjIgQ0dyb3VwcyBvbiAlcyIsIG1udF9wYXRo
KTsKIAotc3RhdGljIHZvaWQgdHN0X2Nncm91cF9zZXRfcGF0aChjb25zdCBjaGFyICpjZ3JvdXBf
ZGlyKQorCWlmIChyb290c1swXS5tbnRfZGlyLndlX2NyZWF0ZWRfaXQpIHsKKwkJcm9vdHNbMF0u
bW50X2Rpci53ZV9jcmVhdGVkX2l0ID0gMDsKKwkJU0FGRV9STURJUihtbnRfcGF0aCk7CisJfQor
fQorCitzdGF0aWMgdm9pZCBjZ3JvdXBfbW91bnRfdjEoc3RydWN0IGNncm91cF9jdHJsICpjb25z
dCBjdHJsKQogewotCWNoYXIgY2dyb3VwX25ld19kaXJbUEFUSF9NQVhdOwotCXN0cnVjdCB0c3Rf
Y2dyb3VwX3BhdGggKnRzdF9jZ3JvdXBfcGF0aCwgKmE7CisJY2hhciBtbnRfcGF0aFtQQVRIX01B
WF07CisJaW50IG1hZGVfZGlyID0gMDsKIAotCWlmICghY2dyb3VwX2RpcikKLQkJdHN0X2JyayhU
QlJPSywgIkludmFsaWQgY2dyb3VwIGRpciwgcGxlc2UgY2hlY2sgY2dyb3VwX2RpciIpOworCXNw
cmludGYobW50X3BhdGgsICIlcyVzIiwgbHRwX21vdW50X3ByZWZpeCwgY3RybC0+Y3RybF9uYW1l
KTsKIAotCXNwcmludGYoY2dyb3VwX25ld19kaXIsICIlcy9sdHBfJWQiLCBjZ3JvdXBfZGlyLCBy
YW5kKCkpOworCWlmICghbWtkaXIobW50X3BhdGgsIDA3NzcpKSB7CisJCW1hZGVfZGlyID0gMTsK
KwkJZ290byBtb3VudDsKKwl9CiAKLQkvKiBUbyBzdG9yZSBjZ3JvdXAgcGF0aCBpbiB0aGUgJ3Bh
dGgnIGxpc3QgKi8KLQl0c3RfY2dyb3VwX3BhdGggPSBTQUZFX01BTExPQyhzaXplb2Yoc3RydWN0
IHRzdF9jZ3JvdXBfcGF0aCkpOwotCXRzdF9jZ3JvdXBfcGF0aC0+bW50X3BhdGggPSBTQUZFX01B
TExPQyhzdHJsZW4oY2dyb3VwX2RpcikgKyAxKTsKLQl0c3RfY2dyb3VwX3BhdGgtPm5ld19wYXRo
ID0gU0FGRV9NQUxMT0Moc3RybGVuKGNncm91cF9uZXdfZGlyKSArIDEpOwotCXRzdF9jZ3JvdXBf
cGF0aC0+bmV4dCA9IE5VTEw7CisJaWYgKGVycm5vID09IEVFWElTVCkKKwkJZ290byBtb3VudDsK
IAotCWlmICghdHN0X2Nncm91cF9wYXRocykgewotCQl0c3RfY2dyb3VwX3BhdGhzID0gdHN0X2Nn
cm91cF9wYXRoOwotCX0gZWxzZSB7Ci0JCWEgPSB0c3RfY2dyb3VwX3BhdGhzOwotCQlkbyB7Ci0J
CQlpZiAoIWEtPm5leHQpIHsKLQkJCQlhLT5uZXh0ID0gdHN0X2Nncm91cF9wYXRoOwotCQkJCWJy
ZWFrOwotCQkJfQotCQkJYSA9IGEtPm5leHQ7Ci0JCX0gd2hpbGUgKGEpOworCWlmIChlcnJubyA9
PSBFQUNDRVMpIHsKKwkJdHN0X3JlcyhUSU5GTyB8IFRFUlJOTywKKwkJCSJMYWNrIHBlcm1pc3Np
b24gdG8gbWFrZSAlcywgcHJlbWFrZSBpdCBvciBydW4gYXMgcm9vdCIsCisJCQltbnRfcGF0aCk7
CisJCXJldHVybjsKKwl9CisKKwl0c3RfYnJrKFRCUk9LIHwgVEVSUk5PLCAibWtkaXIoJXMsIDA3
NzcpIiwgbW50X3BhdGgpOworCXJldHVybjsKKworbW91bnQ6CisJaWYgKG1vdW50KGN0cmwtPmN0
cmxfbmFtZSwgbW50X3BhdGgsICJjZ3JvdXAiLCAwLCBjdHJsLT5jdHJsX25hbWUpKSB7CisJCXRz
dF9yZXMoVElORk8gfCBURVJSTk8sCisJCQkiQ291bGQgbm90IG1vdW50IFYxIENHcm91cCBvbiAl
cyIsIG1udF9wYXRoKTsKKworCQlpZiAobWFkZV9kaXIpCisJCQlTQUZFX1JNRElSKG1udF9wYXRo
KTsKKwkJcmV0dXJuOwogCX0KIAotCXNwcmludGYodHN0X2Nncm91cF9wYXRoLT5tbnRfcGF0aCwg
IiVzIiwgY2dyb3VwX2Rpcik7Ci0Jc3ByaW50Zih0c3RfY2dyb3VwX3BhdGgtPm5ld19wYXRoLCAi
JXMiLCBjZ3JvdXBfbmV3X2Rpcik7CisJdHN0X3JlcyhUSU5GTywgIk1vdW50ZWQgVjEgJXMgQ0dy
b3VwIG9uICVzIiwgY3RybC0+Y3RybF9uYW1lLCBtbnRfcGF0aCk7CisJdHN0X2Nncm91cF9zY2Fu
KCk7CisJaWYgKCFjdHJsLT5jdHJsX3Jvb3QpCisJCXJldHVybjsKKworICAgICAgICBjdHJsLT5j
dHJsX3Jvb3QtPndlX21vdW50ZWRfaXQgPSAxOworCWN0cmwtPmN0cmxfcm9vdC0+bW50X2Rpci53
ZV9jcmVhdGVkX2l0ID0gbWFkZV9kaXI7CisKKwlpZiAoY3RybC0+Y3RybF9pbmR4ID09IENUUkxf
TUVNT1JZKSB7CisJCVNBRkVfRklMRV9QUklOVEZBVChjdHJsLT5jdHJsX3Jvb3QtPm1udF9kaXIu
ZGlyX2ZkLAorCQkJCSAgICJtZW1vcnkudXNlX2hpZXJhcmNoeSIsICIlZCIsIDEpOworCX0KIH0K
IAotc3RhdGljIGNoYXIgKnRzdF9jZ3JvdXBfZ2V0X3BhdGgoY29uc3QgY2hhciAqY2dyb3VwX2Rp
cikKK3N0YXRpYyB2b2lkIGNncm91cF9jb3B5X2NwdXNldChjb25zdCBzdHJ1Y3QgY2dyb3VwX3Jv
b3QgKmNvbnN0IHJvb3QpCiB7Ci0Jc3RydWN0IHRzdF9jZ3JvdXBfcGF0aCAqYTsKKwljaGFyIGtu
b2JfdmFsW0JVRlNJWl07CisJaW50IGk7CisJY29uc3QgY2hhciAqY29uc3QgbjBbXSA9IHsibWVt
cyIsICJjcHVzIn07CisJY29uc3QgY2hhciAqY29uc3QgbjFbXSA9IHsiY3B1c2V0Lm1lbXMiLCAi
Y3B1c2V0LmNwdXMifTsKKwljb25zdCBjaGFyICpjb25zdCAqY29uc3QgZm5hbWUgPSByb290LT5u
b19jcHVzZXRfcHJlZml4ID8gbjAgOiBuMTsKKworCWZvciAoaSA9IDA7IGkgPCAyOyBpKyspIHsK
KwkJU0FGRV9GSUxFX1JFQURBVChyb290LT5tbnRfZGlyLmRpcl9mZCwKKwkJCQkgZm5hbWVbaV0s
IGtub2JfdmFsLCBzaXplb2Yoa25vYl92YWwpKTsKKwkJU0FGRV9GSUxFX1BSSU5URkFUKHJvb3Qt
Pmx0cF9kaXIuZGlyX2ZkLAorCQkJCSAgIGZuYW1lW2ldLCAiJXMiLCBrbm9iX3ZhbCk7CisJfQor
fQogCi0JaWYgKCF0c3RfY2dyb3VwX3BhdGhzKQotCQlyZXR1cm4gTlVMTDsKKy8qIEVuc3VyZSB0
aGUgc3BlY2lmaWVkIGNvbnRyb2xsZXIgaXMgYXZhaWxhYmxlLgorICoKKyAqIEZpcnN0IHdlIGNo
ZWNrIGlmIHRoZSBzcGVjaWZpZWQgY29udHJvbGxlciBoYXMgYSBrbm93biBtb3VudCBwb2ludCwK
KyAqIGlmIG5vdCB0aGVuIHdlIHNjYW4gdGhlIHN5c3RlbS4gSWYgd2UgZmluZCBpdCB0aGVuIHdl
IGdvdG8gZW5zdXJpbmcKKyAqIHRoZSBMVFAgZ3JvdXAgZXhpc3RzIGluIHRoZSBoaWVyYXJjaHkg
dGhlIGNvbnRyb2xsZXIgaXMgdXNpbmcuCisgKgorICogSWYgd2UgY2FuJ3QgZmluZCB0aGUgY29u
dHJvbGxlciwgdGhlbiB3ZSB0cnkgdG8gY3JlYXRlIGl0LiBGaXJzdCB3ZQorICogY2hlY2sgaWYg
dGhlIFYyIGhpZXJhcmNoeS90cmVlIGlzIG1vdW50ZWQuIElmIGl0IGlzbid0IHRoZW4gd2UgdHJ5
CisgKiBtb3VudGluZyBpdCBhbmQgbG9vayBmb3IgdGhlIGNvbnRyb2xsZXIuIElmIGl0IGlzIGFs
cmVhZHkgbW91bnRlZAorICogdGhlbiB3ZSBrbm93IHRoZSBjb250cm9sbGVyIGlzIG5vdCBhdmFp
bGFibGUgb24gVjIgb24gdGhpcyBzeXN0ZW0uCisgKgorICogSWYgd2UgY2FuJ3QgbW91bnQgVjIg
b3IgdGhlIGNvbnRyb2xsZXIgaXMgbm90IG9uIFYyLCB0aGVuIHdlIHRyeQorICogbW91bnRpbmcg
aXQgb24gaXRzIG93biBWMSB0cmVlLgorICoKKyAqIE9uY2Ugd2UgaGF2ZSBtb3VudGVkIHRoZSBj
b250cm9sbGVyIHNvbWVob3csIHdlIGNyZWF0ZSBhIGhpZXJhcmNoeQorICogb2YgY2dyb3Vwcy4g
SWYgd2UgYXJlIG9uIFYyIHdlIGZpcnN0IG5lZWQgdG8gZW5hYmxlIHRoZSBjb250cm9sbGVyCisg
KiBmb3IgYWxsIGNoaWxkcmVuIG9mIHJvb3QuIFRoZW4gd2UgY3JlYXRlIGhpZXJhcmNoeSBkZXNj
cmliZWQgaW4KKyAqIHRzdF9jZ3JvdXAuaC4KKyAqCisgKiBJZiB3ZSBhcmUgdXNpbmcgVjEgY3B1
c2V0IHRoZW4gd2UgY29weSB0aGUgYXZhaWxhYmxlIG1lbXMgYW5kIGNwdXMKKyAqIGZyb20gcm9v
dCB0byB0aGUgbHRwIGdyb3VwIGFuZCBzZXQgY2xvbmVfY2hpbGRyZW4gb24gdGhlIGx0cCBncm91
cAorICogdG8gZGlzdHJpYnV0ZSB0aGVzZSBzZXR0aW5ncyB0byB0aGUgdGVzdCBjZ3JvdXBzLiBU
aGlzIG1lYW5zIHRoZQorICogdGVzdCBhdXRob3IgZG9lcyBub3QgaGF2ZSB0byBjb3B5IHRoZXNl
IHNldHRpbmdzIGJlZm9yZSB1c2luZyB0aGUKKyAqIGNwdXNldC4KKyAqCisgKi8KK3ZvaWQgdHN0
X2Nncm91cF9yZXF1aXJlKGNvbnN0IGNoYXIgKmNvbnN0IGN0cmxfbmFtZSwKKwkJCWNvbnN0IHN0
cnVjdCB0c3RfY2dyb3VwX29wdHMgKm9wdGlvbnMpCit7CisJY29uc3QgY2hhciAqY29uc3QgY2dz
YyA9ICJjZ3JvdXAuc3VidHJlZV9jb250cm9sIjsKKwlzdHJ1Y3QgY2dyb3VwX2N0cmwgKmNvbnN0
IGN0cmwgPSBjZ3JvdXBfZmluZF9jdHJsKGN0cmxfbmFtZSk7CisJc3RydWN0IGNncm91cF9yb290
ICpyb290OworCisJaWYgKCFvcHRpb25zKQorCQlvcHRpb25zID0gJmRlZmF1bHRfb3B0czsKKwor
CWlmIChjdHJsLT53ZV9yZXF1aXJlX2l0KSB7CisJCXRzdF9yZXMoVFdBUk4sICJEdXBsaWNhdGUg
dHN0X2Nncm91cF9yZXF1aXJlKCVzLCApIiwKKwkJCWN0cmwtPmN0cmxfbmFtZSk7CisJfQorCWN0
cmwtPndlX3JlcXVpcmVfaXQgPSAxOworCisJaWYgKGN0cmwtPmN0cmxfcm9vdCkKKwkJZ290byBt
a2RpcnM7CisKKwl0c3RfY2dyb3VwX3NjYW4oKTsKKworCWlmIChjdHJsLT5jdHJsX3Jvb3QpCisJ
CWdvdG8gbWtkaXJzOworCisJaWYgKCFjZ3JvdXBfdjJfbW91bnRlZCgpICYmICFvcHRpb25zLT5v
bmx5X21vdW50X3YxKQorCQljZ3JvdXBfbW91bnRfdjIoKTsKIAotCWEgPSB0c3RfY2dyb3VwX3Bh
dGhzOworCWlmIChjdHJsLT5jdHJsX3Jvb3QpCisJCWdvdG8gbWtkaXJzOwogCi0Jd2hpbGUgKHN0
cmNtcChhLT5tbnRfcGF0aCwgY2dyb3VwX2RpcikgIT0gMCl7Ci0JCWlmICghYS0+bmV4dCkgewot
CQkJdHN0X3JlcyhUSU5GTywgIiVzIGlzIG5vdCBmb3VuZCIsIGNncm91cF9kaXIpOwotCQkJcmV0
dXJuIE5VTEw7CisJY2dyb3VwX21vdW50X3YxKGN0cmwpOworCisJaWYgKCFjdHJsLT5jdHJsX3Jv
b3QpIHsKKwkJdHN0X2JyayhUQ09ORiwKKwkJCSInJXMnIGNvbnRyb2xsZXIgcmVxdWlyZWQsIGJ1
dCBub3QgYXZhaWxhYmxlIiwKKwkJCWN0cmwtPmN0cmxfbmFtZSk7CisJCXJldHVybjsKKwl9CisK
K21rZGlyczoKKwlyb290ID0gY3RybC0+Y3RybF9yb290OworCWFkZF9jdHJsKCZyb290LT5tbnRf
ZGlyLmN0cmxfZmllbGQsIGN0cmwpOworCisJaWYgKGNncm91cF9jdHJsX29uX3YyKGN0cmwpKSB7
CisJCWlmIChyb290LT53ZV9tb3VudGVkX2l0KSB7CisJCQlTQUZFX0ZJTEVfUFJJTlRGQVQocm9v
dC0+bW50X2Rpci5kaXJfZmQsCisJCQkJCSAgIGNnc2MsICIrJXMiLCBjdHJsLT5jdHJsX25hbWUp
OworCQl9IGVsc2UgeworCQkJdHN0X2ZpbGVfcHJpbnRmYXQocm9vdC0+bW50X2Rpci5kaXJfZmQs
CisJCQkJCSAgY2dzYywgIislcyIsIGN0cmwtPmN0cmxfbmFtZSk7CiAJCX0KLQkJYSA9IGEtPm5l
eHQ7Ci0JfTsKKwl9CiAKLQlyZXR1cm4gYS0+bmV3X3BhdGg7CisJaWYgKCFyb290LT5sdHBfZGly
LmRpcl9mZCkKKwkJY2dyb3VwX2Rpcl9taygmcm9vdC0+bW50X2RpciwgbHRwX2Nncm91cF9kaXIs
ICZyb290LT5sdHBfZGlyKTsKKwllbHNlCisJCXJvb3QtPmx0cF9kaXIuY3RybF9maWVsZCB8PSBy
b290LT5tbnRfZGlyLmN0cmxfZmllbGQ7CisKKwlpZiAoY2dyb3VwX2N0cmxfb25fdjIoY3RybCkp
IHsKKwkJU0FGRV9GSUxFX1BSSU5URkFUKHJvb3QtPmx0cF9kaXIuZGlyX2ZkLAorCQkJCSAgIGNn
c2MsICIrJXMiLCBjdHJsLT5jdHJsX25hbWUpOworCX0gZWxzZSB7CisJCVNBRkVfRklMRV9QUklO
VEZBVChyb290LT5sdHBfZGlyLmRpcl9mZCwKKwkJCQkgICAiY2dyb3VwLmNsb25lX2NoaWxkcmVu
IiwgIiVkIiwgMSk7CisKKwkJaWYgKGN0cmwtPmN0cmxfaW5keCA9PSBDVFJMX0NQVVNFVCkKKwkJ
CWNncm91cF9jb3B5X2NwdXNldChyb290KTsKKwl9CisKKwljZ3JvdXBfZGlyX21rKCZyb290LT5s
dHBfZGlyLCBsdHBfY2dyb3VwX2RyYWluX2RpciwgJnJvb3QtPmRyYWluX2Rpcik7CisKKwlzcHJp
bnRmKHRlc3RfY2dyb3VwX2RpciwgInRlc3QtJWQiLCBnZXRwaWQoKSk7CisJY2dyb3VwX2Rpcl9t
aygmcm9vdC0+bHRwX2RpciwgdGVzdF9jZ3JvdXBfZGlyLCAmcm9vdC0+dGVzdF9kaXIpOwogfQog
Ci1zdGF0aWMgdm9pZCB0c3RfY2dyb3VwX2RlbF9wYXRoKGNvbnN0IGNoYXIgKmNncm91cF9kaXIp
CitzdGF0aWMgdm9pZCBjZ3JvdXBfZHJhaW4oY29uc3QgZW51bSB0c3RfY2dyb3VwX3ZlciB2ZXIs
CisJCQkgY29uc3QgaW50IHNvdXJjZV9kZmQsIGNvbnN0IGludCBkZXN0X2RmZCkKIHsKLQlzdHJ1
Y3QgdHN0X2Nncm91cF9wYXRoICphLCAqYjsKKwljaGFyIHBpZF9saXN0W0JVRlNJWl07CisJY2hh
ciAqdG9rOworCWNvbnN0IGNoYXIgKmNvbnN0IGZpbGVfbmFtZSA9CisJCXZlciA9PSBUU1RfQ0dS
T1VQX1YxID8gInRhc2tzIiA6ICJjZ3JvdXAucHJvY3MiOworCWludCBmZDsKKwlzc2l6ZV90IHJl
dDsKIAotCWlmICghdHN0X2Nncm91cF9wYXRocykKKwlyZXQgPSBTQUZFX0ZJTEVfUkVBREFUKHNv
dXJjZV9kZmQsIGZpbGVfbmFtZSwKKwkJCSAgICAgICBwaWRfbGlzdCwgc2l6ZW9mKHBpZF9saXN0
KSk7CisJaWYgKHJldCA8IDApCiAJCXJldHVybjsKIAotCWEgPSBiID0gdHN0X2Nncm91cF9wYXRo
czsKKwlmZCA9IFNBRkVfT1BFTkFUKGRlc3RfZGZkLCBmaWxlX25hbWUsIE9fV1JPTkxZKTsKKwlp
ZiAoZmQgPCAwKQorCQlyZXR1cm47CiAKLQl3aGlsZSAoc3RyY21wKGItPm1udF9wYXRoLCBjZ3Jv
dXBfZGlyKSAhPSAwKSB7Ci0JCWlmICghYi0+bmV4dCkgewotCQkJdHN0X3JlcyhUSU5GTywgIiVz
IGlzIG5vdCBmb3VuZCIsIGNncm91cF9kaXIpOwotCQkJcmV0dXJuOwotCQl9Ci0JCWEgPSBiOwot
CQliID0gYi0+bmV4dDsKLQl9OworCWZvciAodG9rID0gc3RydG9rKHBpZF9saXN0LCAiXG4iKTsg
dG9rOyB0b2sgPSBzdHJ0b2soTlVMTCwgIlxuIikpIHsKKwkJcmV0ID0gZHByaW50ZihmZCwgIiVz
IiwgdG9rKTsKIAotCWlmIChiID09IHRzdF9jZ3JvdXBfcGF0aHMpCi0JCXRzdF9jZ3JvdXBfcGF0
aHMgPSBiLT5uZXh0OwotCWVsc2UKLQkJYS0+bmV4dCA9IGItPm5leHQ7CisJCWlmIChyZXQgPCAo
c3NpemVfdClzdHJsZW4odG9rKSkKKwkJCXRzdF9icmsoVEJST0sgfCBURVJSTk8sICJGYWlsZWQg
dG8gZHJhaW4gJXMiLCB0b2spOworCX0KKwlTQUZFX0NMT1NFKGZkKTsKK30KIAotCWZyZWUoYi0+
bW50X3BhdGgpOwotCWZyZWUoYi0+bmV3X3BhdGgpOwotCWZyZWUoYik7CitzdGF0aWMgdm9pZCBj
bG9zZV9wYXRoX2ZkcyhzdHJ1Y3QgY2dyb3VwX3Jvb3QgKmNvbnN0IHJvb3QpCit7CisJaWYgKHJv
b3QtPnRlc3RfZGlyLmRpcl9mZCA+IDApCisJCVNBRkVfQ0xPU0Uocm9vdC0+dGVzdF9kaXIuZGly
X2ZkKTsKKwlpZiAocm9vdC0+bHRwX2Rpci5kaXJfZmQgPiAwKQorCQlTQUZFX0NMT1NFKHJvb3Qt
Pmx0cF9kaXIuZGlyX2ZkKTsKKwlpZiAocm9vdC0+ZHJhaW5fZGlyLmRpcl9mZCA+IDApCisJCVNB
RkVfQ0xPU0Uocm9vdC0+ZHJhaW5fZGlyLmRpcl9mZCk7CisJaWYgKHJvb3QtPm1udF9kaXIuZGly
X2ZkID4gMCkKKwkJU0FGRV9DTE9TRShyb290LT5tbnRfZGlyLmRpcl9mZCk7CiB9CiAKLXZvaWQg
dHN0X2Nncm91cF9tb3VudChlbnVtIHRzdF9jZ3JvdXBfY3RybCBjdHJsLCBjb25zdCBjaGFyICpj
Z3JvdXBfZGlyKQorLyogTWF5YmUgcmVtb3ZlIENHcm91cHMgdXNlZCBkdXJpbmcgdGVzdGluZyBh
bmQgY2xlYXIgb3VyIGRhdGEKKyAqCisgKiBUaGlzIHdpbGwgbmV2ZXIgcmVtb3ZlIENHcm91cHMg
d2UgZGlkIG5vdCBjcmVhdGUgdG8gYWxsb3cgdGVzdHMgdG8KKyAqIGJlIHJ1biBpbiBwYXJhbGxl
bC4KKyAqCisgKiBFYWNoIHRlc3QgcHJvY2VzcyBpcyBnaXZlbiBpdHMgb3duIHVuaXF1ZSBDR3Jv
dXAuIFVubGVzcyB3ZSB3YW50IHRvCisgKiBzdHJlc3MgdGVzdCB0aGUgQ0dyb3VwIHN5c3RlbS4g
V2Ugc2hvdWxkIGF0IGxlYXN0IHJlbW92ZSB0aGVzZQorICogdW5pcXVlIHBlciB0ZXN0IENHcm91
cHMuCisgKgorICogV2UgcHJvYmFibHkgYWxzbyB3YW50IHRvIHJlbW92ZSB0aGUgTFRQIHBhcmVu
dCBDR3JvdXAsIGFsdGhvdWdoCisgKiB0aGlzIG1heSBoYXZlIGJlZW4gY3JlYXRlZCBieSB0aGUg
c3lzdGVtIG1hbmFnZXIgb3IgYW5vdGhlciB0ZXN0CisgKiAoc2VlIG5vdGVzIG9uIHBhcmFsbGVs
IHRlc3RpbmcpLgorICoKKyAqIE9uIHN5c3RlbXMgd2l0aCBubyBpbml0aWFsIENHcm91cCBzZXR1
cCB3ZSBtYXkgdHJ5IHRvIGRlc3Ryb3kgdGhlCisgKiBDR3JvdXAgcm9vdHMgd2UgbW91bnRlZCBz
byB0aGF0IHRoZXkgY2FuIGJlIHJlY3JlYXRlZCBieSBhbm90aGVyCisgKiB0ZXN0LiBOb3RlIHRo
YXQgc3VjY2Vzc2Z1bGx5IHVubW91bnRpbmcgYSBDR3JvdXAgcm9vdCBkb2VzIG5vdAorICogbmVj
ZXNzYXJpbHkgaW5kaWNhdGUgdGhhdCBpdCB3YXMgZGVzdHJveWVkLgorICoKKyAqIFRoZSBsdHAv
ZHJhaW4gQ0dyb3VwIGlzIHJlcXVpcmVkIGZvciBjbGVhbmluZyB1cCB0ZXN0IENHcm91cHMgd2hl
bgorICogd2UgY2FuIG5vdCBtb3ZlIHRoZW0gdG8gdGhlIHJvb3QgQ0dyb3VwLiBDR3JvdXBzIGNh
biBvbmx5IGJlCisgKiByZW1vdmVkIHdoZW4gdGhleSBoYXZlIG5vIG1lbWJlcnMgYW5kIG9ubHkg
bGVhZiBvciByb290IENHcm91cHMgbWF5CisgKiBoYXZlIHByb2Nlc3NlcyB3aXRoaW4gdGhlbS4g
QXMgdGVzdCBwcm9jZXNzZXMgY3JlYXRlIGFuZCBkZXN0cm95CisgKiB0aGVpciBvd24gQ0dyb3Vw
cyB0aGV5IG11c3QgbW92ZSB0aGVtc2VsdmVzIGVpdGhlciB0byByb290IG9yCisgKiBhbm90aGVy
IGxlYWYgQ0dyb3VwLiBTbyB3ZSBtb3ZlIHRoZW0gdG8gZHJhaW4gd2hpbGUgZGVzdHJveWluZyB0
aGUKKyAqIHVuaXF1ZSB0ZXN0IENHcm91cC4KKyAqCisgKiBJZiB3ZSBoYXZlIGFjY2VzcyB0byBy
b290IGFuZCBjcmVhdGVkIHRoZSBMVFAgQ0dyb3VwIHdlIHRoZW4gbW92ZQorICogdGhlIHRlc3Qg
cHJvY2VzcyB0byByb290IGFuZCBkZXN0cm95IHRoZSBkcmFpbiBhbmQgTFRQCisgKiBDR3JvdXBz
LiBPdGhlcndpc2Ugd2UganVzdCBsZWF2ZSB0aGUgdGVzdCBwcm9jZXNzIHRvIGRpZSBpbiB0aGUK
KyAqIGRyYWluLCBtdWNoIGxpa2UgbWFueSBhIHVud2FudGVkIHRlcnJhcGluLgorICoKKyAqIEZp
bmFsbHkgd2UgY2xlYXIgYW55IGRhdGEgd2UgaGF2ZSBjb2xsZWN0ZWQgb24gQ0dyb3Vwcy4gVGhp
cyB3aWxsCisgKiBoYXBwZW4gcmVnYXJkbGVzcyBvZiB3aGV0aGVyIGFueXRoaW5nIHdhcyByZW1v
dmVkLgorICovCit2b2lkIHRzdF9jZ3JvdXBfY2xlYW51cCh2b2lkKQogewotCWNoYXIgKmNncm91
cF9uZXdfZGlyOwotCWNoYXIga25vYl9wYXRoW1BBVEhfTUFYXTsKKwlzdHJ1Y3QgY2dyb3VwX3Jv
b3QgKnJvb3Q7CisJc3RydWN0IGNncm91cF9jdHJsICpjdHJsOwogCi0JdHN0X2NnX3ZlciA9IHRz
dF9jZ3JvdXBfdmVyc2lvbigpOworCWlmICghY2dyb3VwX21vdW50ZWQoKSkKKwkJZ290byBjbGVh
cl9kYXRhOwogCi0JdHN0X2Nncm91cF9zZXRfcGF0aChjZ3JvdXBfZGlyKTsKLQljZ3JvdXBfbmV3
X2RpciA9IHRzdF9jZ3JvdXBfZ2V0X3BhdGgoY2dyb3VwX2Rpcik7CisJZm9yX2VhY2hfcm9vdChy
b290KSB7CisJCWlmICghcm9vdC0+dGVzdF9kaXIuZGlyX25hbWUpCisJCQljb250aW51ZTsKIAot
CWlmICh0c3RfY2dfdmVyICYgVFNUX0NHUk9VUF9WMSkgewotCQlzd2l0Y2goY3RybCkgewotCQlj
YXNlIFRTVF9DR1JPVVBfTUVNQ0c6Ci0JCQl0c3RfY2dyb3VwMV9tb3VudCgibWVtY2ciLCAibWVt
b3J5IiwgY2dyb3VwX2RpciwgY2dyb3VwX25ld19kaXIpOwotCQlicmVhazsKLQkJY2FzZSBUU1Rf
Q0dST1VQX0NQVVNFVDoKLQkJCXRzdF9jZ3JvdXAxX21vdW50KCJjcHVzZXRjZyIsICJjcHVzZXQi
LCBjZ3JvdXBfZGlyLCBjZ3JvdXBfbmV3X2Rpcik7Ci0JCWJyZWFrOwotCQlkZWZhdWx0OgotCQkJ
dHN0X2JyayhUQlJPSywgIkludmFsaWQgY2dyb3VwIGNvbnRyb2xsZXI6ICVkIiwgY3RybCk7Ci0J
CX0KKwkJY2dyb3VwX2RyYWluKHJvb3QtPnZlciwKKwkJCSAgICAgcm9vdC0+dGVzdF9kaXIuZGly
X2ZkLCByb290LT5kcmFpbl9kaXIuZGlyX2ZkKTsKKwkJU0FGRV9VTkxJTktBVChyb290LT5sdHBf
ZGlyLmRpcl9mZCwgcm9vdC0+dGVzdF9kaXIuZGlyX25hbWUsCisJCQkgICAgICBBVF9SRU1PVkVE
SVIpOwogCX0KIAotCWlmICh0c3RfY2dfdmVyICYgVFNUX0NHUk9VUF9WMikgewotCQl0c3RfY2dy
b3VwMl9tb3VudChjZ3JvdXBfZGlyLCBjZ3JvdXBfbmV3X2Rpcik7CisJZm9yX2VhY2hfcm9vdChy
b290KSB7CisJCWlmICghcm9vdC0+bHRwX2Rpci53ZV9jcmVhdGVkX2l0KQorCQkJY29udGludWU7
CiAKLQkJc3dpdGNoKGN0cmwpIHsKLQkJY2FzZSBUU1RfQ0dST1VQX01FTUNHOgotCQkJc3ByaW50
Zihrbm9iX3BhdGgsICIlcy9jZ3JvdXAuc3VidHJlZV9jb250cm9sIiwgY2dyb3VwX2Rpcik7Ci0J
CQlTQUZFX0ZJTEVfUFJJTlRGKGtub2JfcGF0aCwgIiVzIiwgIittZW1vcnkiKTsKLQkJYnJlYWs7
Ci0JCWNhc2UgVFNUX0NHUk9VUF9DUFVTRVQ6Ci0JCQl0c3RfYnJrKFRDT05GLCAiQ2dyb3VwIHYy
IGhhc24ndCBhY2hpZXZlIGNwdXNldCBzdWJzeXN0ZW0iKTsKLQkJYnJlYWs7Ci0JCWRlZmF1bHQ6
Ci0JCQl0c3RfYnJrKFRCUk9LLCAiSW52YWxpZCBjZ3JvdXAgY29udHJvbGxlcjogJWQiLCBjdHJs
KTsKKwkJY2dyb3VwX2RyYWluKHJvb3QtPnZlciwKKwkJCSAgICAgcm9vdC0+ZHJhaW5fZGlyLmRp
cl9mZCwgcm9vdC0+bW50X2Rpci5kaXJfZmQpOworCisJCWlmIChyb290LT5kcmFpbl9kaXIuZGly
X25hbWUpIHsKKwkJCVNBRkVfVU5MSU5LQVQocm9vdC0+bHRwX2Rpci5kaXJfZmQsCisJCQkJICAg
ICAgcm9vdC0+ZHJhaW5fZGlyLmRpcl9uYW1lLCBBVF9SRU1PVkVESVIpOworCQl9CisKKwkJaWYg
KHJvb3QtPmx0cF9kaXIuZGlyX25hbWUpIHsKKwkJCVNBRkVfVU5MSU5LQVQocm9vdC0+bW50X2Rp
ci5kaXJfZmQsCisJCQkJICAgICAgcm9vdC0+bHRwX2Rpci5kaXJfbmFtZSwgQVRfUkVNT1ZFRElS
KTsKIAkJfQogCX0KKworCWZvcl9lYWNoX2N0cmwoY3RybCkgeworCQlpZiAoIWNncm91cF9jdHJs
X29uX3YyKGN0cmwpIHx8ICFjdHJsLT5jdHJsX3Jvb3QtPndlX21vdW50ZWRfaXQpCisJCQljb250
aW51ZTsKKworCQlTQUZFX0ZJTEVfUFJJTlRGQVQoY3RybC0+Y3RybF9yb290LT5tbnRfZGlyLmRp
cl9mZCwKKwkJCQkgICAiY2dyb3VwLnN1YnRyZWVfY29udHJvbCIsCisJCQkJICAgIi0lcyIsIGN0
cmwtPmN0cmxfbmFtZSk7CisJfQorCisJZm9yX2VhY2hfcm9vdChyb290KSB7CisJCWlmICghcm9v
dC0+d2VfbW91bnRlZF9pdCkKKwkJCWNvbnRpbnVlOworCisJCS8qIFRoaXMgcHJvYmFibHkgZG9l
cyBub3QgcmVzdWx0IGluIHRoZSBDR3JvdXAgcm9vdAorCQkgKiBiZWluZyBkZXN0cm95ZWQgKi8K
KwkJaWYgKHVtb3VudDIocm9vdC0+bW50X3BhdGgsIE1OVF9ERVRBQ0gpKQorCQkJY29udGludWU7
CisKKwkJU0FGRV9STURJUihyb290LT5tbnRfcGF0aCk7CisJfQorCitjbGVhcl9kYXRhOgorCWZv
cl9lYWNoX2N0cmwoY3RybCkgeworCQljdHJsLT5jdHJsX3Jvb3QgPSBOVUxMOworCQljdHJsLT53
ZV9yZXF1aXJlX2l0ID0gMDsKKwl9CisKKwlmb3JfZWFjaF9yb290KHJvb3QpCisJCWNsb3NlX3Bh
dGhfZmRzKHJvb3QpOworCisJbWVtc2V0KHJvb3RzLCAwLCBzaXplb2Yocm9vdHMpKTsKIH0KIAot
dm9pZCB0c3RfY2dyb3VwX3Vtb3VudChjb25zdCBjaGFyICpjZ3JvdXBfZGlyKQorc3RhdGljIHZv
aWQgY2dyb3VwX2dyb3VwX2luaXQoc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKmNvbnN0IGNnLAor
CQkJICAgICAgY29uc3QgY2hhciAqY29uc3QgZ3JvdXBfbmFtZSkKIHsKLQljaGFyICpjZ3JvdXBf
bmV3X2RpcjsKKwltZW1zZXQoY2csIDAsIHNpemVvZigqY2cpKTsKKworCWlmICghZ3JvdXBfbmFt
ZSkKKwkJcmV0dXJuOwogCi0JY2dyb3VwX25ld19kaXIgPSB0c3RfY2dyb3VwX2dldF9wYXRoKGNn
cm91cF9kaXIpOwotCXRzdF9jZ3JvdXBOX3Vtb3VudChjZ3JvdXBfZGlyLCBjZ3JvdXBfbmV3X2Rp
cik7Ci0JdHN0X2Nncm91cF9kZWxfcGF0aChjZ3JvdXBfZGlyKTsKKwlpZiAoc3RybGVuKGdyb3Vw
X25hbWUpID4gTkFNRV9NQVgpCisJCXRzdF9icmsoVEJST0ssICJHcm91cCBuYW1lIGlzIHRvbyBs
b25nIik7CisKKwlzdHJuY3B5KGNnLT5ncm91cF9uYW1lLCBncm91cF9uYW1lLCBOQU1FX01BWCk7
CiB9CiAKLXZvaWQgdHN0X2Nncm91cF9zZXRfa25vYihjb25zdCBjaGFyICpjZ3JvdXBfZGlyLCBj
b25zdCBjaGFyICprbm9iLCBsb25nIHZhbHVlKQorc3RhdGljIHZvaWQgY2dyb3VwX2dyb3VwX2Fk
ZF9kaXIoc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKmNvbnN0IGNnLAorCQkJCSBzdHJ1Y3QgY2dy
b3VwX2RpciAqY29uc3QgZGlyKQogewotCWNoYXIgKmNncm91cF9uZXdfZGlyOwotCWNoYXIga25v
Yl9wYXRoW1BBVEhfTUFYXTsKKwljb25zdCBzdHJ1Y3QgY2dyb3VwX2N0cmwgKmN0cmw7CisJaW50
IGk7CisKKwlpZiAoZGlyLT5kaXJfcm9vdC0+dmVyID09IFRTVF9DR1JPVVBfVjIpCisJCWNnLT5k
aXJzX2J5X2N0cmxbMF0gPSBkaXI7CisKKwlmb3JfZWFjaF9jdHJsKGN0cmwpIHsKKwkJaWYgKGhh
c19jdHJsKGRpci0+Y3RybF9maWVsZCwgY3RybCkpCisJCQljZy0+ZGlyc19ieV9jdHJsW2N0cmwt
PmN0cmxfaW5keF0gPSBkaXI7CisJfQogCi0JY2dyb3VwX25ld19kaXIgPSB0c3RfY2dyb3VwX2dl
dF9wYXRoKGNncm91cF9kaXIpOwotCXNwcmludGYoa25vYl9wYXRoLCAiJXMvJXMiLCBjZ3JvdXBf
bmV3X2Rpciwga25vYik7Ci0JU0FGRV9GSUxFX1BSSU5URihrbm9iX3BhdGgsICIlbGQiLCB2YWx1
ZSk7CisJZm9yIChpID0gMDsgY2ctPmRpcnNbaV07IGkrKyk7CisJY2ctPmRpcnNbaV0gPSBkaXI7
CiB9CiAKLXZvaWQgdHN0X2Nncm91cF9tb3ZlX2N1cnJlbnQoY29uc3QgY2hhciAqY2dyb3VwX2Rp
cikKK3N0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICoKK3RzdF9jZ3JvdXBfZ3JvdXBfbWsoY29uc3Qg
c3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKmNvbnN0IHBhcmVudCwKKwkJICAgIGNvbnN0IGNoYXIg
KmNvbnN0IGdyb3VwX25hbWUpCiB7Ci0JaWYgKHRzdF9jZ192ZXIgJiBUU1RfQ0dST1VQX1YxKQot
CQl0c3RfY2dyb3VwX3NldF9rbm9iKGNncm91cF9kaXIsICJ0YXNrcyIsIGdldHBpZCgpKTsKKwlz
dHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqY2c7CisJc3RydWN0IGNncm91cF9kaXIgKmNvbnN0ICpk
aXI7CisJc3RydWN0IGNncm91cF9kaXIgKm5ld19kaXI7CisKKwljZyA9IFNBRkVfTUFMTE9DKHNp
emVvZigqY2cpKTsKKwljZ3JvdXBfZ3JvdXBfaW5pdChjZywgZ3JvdXBfbmFtZSk7CisKKwlmb3Jf
ZWFjaF9kaXIocGFyZW50LCAwLCBkaXIpIHsKKwkJbmV3X2RpciA9IFNBRkVfTUFMTE9DKHNpemVv
ZigqbmV3X2RpcikpOworCQljZ3JvdXBfZGlyX21rKCpkaXIsIGdyb3VwX25hbWUsIG5ld19kaXIp
OworCQljZ3JvdXBfZ3JvdXBfYWRkX2RpcihjZywgbmV3X2Rpcik7CisJfQogCi0JaWYgKHRzdF9j
Z192ZXIgJiBUU1RfQ0dST1VQX1YyKQotCQl0c3RfY2dyb3VwX3NldF9rbm9iKGNncm91cF9kaXIs
ICJjZ3JvdXAucHJvY3MiLCBnZXRwaWQoKSk7CisJcmV0dXJuIGNnOwogfQogCi12b2lkIHRzdF9j
Z3JvdXBfbWVtX3NldF9tYXhieXRlcyhjb25zdCBjaGFyICpjZ3JvdXBfZGlyLCBsb25nIG1lbXN6
KQorc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKnRzdF9jZ3JvdXBfZ3JvdXBfcm0oc3RydWN0IHRz
dF9jZ3JvdXBfZ3JvdXAgKmNvbnN0IGNnKQogewotCWlmICh0c3RfY2dfdmVyICYgVFNUX0NHUk9V
UF9WMSkKLQkJdHN0X2Nncm91cF9zZXRfa25vYihjZ3JvdXBfZGlyLCAibWVtb3J5LmxpbWl0X2lu
X2J5dGVzIiwgbWVtc3opOworCXN0cnVjdCBjZ3JvdXBfZGlyICoqZGlyOworCisJZm9yX2VhY2hf
ZGlyKGNnLCAwLCBkaXIpIHsKKwkJY2xvc2UoKCpkaXIpLT5kaXJfZmQpOworCQlTQUZFX1VOTElO
S0FUKCgqZGlyKS0+ZGlyX3BhcmVudC0+ZGlyX2ZkLAorCQkJICAgICAgKCpkaXIpLT5kaXJfbmFt
ZSwKKwkJCSAgICAgIEFUX1JFTU9WRURJUik7CisJCWZyZWUoKmRpcik7CisJfQogCi0JaWYgKHRz
dF9jZ192ZXIgJiBUU1RfQ0dST1VQX1YyKQotCQl0c3RfY2dyb3VwX3NldF9rbm9iKGNncm91cF9k
aXIsICJtZW1vcnkubWF4IiwgbWVtc3opOworCWZyZWUoY2cpOworCXJldHVybiBOVUxMOwogfQog
Ci1pbnQgdHN0X2Nncm91cF9tZW1fc3dhcGFjY3RfZW5hYmxlZChjb25zdCBjaGFyICpjZ3JvdXBf
ZGlyKQorc3RhdGljIGNvbnN0IHN0cnVjdCBjZ3JvdXBfZmlsZSAqY2dyb3VwX2ZpbGVfZmluZChj
b25zdCBjaGFyICpjb25zdCBmaWxlLAorCQkJCQkJICBjb25zdCBpbnQgbGluZW5vLAorCQkJCQkJ
ICBjb25zdCBjaGFyICpjb25zdCBmaWxlX25hbWUpCiB7Ci0JY2hhciAqY2dyb3VwX25ld19kaXI7
Ci0JY2hhciBrbm9iX3BhdGhbUEFUSF9NQVhdOworCWNvbnN0IHN0cnVjdCBjZ3JvdXBfZmlsZSAq
Y2ZpbGU7CisJY29uc3Qgc3RydWN0IGNncm91cF9jdHJsICpjdHJsOworCWNoYXIgY3RybF9uYW1l
WzMyXTsKKwljb25zdCBjaGFyICpjb25zdCBzZXAgPSBzdHJjaHIoZmlsZV9uYW1lLCAnLicpOwor
CXNpemVfdCBsZW47CisKKwlpZiAoIXNlcCkgeworCQl0c3RfYnJrXyhmaWxlLCBsaW5lbm8sIFRC
Uk9LLAorCQkJICJJbnZhbGlkIGZpbGUgbmFtZSAnJXMnOyBkaWQgbm90IGZpbmQgY29udHJvbGxl
ciBzZXBhcmF0b3IgJy4nIiwKKwkJCSBmaWxlX25hbWUpOworCQlyZXR1cm4gTlVMTDsKKwl9CiAK
LQljZ3JvdXBfbmV3X2RpciA9IHRzdF9jZ3JvdXBfZ2V0X3BhdGgoY2dyb3VwX2Rpcik7CisJbGVu
ID0gc2VwIC0gZmlsZV9uYW1lOworCW1lbWNweShjdHJsX25hbWUsIGZpbGVfbmFtZSwgbGVuKTsK
KwljdHJsX25hbWVbbGVuXSA9ICdcMCc7CiAKLQlpZiAodHN0X2NnX3ZlciAmIFRTVF9DR1JPVVBf
VjEpIHsKLQkJc3ByaW50Zihrbm9iX3BhdGgsICIlcy8lcyIsCi0JCQkJY2dyb3VwX25ld19kaXIs
ICIvbWVtb3J5Lm1lbXN3LmxpbWl0X2luX2J5dGVzIik7CisgICAgICAgIGN0cmwgPSBjZ3JvdXBf
ZmluZF9jdHJsKGN0cmxfbmFtZSk7CiAKLQkJaWYgKChhY2Nlc3Moa25vYl9wYXRoLCBGX09LKSA9
PSAtMSkpIHsKLQkJCWlmIChlcnJubyA9PSBFTk9FTlQpCi0JCQkJdHN0X3JlcyhUQ09ORiwgIm1l
bWNnIHN3YXAgYWNjb3VudGluZyBpcyBkaXNhYmxlZCIpOwotCQkJZWxzZQotCQkJCXRzdF9icmso
VEJST0sgfCBURVJSTk8sICJmYWlsZWQgdG8gYWNjZXNzICVzIiwga25vYl9wYXRoKTsKLQkJfSBl
bHNlIHsKLQkJCXJldHVybiAxOwotCQl9CisJaWYgKCFjdHJsKSB7CisJCXRzdF9icmtfKGZpbGUs
IGxpbmVubywgVEJST0ssCisJCQkgIkRpZCBub3QgZmluZCBjb250cm9sbGVyICclcydcbiIsIGN0
cmxfbmFtZSk7CisJCXJldHVybiBOVUxMOworCX0KKworCWZvciAoY2ZpbGUgPSBjdHJsLT5maWxl
czsgY2ZpbGUtPmZpbGVfbmFtZTsgY2ZpbGUrKykgeworCQlpZiAoIXN0cmNtcChmaWxlX25hbWUs
IGNmaWxlLT5maWxlX25hbWUpKQorCQkJYnJlYWs7CisJfQorCisJaWYgKCFjZmlsZS0+ZmlsZV9u
YW1lKSB7CisJCXRzdF9icmtfKGZpbGUsIGxpbmVubywgVEJST0ssCisJCQkgIkRpZCBub3QgZmlu
ZCAnJXMnIGluICclcydcbiIsCisJCQkgZmlsZV9uYW1lLCBjdHJsLT5jdHJsX25hbWUpOworCQly
ZXR1cm4gTlVMTDsKIAl9CiAKLQlpZiAodHN0X2NnX3ZlciAmIFRTVF9DR1JPVVBfVjIpIHsKLQkJ
c3ByaW50Zihrbm9iX3BhdGgsICIlcy8lcyIsCi0JCQkJY2dyb3VwX25ld19kaXIsICIvbWVtb3J5
LnN3YXAubWF4Iik7CisJcmV0dXJuIGNmaWxlOworfQogCi0JCWlmICgoYWNjZXNzKGtub2JfcGF0
aCwgRl9PSykgPT0gLTEpKSB7Ci0JCQlpZiAoZXJybm8gPT0gRU5PRU5UKQotCQkJCXRzdF9yZXMo
VENPTkYsICJtZW1jZyBzd2FwIGFjY291bnRpbmcgaXMgZGlzYWJsZWQiKTsKLQkJCWVsc2UKLQkJ
CQl0c3RfYnJrKFRCUk9LIHwgVEVSUk5PLCAiZmFpbGVkIHRvIGFjY2VzcyAlcyIsIGtub2JfcGF0
aCk7Ci0JCX0gZWxzZSB7CitlbnVtIHRzdF9jZ3JvdXBfdmVyIHRzdF9jZ3JvdXBfdmVyKGNvbnN0
IGNoYXIgKmNvbnN0IGZpbGUsIGNvbnN0IGludCBsaW5lbm8sCisJCQkJICAgIGNvbnN0IHN0cnVj
dCB0c3RfY2dyb3VwX2dyb3VwICpjb25zdCBjZywKKwkJCQkgICAgY29uc3QgY2hhciAqY29uc3Qg
Y3RybF9uYW1lKQoreworCWNvbnN0IHN0cnVjdCBjZ3JvdXBfY3RybCAqY29uc3QgY3RybCA9IGNn
cm91cF9maW5kX2N0cmwoY3RybF9uYW1lKTsKKwljb25zdCBzdHJ1Y3QgY2dyb3VwX2RpciAqZGly
OworCisJaWYgKCFzdHJjbXAoY3RybF9uYW1lLCAiY2dyb3VwIikpIHsKKwkJdHN0X2Jya18oZmls
ZSwgbGluZW5vLAorCQkJIFRCUk9LLAorCQkJICJjZ3JvdXAgbWF5IGJlIHByZXNlbnQgb24gYm90
aCBWMSBhbmQgVjIgaGllcmFyY2hpZXMiKTsKKwkJcmV0dXJuIDA7CisJfQorCisJaWYgKCFjdHJs
KSB7CisJCXRzdF9icmtfKGZpbGUsIGxpbmVubywKKwkJCSBUQlJPSywgIlVua25vd24gY29udHJv
bGxlciAnJXMnIiwgY3RybF9uYW1lKTsKKwkJcmV0dXJuIDA7CisJfQorCisJZGlyID0gY2ctPmRp
cnNfYnlfY3RybFtjdHJsLT5jdHJsX2luZHhdOworCisJaWYgKCFkaXIpIHsKKwkJdHN0X2Jya18o
ZmlsZSwgbGluZW5vLAorCQkJIFRCUk9LLCAiJXMgY29udHJvbGxlciBub3QgYXR0YWNoZWQgdG8g
Q0dyb3VwICVzIiwKKwkJCSBjdHJsX25hbWUsIGNnLT5ncm91cF9uYW1lKTsKKwkJcmV0dXJuIDA7
CisJfQorCisJcmV0dXJuIGRpci0+ZGlyX3Jvb3QtPnZlcjsKK30KKworc3RhdGljIGNvbnN0IGNo
YXIgKmNncm91cF9maWxlX2FsaWFzKGNvbnN0IHN0cnVjdCBjZ3JvdXBfZmlsZSAqY29uc3QgY2Zp
bGUsCisJCQkJICAgICBjb25zdCBzdHJ1Y3QgY2dyb3VwX2RpciAqY29uc3QgZGlyKQoreworCWlm
IChkaXItPmRpcl9yb290LT52ZXIgIT0gVFNUX0NHUk9VUF9WMSkKKwkJcmV0dXJuIGNmaWxlLT5m
aWxlX25hbWU7CisKKwlpZiAoY2ZpbGUtPmN0cmxfaW5keCA9PSBDVFJMX0NQVVNFVCAmJgorCSAg
ICBkaXItPmRpcl9yb290LT5ub19jcHVzZXRfcHJlZml4ICYmCisJICAgIGNmaWxlLT5maWxlX25h
bWVfdjEpIHsKKwkJcmV0dXJuIHN0cmNocihjZmlsZS0+ZmlsZV9uYW1lX3YxLCAnLicpICsgMTsK
Kwl9CisKKwlyZXR1cm4gY2ZpbGUtPmZpbGVfbmFtZV92MTsKK30KKworaW50IHNhZmVfY2dyb3Vw
X2hhcyhjb25zdCBjaGFyICpjb25zdCBmaWxlLCBjb25zdCBpbnQgbGluZW5vLAorCQkgICAgY29u
c3Qgc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKmNnLAorCQkgICAgY29uc3QgY2hhciAqY29uc3Qg
ZmlsZV9uYW1lKQoreworCWNvbnN0IHN0cnVjdCBjZ3JvdXBfZmlsZSAqY29uc3QgY2ZpbGUgPQor
CQljZ3JvdXBfZmlsZV9maW5kKGZpbGUsIGxpbmVubywgZmlsZV9uYW1lKTsKKwlzdHJ1Y3QgY2dy
b3VwX2RpciAqY29uc3QgKmRpcjsKKwljb25zdCBjaGFyICphbGlhczsKKworCWlmICghY2ZpbGUp
CisJCXJldHVybiAwOworCisJZm9yX2VhY2hfZGlyKGNnLCBjZmlsZS0+Y3RybF9pbmR4LCBkaXIp
IHsKKwkJaWYgKCEoYWxpYXMgPSBjZ3JvdXBfZmlsZV9hbGlhcyhjZmlsZSwgKmRpcikpKQorCQkg
ICAgY29udGludWU7CisKKwkJaWYgKCFmYWNjZXNzYXQoKCpkaXIpLT5kaXJfZmQsIGZpbGVfbmFt
ZSwgRl9PSywgMCkpCiAJCQlyZXR1cm4gMTsKLQkJfQorCisJCWlmIChlcnJubyA9PSBFTk9FTlQp
CisJCQljb250aW51ZTsKKworCQl0c3RfYnJrXyhmaWxlLCBsaW5lbm8sIFRCUk9LIHwgVEVSUk5P
LAorCQkJICJmYWNjZXNzYXQoJWQ8JXM+LCAlcywgRl9PSywgMCkiLAorCQkJICgqZGlyKS0+ZGly
X2ZkLCB0c3RfZGVjb2RlX2ZkKCgqZGlyKS0+ZGlyX2ZkKSwgYWxpYXMpOwogCX0KIAogCXJldHVy
biAwOwogfQogCi12b2lkIHRzdF9jZ3JvdXBfbWVtX3NldF9tYXhzd2FwKGNvbnN0IGNoYXIgKmNn
cm91cF9kaXIsIGxvbmcgbWVtc3opCitzdGF0aWMgc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKmNn
cm91cF9ncm91cF9mcm9tX3Jvb3RzKGNvbnN0IHNpemVfdCB0cmVlX29mZikKIHsKLQlpZiAodHN0
X2NnX3ZlciAmIFRTVF9DR1JPVVBfVjEpCi0JCXRzdF9jZ3JvdXBfc2V0X2tub2IoY2dyb3VwX2Rp
ciwgIm1lbW9yeS5tZW1zdy5saW1pdF9pbl9ieXRlcyIsIG1lbXN6KTsKKwlzdHJ1Y3QgY2dyb3Vw
X3Jvb3QgKnJvb3Q7CisJc3RydWN0IGNncm91cF9kaXIgKmRpcjsKKwlzdHJ1Y3QgdHN0X2Nncm91
cF9ncm91cCAqY2c7CisKKwljZyA9IHRzdF9hbGxvYyhzaXplb2YoKmNnKSk7CisJY2dyb3VwX2dy
b3VwX2luaXQoY2csIE5VTEwpOwogCi0JaWYgKHRzdF9jZ192ZXIgJiBUU1RfQ0dST1VQX1YyKQot
CQl0c3RfY2dyb3VwX3NldF9rbm9iKGNncm91cF9kaXIsICJtZW1vcnkuc3dhcC5tYXgiLCBtZW1z
eik7CisJZm9yX2VhY2hfcm9vdChyb290KSB7CisJCWRpciA9ICh0eXBlb2YoZGlyKSkoKChjaGFy
ICopcm9vdCkgKyB0cmVlX29mZik7CisKKwkJaWYgKGRpci0+Y3RybF9maWVsZCkKKwkJCWNncm91
cF9ncm91cF9hZGRfZGlyKGNnLCBkaXIpOworCX0KKworCWlmIChjZy0+ZGlyc1swXSkgeworCQlz
dHJuY3B5KGNnLT5ncm91cF9uYW1lLCBjZy0+ZGlyc1swXS0+ZGlyX25hbWUsIE5BTUVfTUFYKTsK
KwkJcmV0dXJuIGNnOworCX0KKworCXRzdF9icmsoVEJST0ssCisJCSJObyBDR3JvdXBzIGZvdW5k
OyBtYXliZSB5b3UgZm9yZ290IHRvIGNhbGwgdHN0X2Nncm91cF9yZXF1aXJlPyIpOworCisJcmV0
dXJuIGNnOwogfQogCi12b2lkIHRzdF9jZ3JvdXBfY3B1c2V0X3JlYWRfZmlsZXMoY29uc3QgY2hh
ciAqY2dyb3VwX2RpciwgY29uc3QgY2hhciAqZmlsZW5hbWUsCi0JY2hhciAqcmV0YnVmLCBzaXpl
X3QgcmV0YnVmX3N6KQorY29uc3Qgc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKnRzdF9jZ3JvdXBf
Z2V0X3Rlc3RfZ3JvdXAodm9pZCkKIHsKLQlpbnQgZmQ7Ci0JY2hhciAqY2dyb3VwX25ld19kaXI7
Ci0JY2hhciBrbm9iX3BhdGhbUEFUSF9NQVhdOworCXJldHVybiBjZ3JvdXBfZ3JvdXBfZnJvbV9y
b290cyhvZmZzZXRvZihzdHJ1Y3QgY2dyb3VwX3Jvb3QsIHRlc3RfZGlyKSk7Cit9CiAKLQljZ3Jv
dXBfbmV3X2RpciA9IHRzdF9jZ3JvdXBfZ2V0X3BhdGgoY2dyb3VwX2Rpcik7Citjb25zdCBzdHJ1
Y3QgdHN0X2Nncm91cF9ncm91cCAqdHN0X2Nncm91cF9nZXRfZHJhaW5fZ3JvdXAodm9pZCkKK3sK
KwlyZXR1cm4gY2dyb3VwX2dyb3VwX2Zyb21fcm9vdHMob2Zmc2V0b2Yoc3RydWN0IGNncm91cF9y
b290LCBkcmFpbl9kaXIpKTsKK30KIAotCS8qCi0JICogdHJ5IGVpdGhlciAnL2Rldi9jcHVzZXQv
WFhYWCcgb3IgJy9kZXYvY3B1c2V0L2NwdXNldC5YWFhYJwotCSAqIHBsZWFzZSBzZWUgRG9jdW1l
bnRhdGlvbi9jZ3JvdXBzL2NwdXNldHMudHh0IGZyb20ga2VybmVsIHNyYwotCSAqIGZvciBkZXRh
aWxzCi0JICovCi0Jc3ByaW50Zihrbm9iX3BhdGgsICIlcy8lcyIsIGNncm91cF9uZXdfZGlyLCBm
aWxlbmFtZSk7Ci0JZmQgPSBvcGVuKGtub2JfcGF0aCwgT19SRE9OTFkpOwotCWlmIChmZCA9PSAt
MSkgewotCQlpZiAoZXJybm8gPT0gRU5PRU5UKSB7Ci0JCQlzcHJpbnRmKGtub2JfcGF0aCwgIiVz
L2NwdXNldC4lcyIsCi0JCQkJCWNncm91cF9uZXdfZGlyLCBmaWxlbmFtZSk7Ci0JCQlmZCA9IFNB
RkVfT1BFTihrbm9iX3BhdGgsIE9fUkRPTkxZKTsKLQkJfSBlbHNlCi0JCQl0c3RfYnJrKFRCUk9L
IHwgVEVSUk5PLCAib3BlbiAlcyIsIGtub2JfcGF0aCk7Citzc2l6ZV90IHNhZmVfY2dyb3VwX3Jl
YWQoY29uc3QgY2hhciAqY29uc3QgZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwkJCSBjb25zdCBz
dHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqY29uc3QgY2csCisJCQkgY29uc3QgY2hhciAqY29uc3Qg
ZmlsZV9uYW1lLAorCQkJIGNoYXIgKmNvbnN0IG91dCwgY29uc3Qgc2l6ZV90IGxlbikKK3sKKwlj
b25zdCBzdHJ1Y3QgY2dyb3VwX2ZpbGUgKmNvbnN0IGNmaWxlID0KKwkJY2dyb3VwX2ZpbGVfZmlu
ZChmaWxlLCBsaW5lbm8sIGZpbGVfbmFtZSk7CisJc3RydWN0IGNncm91cF9kaXIgKmNvbnN0ICpk
aXI7CisJY29uc3QgY2hhciAqYWxpYXM7CisJc2l6ZV90IHByZXZfbGVuID0gMDsKKwljaGFyIHBy
ZXZfYnVmW0JVRlNJWl07CisKKwlmb3JfZWFjaF9kaXIoY2csIGNmaWxlLT5jdHJsX2luZHgsIGRp
cikgeworCQlpZiAoIShhbGlhcyA9IGNncm91cF9maWxlX2FsaWFzKGNmaWxlLCAqZGlyKSkpCisJ
CQljb250aW51ZTsKKworCQlpZiAocHJldl9sZW4pCisJCQltZW1jcHkocHJldl9idWYsIG91dCwg
cHJldl9sZW4pOworCisJCVRFU1Qoc2FmZV9maWxlX3JlYWRhdChmaWxlLCBsaW5lbm8sCisJCQkJ
ICAgICAgKCpkaXIpLT5kaXJfZmQsIGFsaWFzLCBvdXQsIGxlbikpOworCQlpZiAoVFNUX1JFVCA8
IDApCisJCQljb250aW51ZTsKKworCQlpZiAocHJldl9sZW4gJiYgbWVtY21wKG91dCwgcHJldl9i
dWYsIHByZXZfbGVuKSkgeworCQkJdHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSywKKwkJCQkg
IiVzIGhhcyBkaWZmZXJlbnQgdmFsdWUgYWNyb3NzIHJvb3RzIiwKKwkJCQkgZmlsZV9uYW1lKTsK
KwkJCWJyZWFrOworCQl9CisKKwkJcHJldl9sZW4gPSBNSU4oc2l6ZW9mKHByZXZfYnVmKSwgKHNp
emVfdClUU1RfUkVUKTsKIAl9CiAKLQltZW1zZXQocmV0YnVmLCAwLCByZXRidWZfc3opOwotCWlm
IChyZWFkKGZkLCByZXRidWYsIHJldGJ1Zl9zeikgPCAwKQotCQl0c3RfYnJrKFRCUk9LIHwgVEVS
Uk5PLCAicmVhZCAlcyIsIGtub2JfcGF0aCk7CisJb3V0W01BWChUU1RfUkVULCAwKV0gPSAnXDAn
OwogCi0JY2xvc2UoZmQpOworCXJldHVybiBUU1RfUkVUOwogfQogCi12b2lkIHRzdF9jZ3JvdXBf
Y3B1c2V0X3dyaXRlX2ZpbGVzKGNvbnN0IGNoYXIgKmNncm91cF9kaXIsIGNvbnN0IGNoYXIgKmZp
bGVuYW1lLCBjb25zdCBjaGFyICpidWYpCit2b2lkIHNhZmVfY2dyb3VwX3ByaW50Zihjb25zdCBj
aGFyICpjb25zdCBmaWxlLCBjb25zdCBpbnQgbGluZW5vLAorCQkJY29uc3Qgc3RydWN0IHRzdF9j
Z3JvdXBfZ3JvdXAgKmNnLAorCQkJY29uc3QgY2hhciAqY29uc3QgZmlsZV9uYW1lLAorCQkJY29u
c3QgY2hhciAqZm10LCAuLi4pCiB7Ci0JaW50IGZkOwotCWNoYXIgKmNncm91cF9uZXdfZGlyOwot
CWNoYXIga25vYl9wYXRoW1BBVEhfTUFYXTsKKwljb25zdCBzdHJ1Y3QgY2dyb3VwX2ZpbGUgKmNv
bnN0IGNmaWxlID0KKwkJY2dyb3VwX2ZpbGVfZmluZChmaWxlLCBsaW5lbm8sIGZpbGVfbmFtZSk7
CisJc3RydWN0IGNncm91cF9kaXIgKmNvbnN0ICpkaXI7CisJY29uc3QgY2hhciAqYWxpYXM7CisJ
dmFfbGlzdCB2YTsKKworCWZvcl9lYWNoX2RpcihjZywgY2ZpbGUtPmN0cmxfaW5keCwgZGlyKSB7
CisJCWlmICghKGFsaWFzID0gY2dyb3VwX2ZpbGVfYWxpYXMoY2ZpbGUsICpkaXIpKSkKKwkJICAg
IGNvbnRpbnVlOworCisJCXZhX3N0YXJ0KHZhLCBmbXQpOworCQlzYWZlX2ZpbGVfdnByaW50ZmF0
KGZpbGUsIGxpbmVubywKKwkJCQkgICAgKCpkaXIpLT5kaXJfZmQsIGFsaWFzLCBmbXQsIHZhKTsK
KwkJdmFfZW5kKHZhKTsKKwl9Cit9CiAKLQljZ3JvdXBfbmV3X2RpciA9IHRzdF9jZ3JvdXBfZ2V0
X3BhdGgoY2dyb3VwX2Rpcik7Cit2b2lkIHNhZmVfY2dyb3VwX3NjYW5mKGNvbnN0IGNoYXIgKmNv
bnN0IGZpbGUsIGNvbnN0IGludCBsaW5lbm8sCisJCSAgICAgICBjb25zdCBzdHJ1Y3QgdHN0X2Nn
cm91cF9ncm91cCAqY29uc3QgY2csCisJCSAgICAgICBjb25zdCBjaGFyICpjb25zdCBmaWxlX25h
bWUsCisJCSAgICAgICBjb25zdCBjaGFyICpjb25zdCBmbXQsIC4uLikKK3sKKwl2YV9saXN0IHZh
OworCWNoYXIgYnVmW0JVRlNJWl07CisJc3NpemVfdCBsZW4gPSBzYWZlX2Nncm91cF9yZWFkKGZp
bGUsIGxpbmVubywKKwkJCQkgICAgICAgY2csIGZpbGVfbmFtZSwgYnVmLCBzaXplb2YoYnVmKSk7
CisJY29uc3QgaW50IGNvbnZfY250ID0gdHN0X2NvdW50X3NjYW5mX2NvbnZlcnNpb25zKGZtdCk7
CisJaW50IHJldDsKKworCWlmIChsZW4gPCAxKQorCQlyZXR1cm47CiAKLQkvKgotCSAqIHRyeSBl
aXRoZXIgJy9kZXYvY3B1c2V0L1hYWFgnIG9yICcvZGV2L2NwdXNldC9jcHVzZXQuWFhYWCcKLQkg
KiBwbGVhc2Ugc2VlIERvY3VtZW50YXRpb24vY2dyb3Vwcy9jcHVzZXRzLnR4dCBmcm9tIGtlcm5l
bCBzcmMKLQkgKiBmb3IgZGV0YWlscwotCSAqLwotCXNwcmludGYoa25vYl9wYXRoLCAiJXMvJXMi
LCBjZ3JvdXBfbmV3X2RpciwgZmlsZW5hbWUpOwotCWZkID0gb3Blbihrbm9iX3BhdGgsIE9fV1JP
TkxZKTsKLQlpZiAoZmQgPT0gLTEpIHsKLQkJaWYgKGVycm5vID09IEVOT0VOVCkgewotCQkJc3By
aW50Zihrbm9iX3BhdGgsICIlcy9jcHVzZXQuJXMiLCBjZ3JvdXBfbmV3X2RpciwgZmlsZW5hbWUp
OwotCQkJZmQgPSBTQUZFX09QRU4oa25vYl9wYXRoLCBPX1dST05MWSk7Ci0JCX0gZWxzZQotCQkJ
dHN0X2JyayhUQlJPSyB8IFRFUlJOTywgIm9wZW4gJXMiLCBrbm9iX3BhdGgpOworCXZhX3N0YXJ0
KHZhLCBmbXQpOworCWlmICgocmV0ID0gdnNzY2FuZihidWYsIGZtdCwgdmEpKSA8IDEpIHsKKwkJ
dHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSyB8IFRFUlJOTywKKwkJCSAiJyVzJzogdnNzY2Fu
ZignJXMnLCAnJXMnLCAuLi4pIiwgZmlsZV9uYW1lLCBidWYsIGZtdCk7CiAJfQorCXZhX2VuZCh2
YSk7CiAKLQlTQUZFX1dSSVRFKDEsIGZkLCBidWYsIHN0cmxlbihidWYpKTsKKwlpZiAoY29udl9j
bnQgPT0gcmV0KQorCQlyZXR1cm47CiAKLQljbG9zZShmZCk7CisJdHN0X2Jya18oZmlsZSwgbGlu
ZW5vLCBUQlJPSywKKwkJICInJXMnOiB2c3NjYW5mKCclcycsICclcycsIC4uKTogTGVzcyBjb252
ZXJzaW9ucyB0aGFuIGV4cGVjdGVkOiAlZCAhPSAlZCIsCisJCSBmaWxlX25hbWUsIGJ1ZiwgZm10
LCByZXQsIGNvbnZfY250KTsKIH0KLS0gCjIuMzEuMQoKCi0tIApNYWlsaW5nIGxpc3QgaW5mbzog
aHR0cHM6Ly9saXN0cy5saW51eC5pdC9saXN0aW5mby9sdHAK
