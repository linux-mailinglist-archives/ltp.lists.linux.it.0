Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [213.254.12.146])
	by mail.lfdr.de (Postfix) with ESMTPS id 48BC17EAFE5
	for <lists+linux-ltp@lfdr.de>; Tue, 14 Nov 2023 13:32:44 +0100 (CET)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id E0BD93CE4D9
	for <lists+linux-ltp@lfdr.de>; Tue, 14 Nov 2023 13:32:43 +0100 (CET)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-5.smtp.seeweb.it (in-5.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::5])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-384))
 (No client certificate requested)
 by picard.linux.it (Postfix) with ESMTPS id 86A703CC27C
 for <ltp@lists.linux.it>; Tue, 14 Nov 2023 13:31:44 +0100 (CET)
Received: from smtp-out2.suse.de (smtp-out2.suse.de [195.135.220.29])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256)
 (No client certificate requested)
 by in-5.smtp.seeweb.it (Postfix) with ESMTPS id 0D7CE60049C
 for <ltp@lists.linux.it>; Tue, 14 Nov 2023 13:31:42 +0100 (CET)
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by smtp-out2.suse.de (Postfix) with ESMTPS id AABBE1F897;
 Tue, 14 Nov 2023 12:31:41 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.cz; s=susede2_rsa;
 t=1699965101; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=ffgRSq7dFpb6FyXRUBtpo748J2dDN9BdnGxTPNHhn44=;
 b=icGsAhMXJBBIAtuJrj2oD0qy8mYbwVRExY/rCH0II78vhSvHo+S3Ko2xexrxag1+Zm5aXM
 +V95NrUnfLVIagCcYk9yCWfslhemGsKSndOeaCOoMzJtYx9QQd3dGzXsFf8aCXg1Fn4AVy
 EXD+xA2jhElkURB+ZVEdejz8Qg6m1Vk=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.cz;
 s=susede2_ed25519; t=1699965101;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=ffgRSq7dFpb6FyXRUBtpo748J2dDN9BdnGxTPNHhn44=;
 b=q930wP7yYR9uO+ZuLut3fNPmQW1WGUOqO9ULQI5sQNOAwcS6in9TLNgZgF0rkEDFrZnn9e
 hy96YRyqTtA9QWDA==
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by imap2.suse-dmz.suse.de (Postfix) with ESMTPS id 8F801139DD;
 Tue, 14 Nov 2023 12:31:41 +0000 (UTC)
Received: from dovecot-director2.suse.de ([192.168.254.65])
 by imap2.suse-dmz.suse.de with ESMTPSA id GKI8Iq1oU2UibAAAMHmgww
 (envelope-from <mdoucha@suse.cz>); Tue, 14 Nov 2023 12:31:41 +0000
From: Martin Doucha <mdoucha@suse.cz>
To: Petr Vorel <pvorel@suse.cz>,
	ltp@lists.linux.it
Date: Tue, 14 Nov 2023 13:31:22 +0100
Message-ID: <20231114123140.1144-2-mdoucha@suse.cz>
X-Mailer: git-send-email 2.42.0
In-Reply-To: <20231114123140.1144-1-mdoucha@suse.cz>
References: <20231114123140.1144-1-mdoucha@suse.cz>
MIME-Version: 1.0
Authentication-Results: smtp-out2.suse.de;
	none
X-Spam-Level: 
X-Spam-Score: -6.10
X-Spamd-Result: default: False [-6.10 / 50.00]; ARC_NA(0.00)[];
 RCVD_VIA_SMTP_AUTH(0.00)[]; FROM_HAS_DN(0.00)[];
 TO_DN_SOME(0.00)[]; TO_MATCH_ENVRCPT_ALL(0.00)[];
 NEURAL_HAM_LONG(-3.00)[-1.000]; MIME_GOOD(-0.10)[text/plain];
 DKIM_SIGNED(0.00)[suse.cz:s=susede2_rsa,suse.cz:s=susede2_ed25519];
 NEURAL_HAM_SHORT(-1.00)[-1.000]; RCPT_COUNT_TWO(0.00)[2];
 MID_CONTAINS_FROM(1.00)[]; FROM_EQ_ENVFROM(0.00)[];
 MIME_TRACE(0.00)[0:+]; RCVD_COUNT_TWO(0.00)[2];
 RCVD_TLS_ALL(0.00)[]; BAYES_HAM(-3.00)[100.00%]
X-Virus-Scanned: clamav-milter 1.0.1 at in-5.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=0.1 required=7.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,DKIM_VALID_EF,SPF_HELO_NONE,SPF_PASS,
 T_SCC_BODY_TEXT_LINE shortcircuit=no autolearn=disabled version=4.0.0
X-Spam-Checker-Version: SpamAssassin 4.0.0 (2022-12-13) on in-5.smtp.seeweb.it
Subject: [LTP] [PATCH v2 1/5] tst_rtnetlink: Refactor helper function for
 generic use
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

VGhlIG5ldGxpbmsgY29udGV4dCBzdHJ1Y3R1cmUgY2FuIGJlIHVzZWQgZm9yIGFueSBuZXRsaW5r
IHByb3RvY29sLApub3QganVzdCBmb3IgTkVUTElOS19ST1VURS4gQ2hhbmdlIHRoZSBSVE5MIHBy
ZWZpeCB0byBORVRMSU5LIG9uCmFsbCBoZWxwZXIgZnVuY3Rpb25zIHdoaWNoIGRvbid0IHVzZSBO
RVRMSU5LX1JPVVRFIGZlYXR1cmVzIGFuZAphZGQgYSBuZXcgcHJvdG9jb2wgcGFyYW1ldGVyIHRv
IHRzdF9uZXRsaW5rX2NyZWF0ZV9jb250ZXh0KCkuCgpTaWduZWQtb2ZmLWJ5OiBNYXJ0aW4gRG91
Y2hhIDxtZG91Y2hhQHN1c2UuY3o+ClJldmlld2VkLWJ5OiBQZXRyIFZvcmVsIDxwdm9yZWxAc3Vz
ZS5jej4KLS0tCgpDaGFuZ2VzIHNpbmNlIHYxOiBSZWJhc2VkCgogZG9jL0MtVGVzdC1OZXR3b3Jr
LUFQSS5hc2NpaWRvYyB8IDE1NSArKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tLQogaW5j
bHVkZS90c3RfcnRuZXRsaW5rLmggICAgICAgICB8ICA4NSArKysrKysrKystLS0tLS0tLS0KIGxp
Yi90c3RfbmV0ZGV2aWNlLmMgICAgICAgICAgICAgfCAgOTMgKysrKysrKysrLS0tLS0tLS0tLQog
bGliL3RzdF9ydG5ldGxpbmsuYyAgICAgICAgICAgICB8ICA4MyArKysrKysrKy0tLS0tLS0tLQog
dGVzdGNhc2VzL2N2ZS90Y2luZGV4MDEuYyAgICAgICB8ICAgMiArLQogNSBmaWxlcyBjaGFuZ2Vk
LCAyMTIgaW5zZXJ0aW9ucygrKSwgMjA2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RvYy9D
LVRlc3QtTmV0d29yay1BUEkuYXNjaWlkb2MgYi9kb2MvQy1UZXN0LU5ldHdvcmstQVBJLmFzY2lp
ZG9jCmluZGV4IDNiZjJhMWY4YS4uMjVlNGJiZDE4IDEwMDY0NAotLS0gYS9kb2MvQy1UZXN0LU5l
dHdvcmstQVBJLmFzY2lpZG9jCisrKyBiL2RvYy9DLVRlc3QtTmV0d29yay1BUEkuYXNjaWlkb2MK
QEAgLTE0Myw3ICsxNDMsNyBAQCBzdGF0aWMgdm9pZCBzZXR1cCh2b2lkKQogV2hlbiBvcGVuaW5n
IGEgbG9jYWxob3N0IHNvY2tldCBpc24ndCBlbm91Z2ggYW5kIHRoZSB0ZXN0IG5lZWRzIHNwZWNp
YWwgZGV2aWNlCiBvciByb3V0aW5nIGNvbmZpZ3VyYXRpb24sIHRoZSBuZXRkZXZpY2UgbGlicmFy
eSBjYW4gY3JlYXRlIHRoZSByZXF1aXJlZCBuZXR3b3JrCiBzZXR1cCB3aXRob3V0IGNhbGxpbmcg
ZXh0ZXJuYWwgcHJvZ3JhbXMuIEludGVybmFsbHksIHRoZSBuZXRkZXZpY2UgZnVuY3Rpb25zCi11
c2UgYSBydG5ldGxpbmsgc29ja2V0IHRvIGNvbW11bmljYXRlIHdpdGggdGhlIGtlcm5lbC4KK3Vz
ZSBhIG5ldGxpbmsgc29ja2V0IHRvIGNvbW11bmljYXRlIHdpdGggdGhlIGtlcm5lbC4KIAogQWxs
IG9mIHRoZXNlIGZ1bmN0aW9ucyB3aWxsIGNhbGwgK3RzdF9icmsoKSsgb24gZmFpbHVyZSwgdW5s
ZXNzIHN0YXRlZAogb3RoZXJ3aXNlLiBFcnJvciB2YWx1ZXMgZGVzY3JpYmVkIGJlbG93IGFyZSBy
ZXR1cm5lZCBvbmx5IGR1cmluZyB0ZXN0IGNsZWFudXAKQEAgLTI3NCwxMiArMjc0LDEyIEBAIHN0
YXRpYyB2b2lkIHNldHVwKHZvaWQpCiB9CiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAKLTMgcnRu
ZXRsaW5rIEFQSQorMyBOZXRsaW5rIEFQSQogLS0tLS0tLS0tLS0tLS0tCiAKICsjaW5jbHVkZSAi
dHN0X3J0bmV0bGluay5oIisKIAotVGhlIHJ0bmV0bGluayBsaWJyYXJ5IHByb3ZpZGVzIGhlbHBl
ciBmdW5jdGlvbnMgZm9yIGNvbnN0cnVjdGluZyBhbmQgc2VuZGluZworVGhlIG5ldGxpbmsgbGli
cmFyeSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIGZvciBjb25zdHJ1Y3RpbmcgYW5kIHNlbmRp
bmcKIGFyYml0cmFyeSBtZXNzYWdlcyBhbmQgcGFyc2luZyBrZXJuZWwgcmVzcG9uc2VzLgogCiBB
bGwgb2YgdGhlIGZ1bmN0aW9ucyBiZWxvdyB3aWxsIGNhbGwgK3RzdF9icmsoKSsgb24gZmFpbHVy
ZSwgdW5sZXNzIHN0YXRlZApAQCAtMjkxLDcgKzI5MSw3IEBAIHN0YWdlLgogCiBbc291cmNlLGNd
CiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi1zdHJ1Y3QgdHN0X3J0bmxfY29udGV4dDsKK3N0cnVj
dCB0c3RfbmV0bGlua19jb250ZXh0OwogCiBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0IHsKIAl1
bnNpZ25lZCBzaG9ydCB0eXBlOwpAQCAtMzAwLDcgKzMwMCw3IEBAIHN0cnVjdCB0c3RfcnRubF9h
dHRyX2xpc3QgewogCWNvbnN0IHN0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3QgKnN1Ymxpc3Q7CiB9
OwogCi1zdHJ1Y3QgdHN0X3J0bmxfbWVzc2FnZSB7CitzdHJ1Y3QgdHN0X25ldGxpbmtfbWVzc2Fn
ZSB7CiAJc3RydWN0IG5sbXNnaGRyICpoZWFkZXI7CiAJc3RydWN0IG5sbXNnZXJyICplcnI7CiAJ
dm9pZCAqcGF5bG9hZDsKQEAgLTMwOCwxMCArMzA4LDEwIEBAIHN0cnVjdCB0c3RfcnRubF9tZXNz
YWdlIHsKIH07CiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAKLStzdHJ1Y3QgdHN0X3J0bmxfY29u
dGV4dCsgaXMgYW4gb3BhcXVlIHJ0bmV0bGluayBzb2NrZXQgd2l0aCBidWZmZXIgZm9yCisrc3Ry
dWN0IHRzdF9uZXRsaW5rX2NvbnRleHQrIGlzIGFuIG9wYXF1ZSBuZXRsaW5rIHNvY2tldCB3aXRo
IGJ1ZmZlciBmb3IKIGNvbnN0cnVjdGluZyBhbmQgc2VuZGluZyBhcmJpdHJhcnkgbWVzc2FnZXMg
dXNpbmcgdGhlIGZ1bmN0aW9ucyBkZXNjcmliZWQKLWJlbG93LiBDcmVhdGUgYSBuZXcgY29udGV4
dCB1c2luZyArUlROTF9DUkVBVEVfQ09OVEVYVCgpKywgdGhlbiBmcmVlIGl0IHVzaW5nCi0rUlRO
TF9ERVNUUk9ZX0NPTlRFWFQoKSsgd2hlbiB5b3UncmUgZG9uZSB3aXRoIGl0LgorYmVsb3cuIENy
ZWF0ZSBhIG5ldyBjb250ZXh0IHVzaW5nICtORVRMSU5LX0NSRUFURV9DT05URVhUKCkrLCB0aGVu
IGZyZWUgaXQKK3VzaW5nICtORVRMSU5LX0RFU1RST1lfQ09OVEVYVCgpKyB3aGVuIHlvdSdyZSBk
b25lIHdpdGggaXQuCiAKICtzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0KyBpcyBhIGhlbHBlciBz
dHJ1Y3R1cmUgZm9yIGRlZmluaW5nIGNvbXBsZXgKIHJ0bmV0bGluayBtZXNzYWdlIGF0dHJpYnV0
ZSBwYXlsb2FkcywgaW5jbHVkaW5nIG5lc3RlZCBhdHRyaWJ1dGUgbGlzdHMuIEV2ZXJ5CkBAIC0z
MzEsMTAgKzMzMSwxMCBAQCBuZWdhdGl2ZSArbGVuKy4KICAgdG8gdGhlICtsZW4rIGZpZWxkLiBJ
ZiB5b3UgZG8gbm90IHdhbnQgdG8gYWRkIG5lc3RlZCBhdHRyaWJ1dGVzLCBzZXQKICAgK3N1Ymxp
c3QrIHRvICtOVUxMKy4KIAotK3N0cnVjdCB0c3RfcnRubF9tZXNzYWdlKyBpcyBhIHN0cnVjdHVy
ZSBob2xkaW5nIHBhcnRpYWxseSBwYXJzZWQgcnRuZXRsaW5rCi1tZXNzYWdlcyByZWNlaXZlZCBm
cm9tIHRoZSBrZXJuZWwuICtSVE5MX1JFQ1YoKSsgcmV0dXJucyBhbiBhcnJheSBvZiB0aGVzZQor
K3N0cnVjdCB0c3RfbmV0bGlua19tZXNzYWdlKyBpcyBhIHN0cnVjdHVyZSBob2xkaW5nIHBhcnRp
YWxseSBwYXJzZWQgbmV0bGluaworbWVzc2FnZXMgcmVjZWl2ZWQgZnJvbSB0aGUga2VybmVsLiAr
TkVUTElOS19SRUNWKCkrIHJldHVybnMgYW4gYXJyYXkgb2YgdGhlc2UKIHN0cnVjdHVyZXMgd2l0
aCB0aGUgbGFzdCBpdGVtIGhhdmluZyArTlVMTCsgaW4gdGhlICtoZWFkZXIrIGZpZWxkLiBDYWxs
Ci0rUlROTF9GUkVFX01FU1NBR0UoKSsgdG8gZnJlZSBhIG1lc3NhZ2UgbGlzdCByZXR1cm5lZCBi
eSArUlROTF9SRUNWKCkrLgorK05FVExJTktfRlJFRV9NRVNTQUdFKCkrIHRvIGZyZWUgYSBtZXNz
YWdlIGxpc3QgcmV0dXJuZWQgYnkgK05FVExJTktfUkVDVigpKy4KIAogLSAraGVhZGVyKyBpcyB0
aGUgbmV0bGluayBoZWFkZXIgc3RydWN0dXJlIG9mIHRoZSBtZXNzYWdlLiArTlVMTCsgaW4gdGhl
IGhlYWRlcgogICBmaWVsZCB0ZXJtaW5hdGVzIGEgbGlzdCBvZiBtZXNzYWdlcy4KQEAgLTM0OSw4
MyArMzQ5LDg2IEBAIHN0cnVjdHVyZXMgd2l0aCB0aGUgbGFzdCBpdGVtIGhhdmluZyArTlVMTCsg
aW4gdGhlICtoZWFkZXIrIGZpZWxkLiBDYWxsCiAzLjIgU2VuZGluZyBhbmQgcmVjZWl2aW5nIG1l
c3NhZ2VzCiB+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+CiAKLS0gK3N0cnVjdCB0
c3RfcnRubF9jb250ZXh0ICpSVE5MX0NSRUFURV9DT05URVhUKHZvaWQpKyDigJMgQ3JlYXRlcyBh
IG5ldwotICBydG5ldGxpbmsgY29tbXVuaWNhdGlvbiBjb250ZXh0IGZvciB1c2Ugd2l0aCB0aGUg
ZnVuY3Rpb25zIGRlc2NyaWJlZCBiZWxvdy4KLSAgUmV0dXJucyArTlVMTCsgb24gZXJyb3IuCist
ICtzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqTkVUTElOS19DUkVBVEVfQ09OVEVYVChpbnQg
cHJvdG9jb2wpKyDigJMgQ3JlYXRlcworICBhIG5ldyBuZXRsaW5rIGNvbW11bmljYXRpb24gY29u
dGV4dCB3aXRoIGdpdmVuIG5ldGxpbmsgcHJvdG9jb2wgZm9yIHVzZQorICB3aXRoIHRoZSBmdW5j
dGlvbnMgZGVzY3JpYmVkIGJlbG93LiBSZXR1cm5zICtOVUxMKyBvbiBlcnJvci4KIAotLSArdm9p
ZCBSVE5MX0ZSRUVfTUVTU0FHRShzdHJ1Y3QgdHN0X3J0bmxfbWVzc2FnZSAqbXNnKSsg4oCTIEZy
ZWVzIGFuIGFycmF5IG9mCi0gIG1lc3NhZ2VzIHJldHVybmVkIGJ5ICtSVE5MX1JFQ1YoKSsuCist
ICt2b2lkIE5FVExJTktfRlJFRV9NRVNTQUdFKHN0cnVjdCB0c3RfbmV0bGlua19tZXNzYWdlICpt
c2cpKyDigJMgRnJlZXMKKyAgYW4gYXJyYXkgb2YgbWVzc2FnZXMgcmV0dXJuZWQgYnkgK05FVExJ
TktfUkVDVigpKy4KIAotLSArdm9pZCBSVE5MX0RFU1RST1lfQ09OVEVYVChzdHJ1Y3QgdHN0X3J0
bmxfY29udGV4dCAqY3R4KSsg4oCTIENsb3NlcyBhCi0gIGNvbW11bmljYXRpb24gY29udGV4dCBj
cmVhdGVkIGJ5ICtSVE5MX0NSRUFURV9DT05URVhUKCkrLgorLSArdm9pZCBORVRMSU5LX0RFU1RS
T1lfQ09OVEVYVChzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4KSsg4oCTIENsb3NlcyBh
CisgIGNvbW11bmljYXRpb24gY29udGV4dCBjcmVhdGVkIGJ5ICtORVRMSU5LX0NSRUFURV9DT05U
RVhUKCkrLgogCi0tICtpbnQgUlROTF9TRU5EKHN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpjdHgp
KyDigJMgU2VuZHMgYWxsIG1lc3NhZ2VzIHdhaXRpbmcKLSAgaW4gK2N0eCsgYnVmZmVyIHRvIHRo
ZSBrZXJuZWwuIElmIHRoZXJlIGFyZSBtdWx0aXBsZSBtZXNzYWdlcyB0byBzZW5kLCBhIG5ldwot
ICArTkxNU0dfRE9ORSsgbWVzc2FnZSB3aWxsIGJlIGFkZGVkIGF1dG9tYXRpY2FsbHkuIFJldHVy
bnMgdGhlIG51bWJlciBvZgotICBieXRlcyBzZW50IG9uIHN1Y2Nlc3MuIFJldHVybiAwIG9yIG5l
Z2F0aXZlIHZhbHVlIG9uIGVycm9yLgorLSAraW50IE5FVExJTktfU0VORChzdHJ1Y3QgdHN0X25l
dGxpbmtfY29udGV4dCAqY3R4KSsg4oCTIFNlbmRzIGFsbCBtZXNzYWdlcworICB3YWl0aW5nIGlu
ICtjdHgrIGJ1ZmZlciB0byB0aGUga2VybmVsLiBJZiB0aGVyZSBhcmUgbXVsdGlwbGUgbWVzc2Fn
ZXMKKyAgdG8gc2VuZCwgYSBuZXcgK05MTVNHX0RPTkUrIG1lc3NhZ2Ugd2lsbCBiZSBhZGRlZCBh
dXRvbWF0aWNhbGx5LiBSZXR1cm5zCisgIHRoZSBudW1iZXIgb2YgYnl0ZXMgc2VudCBvbiBzdWNj
ZXNzLiBSZXR1cm4gMCBvciBuZWdhdGl2ZSB2YWx1ZSBvbiBlcnJvci4KIAotLSAraW50IFJUTkxf
U0VORF9WQUxJREFURShzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCAqY3R4KSsg4oCTIFNlbmRzIGFs
bCBtZXNzYWdlcwotICBqdXN0IGxpa2UgK1JUTkxfU0VORCgpKywgdGhlbiByZWNlaXZlcyB0aGUg
cmVzcG9uc2UgZnJvbSB0aGUga2VybmVsIGFuZAotICB2YWxpZGF0ZXMgcmVzdWx0cyBvZiByZXF1
ZXN0cyBzZW50IHdpdGggdGhlICtOTE1fRl9BQ0srIGZsYWcuIFRoaXMgZnVuY3Rpb24KLSAgY2Fs
bHMgK3RzdF9icmsoKSsgYXMgdXN1YWwgaWYgY29tbXVuaWNhdGlvbiBmYWlscyBidXQgaXQgd2ls
bCByZXR1cm4gZXJyb3IKLSAgc3RhdHVzIHdpdGhvdXQgdGVybWluYXRpbmcgdGhlIHRlc3QgaWYg
b25lIG9mIHRoZSByZWNlaXZlZCBtZXNzYWdlcyBjb250YWlucwotICBlcnJvciBjb2RlLiBTZWUg
K1JUTkxfQ0hFQ0tfQUNLUygpKyBiZWxvdyBmb3IgZXhwbGFuYXRpb24gb2YgdGhlIHJldHVybgot
ICB2YWx1ZS4KKy0gK2ludCBORVRMSU5LX1NFTkRfVkFMSURBVEUoc3RydWN0IHRzdF9uZXRsaW5r
X2NvbnRleHQgKmN0eCkrIOKAkyBTZW5kcyBhbGwKKyAgbWVzc2FnZXMganVzdCBsaWtlICtORVRM
SU5LX1NFTkQoKSssIHRoZW4gcmVjZWl2ZXMgdGhlIHJlc3BvbnNlIGZyb20KKyAgdGhlIGtlcm5l
bCBhbmQgdmFsaWRhdGVzIHJlc3VsdHMgb2YgcmVxdWVzdHMgc2VudCB3aXRoIHRoZSArTkxNX0Zf
QUNLKyBmbGFnLgorICBUaGlzIGZ1bmN0aW9uIGNhbGxzICt0c3RfYnJrKCkrIGFzIHVzdWFsIGlm
IGNvbW11bmljYXRpb24gZmFpbHMgYnV0IGl0IHdpbGwKKyAgcmV0dXJuIGVycm9yIHN0YXR1cyB3
aXRob3V0IHRlcm1pbmF0aW5nIHRoZSB0ZXN0IGlmIG9uZSBvZiB0aGUgcmVjZWl2ZWQKKyAgbWVz
c2FnZXMgY29udGFpbnMgZXJyb3IgY29kZS4gU2VlICtORVRMSU5LX0NIRUNLX0FDS1MoKSsgYmVs
b3cgZm9yCisgIGV4cGxhbmF0aW9uIG9mIHRoZSByZXR1cm4gdmFsdWUuCiAKLS0gK2ludCBSVE5M
X1dBSVQoc3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKmN0eCkrIOKAkyBXYWl0cyB1bnRpbCBkYXRh
IGJlY29tZXMKLSAgYXZhaWxhYmxlIHRvIHJlYWQgZnJvbSB0aGUgcnRuZXRsaW5rIHNvY2tldCAo
dGltZW91dDogMSBzZWNvbmQpLiBSZXR1cm5zIDEKKy0gK2ludCBORVRMSU5LX1dBSVQoc3RydWN0
IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCkrIOKAkyBXYWl0cyB1bnRpbCBkYXRhIGJlY29tZXMK
KyAgYXZhaWxhYmxlIHRvIHJlYWQgZnJvbSB0aGUgbmV0bGluayBzb2NrZXQgKHRpbWVvdXQ6IDEg
c2Vjb25kKS4gUmV0dXJucyAxCiAgIGlmIHRoZXJlIGlzIGRhdGEgdG8gcmVhZCwgMCBvbiB0aW1l
b3V0IG9yIC0xIG9uIGVycm9yLgogCi0tICtzdHJ1Y3QgdHN0X3J0bmxfbWVzc2FnZSAqUlROTF9S
RUNWKHN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpjdHgpKyDigJMgUmVjZWl2ZXMKLSAgcnRuZXRs
aW5rIG1lc3NhZ2VzIGZyb20gdGhlIGtlcm5lbC4gVGhlIG1lc3NhZ2VzIGFyZSByZWNlaXZlZCBp
biBub24tYmxvY2tpbmcKLSAgbW9kZSBzbyBjYWxsaW5nICtSVE5MX1dBSVQoKSsgZmlyc3QgaXMg
cmVjb21tZW5kZWQuIFJldHVybnMgYW4gYXJyYXkgb2YKLSAgcGFydGlhbGx5IHBhcnNlZCBtZXNz
YWdlcyB0ZXJtaW5hdGVkIGJ5IGFuIGl0ZW0gd2l0aCArTlVMTCsgaW4gdGhlICtoZWFkZXIrCi0g
IGZpZWxkLiBPbiBlcnJvciBvciB3aGVuIHRoZXJlIGFyZSBubyBtZXNzYWdlcyB0byByZWNlaXZl
LCByZXR1cm5zICtOVUxMKy4KLSAgQ2FsbCArUlROTF9GUkVFX01FU1NBR0UoKSsgdG8gZnJlZSB0
aGUgcmV0dXJuZWQgZGF0YS4KLQotLSAraW50IFJUTkxfQ0hFQ0tfQUNLUyhzdHJ1Y3QgdHN0X3J0
bmxfY29udGV4dCAqY3R4LCBzdHJ1Y3QgdHN0X3J0bmxfbWVzc2FnZQotICAqcmVzcG9uc2UpKyDi
gJMgVmFsaWRhdGUgcmVzdWx0cyBvZiByZXF1ZXN0cyBzZW50IHdpdGggdGhlICtOTE1fRl9BQ0sr
IGZsYWcuCi0gIERvIG5vdCBjYWxsICtSVE5MX0FERF9NRVNTQUdFKCkrIGJldHdlZW4gK1JUTkxf
U0VORCgpKyBhbmQKLSAgK1JUTkxfQ0hFQ0tfQUNLUygpKyBiZWNhdXNlIGl0IHdpbGwgcmVzZXQg
dGhlIHN0YXRlIG9mICtjdHgrIGFuZCBwcmV2ZW50Ci0gIHJlc3VsdCB2YWxpZGF0aW9uLiBSZXR1
cm5zIDEgaWYgYWxsIG1lc3NhZ2VzIHNlbnQgd2l0aCB0aGUgK05MTV9GX0FDSysgZmxhZwotICBo
YXZlIGEgY29ycmVzcG9uZGluZyBtZXNzYWdlIGluICtyZXNwb25zZSsgYW5kIHRoZSBlcnJvciBj
b2RlIGlzIDAuIElmIGFueQotICBvZiB0aGUgZXhwZWN0ZWQgcmVzcG9uc2UgbWVzc2FnZXMgaXMg
bWlzc2luZywgdGhpcyBmdW5jdGlvbiB3aWxsIGNhbGwKLSAgK3RzdF9icmsoKSsgKG9yIHJldHVy
biAwIGR1cmluZyB0ZXN0IGNsZWFudXAgcGhhc2UpLiBJZiBhbnkgb2YgdGhlIHJlc3BvbnNlCi0g
IG1lc3NhZ2VzIGhhcyBub24temVybyBlcnJvciBjb2RlLCB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0
dXJuIDAgYW5kIHN0b3JlIHRoZQotICBmaXJzdCBub24temVybyBlcnJvciBjb2RlIGluIGdsb2Jh
bCB2YXJpYWJsZSArdHN0X3J0bmxfZXJybm8rIChzaWduLWZsaXBwZWQKLSAganVzdCBsaWtlIHJl
Z3VsYXIgbGliYyArZXJybm8rKS4KKy0gK3N0cnVjdCB0c3RfbmV0bGlua19tZXNzYWdlICpORVRM
SU5LX1JFQ1Yoc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCkrIOKAkworICBSZWNlaXZl
cyBuZXRsaW5rIG1lc3NhZ2VzIGZyb20gdGhlIGtlcm5lbC4gVGhlIG1lc3NhZ2VzIGFyZSByZWNl
aXZlZAorICBpbiBub24tYmxvY2tpbmcgbW9kZSBzbyBjYWxsaW5nICtORVRMSU5LX1dBSVQoKSsg
Zmlyc3QgaXMgcmVjb21tZW5kZWQuCisgIFJldHVybnMgYW4gYXJyYXkgb2YgcGFydGlhbGx5IHBh
cnNlZCBtZXNzYWdlcyB0ZXJtaW5hdGVkIGJ5IGFuIGl0ZW0gd2l0aAorICArTlVMTCsgaW4gdGhl
ICtoZWFkZXIrIGZpZWxkLiBPbiBlcnJvciBvciB3aGVuIHRoZXJlIGFyZSBubyBtZXNzYWdlcwor
ICB0byByZWNlaXZlLCByZXR1cm5zICtOVUxMKy4gQ2FsbCArTkVUTElOS19GUkVFX01FU1NBR0Uo
KSsgdG8gZnJlZQorICB0aGUgcmV0dXJuZWQgZGF0YS4KKworLSAraW50IE5FVExJTktfQ0hFQ0tf
QUNLUyhzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4LAorICBzdHJ1Y3QgdHN0X25ldGxp
bmtfbWVzc2FnZSAqcmVzcG9uc2UpKyDigJMgVmFsaWRhdGUgcmVzdWx0cyBvZiByZXF1ZXN0cyBz
ZW50CisgIHdpdGggdGhlICtOTE1fRl9BQ0srIGZsYWcuIERvIG5vdCBjYWxsICtORVRMSU5LX0FE
RF9NRVNTQUdFKCkrIGJldHdlZW4KKyAgK05FVExJTktfU0VORCgpKyBhbmQgK05FVExJTktfQ0hF
Q0tfQUNLUygpKyBiZWNhdXNlIGl0IHdpbGwgcmVzZXQgdGhlIHN0YXRlCisgIG9mICtjdHgrIGFu
ZCBwcmV2ZW50IHJlc3VsdCB2YWxpZGF0aW9uLiBSZXR1cm5zIDEgaWYgYWxsIG1lc3NhZ2VzIHNl
bnQKKyAgd2l0aCB0aGUgK05MTV9GX0FDSysgZmxhZyBoYXZlIGEgY29ycmVzcG9uZGluZyBtZXNz
YWdlIGluICtyZXNwb25zZSsgYW5kCisgIHRoZSBlcnJvciBjb2RlIGlzIDAuIElmIGFueSBvZiB0
aGUgZXhwZWN0ZWQgcmVzcG9uc2UgbWVzc2FnZXMgaXMgbWlzc2luZywKKyAgdGhpcyBmdW5jdGlv
biB3aWxsIGNhbGwgK3RzdF9icmsoKSsgKG9yIHJldHVybiAwIGR1cmluZyB0ZXN0IGNsZWFudXAg
cGhhc2UpLgorICBJZiBhbnkgb2YgdGhlIHJlc3BvbnNlIG1lc3NhZ2VzIGhhcyBub24temVybyBl
cnJvciBjb2RlLCB0aGlzIGZ1bmN0aW9uIHdpbGwKKyAgcmV0dXJuIDAgYW5kIHN0b3JlIHRoZSBm
aXJzdCBub24temVybyBlcnJvciBjb2RlIGluIGdsb2JhbCB2YXJpYWJsZQorICArdHN0X25ldGxp
bmtfZXJybm8rIChzaWduLWZsaXBwZWQganVzdCBsaWtlIHJlZ3VsYXIgbGliYyArZXJybm8rKS4K
IAogMy4zIENyZWF0aW5nIG1lc3NhZ2VzCiB+fn5+fn5+fn5+fn5+fn5+fn5+fn4KIAotLSAraW50
IFJUTkxfQUREX01FU1NBR0Uoc3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKmN0eCwgY29uc3Qgc3Ry
dWN0IG5sbXNnaGRyCi0gICpoZWFkZXIsIGNvbnN0IHZvaWQgKnBheWxvYWQsIHNpemVfdCBwYXls
b2FkX3NpemUpKyDigJMgQWRkcyBuZXcgcnRuZXRsaW5rCi0gIG1lc3NhZ2UgdG8gK2N0eCsgYnVm
ZmVyLiBZb3UgbmVlZCB0byBwcm92aWRlIG1lc3NhZ2UgK2hlYWRlcisgYW5kIG9wdGlvbmFsCi0g
ICtwYXlsb2FkKy4gK3BheWxvYWRfc2l6ZSsgaXMgdGhlIHNpemUgb2YgK3BheWxvYWQrIGRhdGEg
aW4gYnl0ZXMuIElmIHlvdQotICBkb24ndCB3YW50IHRvIGFkZCBhbnkgcGF5bG9hZCBkYXRhLCBz
ZXQgK3BheWxvYWQrIHRvICtOVUxMKyBhbmQKKy0gK2ludCBORVRMSU5LX0FERF9NRVNTQUdFKHN0
cnVjdCB0c3RfbmV0bGlua19jb250ZXh0ICpjdHgsIGNvbnN0IHN0cnVjdAorICBubG1zZ2hkciAq
aGVhZGVyLCBjb25zdCB2b2lkICpwYXlsb2FkLCBzaXplX3QgcGF5bG9hZF9zaXplKSsg4oCTIEFk
ZHMgbmV3CisgIG5ldGxpbmsgbWVzc2FnZSB0byArY3R4KyBidWZmZXIuIFlvdSBuZWVkIHRvIHBy
b3ZpZGUgbWVzc2FnZSAraGVhZGVyKyBhbmQKKyAgb3B0aW9uYWwgK3BheWxvYWQrLiArcGF5bG9h
ZF9zaXplKyBpcyB0aGUgc2l6ZSBvZiArcGF5bG9hZCsgZGF0YSBpbiBieXRlcy4KKyAgSWYgeW91
IGRvbid0IHdhbnQgdG8gYWRkIGFueSBwYXlsb2FkIGRhdGEsIHNldCArcGF5bG9hZCsgdG8gK05V
TEwrIGFuZAogICArcGF5bG9hZF9zaXplKyB0byAwLiBUaGlzIGZ1bmN0aW9uIHdpbGwgYXV0b21h
dGljYWxseSBmaWxsIHRoZSArbmxtc2dfbGVuKywKICAgK25sbXNnX3NlcSsgYW5kICtubG1zZ19w
aWQrIGZpZWxkcyBvZiB0aGUgbmV3IG1lc3NhZ2UgaGVhZGVyLiBZb3UgZG9uJ3QgbmVlZAogICB0
byBzZXQgdGhvc2UuIEl0J2xsIGFsc28gYXV0b21hdGljYWxseSBhZGQgK05MTV9GX01VTFRJKyBm
bGFnIHdoZW4gbmVlZGVkLgogICBSZXR1cm5zIDEgb24gc3VjY2VzcywgMCBvbiBlcnJvci4gTm90
ZSB0aGF0IHRoZSBmaXJzdCBjYWxsIG9mCi0gICtSVE5MX0FERF9NRVNTQUdFKCkrIGFmdGVyICtS
VE5MX1NFTkQoKSsgd2lsbCByZXNldCB0aGUgc3RhdGUgb2YgK2N0eCsKLSAgYW5kICtSVE5MX0NI
RUNLX0FDS1MoKSsgd2lsbCBub3Qgd29yayBjb3JyZWN0bHkgdW50aWwgdGhlIG5leHQgK1JUTkxf
U0VORCgpKy4KLQotLSAraW50IFJUTkxfQUREX0FUVFIoc3RydWN0IHRzdF9ydG5sX2NvbnRleHQg
KmN0eCwgdW5zaWduZWQgc2hvcnQgdHlwZSwgY29uc3QKLSAgdm9pZCAqZGF0YSwgdW5zaWduZWQg
c2hvcnQgbGVuKSsg4oCTIEFkZHMgbmV3IGF0dHJpYnV0ZSB0byB0aGUgbGFzdCBtZXNzYWdlCi0g
IGluICtjdHgrIGJ1ZmZlci4gU2VlICtSVE5MX0FERF9NRVNTQUdFKCkrLiBZb3UgbmVlZCB0byBw
cm92aWRlIGF0dHJpYnV0ZQotICArdHlwZSsgd2hpY2ggd2lsbCBiZSBzdG9yZWQgaW4gK3N0cnVj
dCBydGF0dHIucnRhX3R5cGUrLCBvcHRpb25hbCBwYXlsb2FkCi0gICtkYXRhKyBhbmQgcGF5bG9h
ZCBzaXplICtsZW4rIGluIGJ5dGVzLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBhZGQgYW55IHBheWxv
YWQsCi0gIHNldCArZGF0YSsgdG8gK05VTEwrIGFuZCArbGVuKyB0byAwLiBSZXR1cm5zIDEgb24g
c3VjY2VzcywgMCBvbiBlcnJvci4KLQotLSAraW50IFJUTkxfQUREX0FUVFJfU1RSSU5HKHN0cnVj
dCB0c3RfcnRubF9jb250ZXh0ICpjdHgsIHVuc2lnbmVkIHNob3J0IHR5cGUsCi0gIGNvbnN0IGNo
YXIgKmRhdGEpKyDigJMgQWRkcyBuZXcgc3RyaW5nIGF0dHJpYnV0ZSB0byB0aGUgbGFzdCBtZXNz
YWdlIGluICtjdHgrCi0gIGJ1ZmZlci4gUGFyYW1ldGVycyBhbmQgcmV0dXJuIHZhbHVlIGFyZSB0
aGUgc2FtZSBhcyBmb3IgK1JUTkxfQUREX0FUVFIoKSssCi0gIGV4Y2VwdCB0aGUgcGF5bG9hZCBs
ZW5ndGggaXMgY2FsY3VsYXRlZCB1c2luZyArc3RybGVuKCkrLgotCi0tICtpbnQgUlROTF9BRERf
QVRUUl9MSVNUKHN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpjdHgsIGNvbnN0IHN0cnVjdAorICAr
TkVUTElOS19BRERfTUVTU0FHRSgpKyBhZnRlciArTkVUTElOS19TRU5EKCkrIHdpbGwgcmVzZXQg
dGhlIHN0YXRlIG9mICtjdHgrCisgIGFuZCArTkVUTElOS19DSEVDS19BQ0tTKCkrIHdpbGwgbm90
IHdvcmsgY29ycmVjdGx5IHVudGlsIHRoZSBuZXh0CisgICtORVRMSU5LX1NFTkQoKSsuCisKKy0g
K2ludCBSVE5MX0FERF9BVFRSKHN0cnVjdCB0c3RfbmV0bGlua19jb250ZXh0ICpjdHgsIHVuc2ln
bmVkIHNob3J0IHR5cGUsCisgIGNvbnN0IHZvaWQgKmRhdGEsIHVuc2lnbmVkIHNob3J0IGxlbikr
IOKAkyBBZGRzIG5ldyBhdHRyaWJ1dGUgdG8gdGhlIGxhc3QKKyAgbWVzc2FnZSBpbiArY3R4KyBi
dWZmZXIuIFNlZSArTkVUTElOS19BRERfTUVTU0FHRSgpKy4gWW91IG5lZWQgdG8gcHJvdmlkZQor
ICBhdHRyaWJ1dGUgK3R5cGUrIHdoaWNoIHdpbGwgYmUgc3RvcmVkIGluICtzdHJ1Y3QgcnRhdHRy
LnJ0YV90eXBlKywgb3B0aW9uYWwKKyAgcGF5bG9hZCArZGF0YSsgYW5kIHBheWxvYWQgc2l6ZSAr
bGVuKyBpbiBieXRlcy4gSWYgeW91IGRvbid0IHdhbnQgdG8gYWRkIGFueQorICBwYXlsb2FkLCBz
ZXQgK2RhdGErIHRvICtOVUxMKyBhbmQgK2xlbisgdG8gMC4gUmV0dXJucyAxIG9uIHN1Y2Nlc3Ms
CisgIDAgb24gZXJyb3IuCisKKy0gK2ludCBSVE5MX0FERF9BVFRSX1NUUklORyhzdHJ1Y3QgdHN0
X25ldGxpbmtfY29udGV4dCAqY3R4LCB1bnNpZ25lZCBzaG9ydAorICB0eXBlLCBjb25zdCBjaGFy
ICpkYXRhKSsg4oCTIEFkZHMgbmV3IHN0cmluZyBhdHRyaWJ1dGUgdG8gdGhlIGxhc3QgbWVzc2Fn
ZQorICBpbiArY3R4KyBidWZmZXIuIFBhcmFtZXRlcnMgYW5kIHJldHVybiB2YWx1ZSBhcmUgdGhl
IHNhbWUgYXMgZm9yCisgICtSVE5MX0FERF9BVFRSKCkrLCBleGNlcHQgdGhlIHBheWxvYWQgbGVu
Z3RoIGlzIGNhbGN1bGF0ZWQgdXNpbmcgK3N0cmxlbigpKy4KKworLSAraW50IFJUTkxfQUREX0FU
VFJfTElTVChzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4LCBjb25zdCBzdHJ1Y3QKICAg
dHN0X3J0bmxfYXR0cl9saXN0ICpsaXN0KSsg4oCTIEFkZHMgYSBsaXN0IG9mIGF0dHJpYnV0ZXMg
dG8gdGhlIGxhc3QgbWVzc2FnZQogICBpbiArY3R4KyBidWZmZXIuIFNlZSBkZXNjcmlwdGlvbiBv
ZiArc3RydWN0IHRzdF9ydG5sX2F0dHJfbGlzdCsgYW5kCi0gICtSVE5MX0FERF9NRVNTQUdFKCkr
IGFib3ZlLiAgUmV0dXJucyB0aGUgbnVtYmVyIG9mIGFkZGVkIGF0dHJpYnV0ZXMgb24KKyAgK05F
VExJTktfQUREX01FU1NBR0UoKSsgYWJvdmUuICBSZXR1cm5zIHRoZSBudW1iZXIgb2YgYWRkZWQg
YXR0cmlidXRlcyBvbgogICBzdWNjZXNzIChuZXN0ZWQgYXR0cmlidXRlcyBhcmUgbm90IGNvdW50
ZWQpLCAtMSBvbiBlcnJvci4KIAogRXhhbXBsZSBVc2FnZQpAQCAtNDQ3LDcgKzQ1MCw3IEBAIEV4
YW1wbGUgVXNhZ2UKIAogdm9pZCBzZXR1cCh2b2lkKQogewotCXN0cnVjdCB0c3RfcnRubF9jb250
ZXh0ICpjdHg7CisJc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eDsKIAlpbnQgaW5kZXgs
IHJldDsKIAlpbl9hZGRyX3QgYWRkcjsKIApAQCAtNDY1LDEyICs0NjgsMTIgQEAgdm9pZCBzZXR1
cCh2b2lkKQogCWluZGV4ID0gTkVUREVWX0lOREVYX0JZX05BTUUoImx0cF92ZXRoMSIpOwogCWlu
Zm8uaWZhX2luZGV4ID0gaW5kZXg7CiAKLQljdHggPSBSVE5MX0NSRUFURV9DT05URVhUKCk7Ci0J
UlROTF9BRERfTUVTU0FHRShjdHgsICZoZWFkZXIsICZpbmZvLCBzaXplb2YoaW5mbykpOworCWN0
eCA9IE5FVExJTktfQ1JFQVRFX0NPTlRFWFQoTkVUTElOS19ST1VURSk7CisJTkVUTElOS19BRERf
TUVTU0FHRShjdHgsICZoZWFkZXIsICZpbmZvLCBzaXplb2YoaW5mbykpOwogCWFkZHIgPSBpbmV0
X2FkZHIoIjE5Mi4xNjguMTIzLjQ1Iik7CiAJUlROTF9BRERfQVRUUihjdHgsIElGQV9MT0NBTCwg
JmFkZHIsIHNpemVvZihhZGRyKSk7Ci0JcmV0ID0gUlROTF9TRU5EX1ZBTElEQVRFKGN0eCk7Ci0J
UlROTF9ERVNUUk9ZX0NPTlRFWFQoY3R4KTsKKwlyZXQgPSBORVRMSU5LX1NFTkRfVkFMSURBVEUo
Y3R4KTsKKwlORVRMSU5LX0RFU1RST1lfQ09OVEVYVChjdHgpOwogCiAJaWYgKCFyZXQpIHsKIAkJ
dHN0X2JyayhUQlJPSywgIkZhaWxlZCB0byBzZXQgbHRwX3ZldGgxIGFkZHJlc3MiKTsKZGlmZiAt
LWdpdCBhL2luY2x1ZGUvdHN0X3J0bmV0bGluay5oIGIvaW5jbHVkZS90c3RfcnRuZXRsaW5rLmgK
aW5kZXggNmEwYzUzZGY0Li5jNWYyOTVhMzggMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdHN0X3J0bmV0
bGluay5oCisrKyBiL2luY2x1ZGUvdHN0X3J0bmV0bGluay5oCkBAIC01LDcgKzUsNyBAQAogI2lm
bmRlZiBUU1RfUlRORVRMSU5LX0gKICNkZWZpbmUgVFNUX1JUTkVUTElOS19ICiAKLXN0cnVjdCB0
c3RfcnRubF9jb250ZXh0Oworc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQ7CiAKIHN0cnVjdCB0
c3RfcnRubF9hdHRyX2xpc3QgewogCXVuc2lnbmVkIHNob3J0IHR5cGU7CkBAIC0xNCw3MSArMTQs
NzIgQEAgc3RydWN0IHRzdF9ydG5sX2F0dHJfbGlzdCB7CiAJY29uc3Qgc3RydWN0IHRzdF9ydG5s
X2F0dHJfbGlzdCAqc3VibGlzdDsKIH07CiAKLXN0cnVjdCB0c3RfcnRubF9tZXNzYWdlIHsKK3N0
cnVjdCB0c3RfbmV0bGlua19tZXNzYWdlIHsKIAlzdHJ1Y3Qgbmxtc2doZHIgKmhlYWRlcjsKIAlz
dHJ1Y3Qgbmxtc2dlcnIgKmVycjsKIAl2b2lkICpwYXlsb2FkOwogCXNpemVfdCBwYXlsb2FkX3Np
emU7CiB9OwogCi1leHRlcm4gaW50IHRzdF9ydG5sX2Vycm5vOworZXh0ZXJuIGludCB0c3RfbmV0
bGlua19lcnJubzsKIAogLyogT3BlbiBhIG5ldGxpbmsgc29ja2V0ICovCi1zdHJ1Y3QgdHN0X3J0
bmxfY29udGV4dCAqdHN0X3J0bmxfY3JlYXRlX2NvbnRleHQoY29uc3QgY2hhciAqZmlsZSwKLQlj
b25zdCBpbnQgbGluZW5vKTsKLSNkZWZpbmUgUlROTF9DUkVBVEVfQ09OVEVYVCgpIHRzdF9ydG5s
X2NyZWF0ZV9jb250ZXh0KF9fRklMRV9fLCBfX0xJTkVfXykKK3N0cnVjdCB0c3RfbmV0bGlua19j
b250ZXh0ICp0c3RfbmV0bGlua19jcmVhdGVfY29udGV4dChjb25zdCBjaGFyICpmaWxlLAorCWNv
bnN0IGludCBsaW5lbm8sIGludCBwcm90b2NvbCk7CisjZGVmaW5lIE5FVExJTktfQ1JFQVRFX0NP
TlRFWFQocHJvdG9jb2wpIFwKKwl0c3RfbmV0bGlua19jcmVhdGVfY29udGV4dChfX0ZJTEVfXywg
X19MSU5FX18sIChwcm90b2NvbCkpCiAKLS8qIEZyZWUgYSB0c3RfcnRubF9tZXNzYWdlIGFycmF5
IHJldHVybmVkIGJ5IHRzdF9ydG5sX3JlY3YoKSAqLwotdm9pZCB0c3RfcnRubF9mcmVlX21lc3Nh
Z2Uoc3RydWN0IHRzdF9ydG5sX21lc3NhZ2UgKm1zZyk7Ci0jZGVmaW5lIFJUTkxfRlJFRV9NRVNT
QUdFIHRzdF9ydG5sX2ZyZWVfbWVzc2FnZQorLyogRnJlZSBhIHRzdF9uZXRsaW5rX21lc3NhZ2Ug
YXJyYXkgcmV0dXJuZWQgYnkgdHN0X25ldGxpbmtfcmVjdigpICovCit2b2lkIHRzdF9uZXRsaW5r
X2ZyZWVfbWVzc2FnZShzdHJ1Y3QgdHN0X25ldGxpbmtfbWVzc2FnZSAqbXNnKTsKKyNkZWZpbmUg
TkVUTElOS19GUkVFX01FU1NBR0UgdHN0X25ldGxpbmtfZnJlZV9tZXNzYWdlCiAKIC8qIENsb3Nl
IG5ldGxpbmsgc29ja2V0ICovCi12b2lkIHRzdF9ydG5sX2Rlc3Ryb3lfY29udGV4dChjb25zdCBj
aGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAotCXN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpj
dHgpOwotI2RlZmluZSBSVE5MX0RFU1RST1lfQ09OVEVYVChjdHgpIFwKLQl0c3RfcnRubF9kZXN0
cm95X2NvbnRleHQoX19GSUxFX18sIF9fTElORV9fLCAoY3R4KSkKK3ZvaWQgdHN0X25ldGxpbmtf
ZGVzdHJveV9jb250ZXh0KGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCisJc3Ry
dWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCk7CisjZGVmaW5lIE5FVExJTktfREVTVFJPWV9D
T05URVhUKGN0eCkgXAorCXRzdF9uZXRsaW5rX2Rlc3Ryb3lfY29udGV4dChfX0ZJTEVfXywgX19M
SU5FX18sIChjdHgpKQogCiAvKiBTZW5kIGFsbCBtZXNzYWdlcyBpbiBnaXZlbiBidWZmZXIgKi8K
LWludCB0c3RfcnRubF9zZW5kKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCi0J
c3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKmN0eCk7Ci0jZGVmaW5lIFJUTkxfU0VORChjdHgpIHRz
dF9ydG5sX3NlbmQoX19GSUxFX18sIF9fTElORV9fLCAoY3R4KSkKK2ludCB0c3RfbmV0bGlua19z
ZW5kKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCisJc3RydWN0IHRzdF9uZXRs
aW5rX2NvbnRleHQgKmN0eCk7CisjZGVmaW5lIE5FVExJTktfU0VORChjdHgpIHRzdF9uZXRsaW5r
X3NlbmQoX19GSUxFX18sIF9fTElORV9fLCAoY3R4KSkKIAogLyogU2VuZCBhbGwgbWVzc2FnZXMg
aW4gZ2l2ZW4gYnVmZmVyIGFuZCB2YWxpZGF0ZSBrZXJuZWwgcmVzcG9uc2UgKi8KLWludCB0c3Rf
cnRubF9zZW5kX3ZhbGlkYXRlKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCi0J
c3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKmN0eCk7Ci0jZGVmaW5lIFJUTkxfU0VORF9WQUxJREFU
RShjdHgpIFwKLQl0c3RfcnRubF9zZW5kX3ZhbGlkYXRlKF9fRklMRV9fLCBfX0xJTkVfXywgKGN0
eCkpCitpbnQgdHN0X25ldGxpbmtfc2VuZF92YWxpZGF0ZShjb25zdCBjaGFyICpmaWxlLCBjb25z
dCBpbnQgbGluZW5vLAorCXN0cnVjdCB0c3RfbmV0bGlua19jb250ZXh0ICpjdHgpOworI2RlZmlu
ZSBORVRMSU5LX1NFTkRfVkFMSURBVEUoY3R4KSBcCisJdHN0X25ldGxpbmtfc2VuZF92YWxpZGF0
ZShfX0ZJTEVfXywgX19MSU5FX18sIChjdHgpKQogCiAvKiBXYWl0IHVudGlsIGRhdGEgaXMgYXZh
aWxhYmxlIGZvciByZWFkaW5nIGZyb20gdGhlIG5ldGxpbmsgc29ja2V0ICovCi1pbnQgdHN0X3J0
bmxfd2FpdChzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCAqY3R4KTsKLSNkZWZpbmUgUlROTF9XQUlU
IHRzdF9ydG5sX3dhaXQKK2ludCB0c3RfbmV0bGlua193YWl0KHN0cnVjdCB0c3RfbmV0bGlua19j
b250ZXh0ICpjdHgpOworI2RlZmluZSBORVRMSU5LX1dBSVQgdHN0X25ldGxpbmtfd2FpdAogCiAv
KgogICogUmVhZCBmcm9tIG5ldGxpbmsgc29ja2V0IGFuZCByZXR1cm4gYW4gYXJyYXkgb2YgcGFy
dGlhbGx5IHBhcnNlZCBtZXNzYWdlcy4KICAqIGhlYWRlciA9PSBOVUxMIGluZGljYXRlcyBlbmQg
b2YgYXJyYXkuCiAgKi8KLXN0cnVjdCB0c3RfcnRubF9tZXNzYWdlICp0c3RfcnRubF9yZWN2KGNv
bnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCi0Jc3RydWN0IHRzdF9ydG5sX2NvbnRl
eHQgKmN0eCk7Ci0jZGVmaW5lIFJUTkxfUkVDVihjdHgpIHRzdF9ydG5sX3JlY3YoX19GSUxFX18s
IF9fTElORV9fLCAoY3R4KSkKK3N0cnVjdCB0c3RfbmV0bGlua19tZXNzYWdlICp0c3RfbmV0bGlu
a19yZWN2KGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCisJc3RydWN0IHRzdF9u
ZXRsaW5rX2NvbnRleHQgKmN0eCk7CisjZGVmaW5lIE5FVExJTktfUkVDVihjdHgpIHRzdF9uZXRs
aW5rX3JlY3YoX19GSUxFX18sIF9fTElORV9fLCAoY3R4KSkKIAogLyogQWRkIG5ldyBtZXNzYWdl
IHRvIGJ1ZmZlciAqLwotaW50IHRzdF9ydG5sX2FkZF9tZXNzYWdlKGNvbnN0IGNoYXIgKmZpbGUs
IGNvbnN0IGludCBsaW5lbm8sCi0Jc3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKmN0eCwgY29uc3Qg
c3RydWN0IG5sbXNnaGRyICpoZWFkZXIsCitpbnQgdHN0X25ldGxpbmtfYWRkX21lc3NhZ2UoY29u
c3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfY29u
dGV4dCAqY3R4LCBjb25zdCBzdHJ1Y3Qgbmxtc2doZHIgKmhlYWRlciwKIAljb25zdCB2b2lkICpw
YXlsb2FkLCBzaXplX3QgcGF5bG9hZF9zaXplKTsKLSNkZWZpbmUgUlROTF9BRERfTUVTU0FHRShj
dHgsIGhlYWRlciwgcGF5bG9hZCwgcHNpemUpIFwKLQl0c3RfcnRubF9hZGRfbWVzc2FnZShfX0ZJ
TEVfXywgX19MSU5FX18sIChjdHgpLCAoaGVhZGVyKSwgKHBheWxvYWQpLCBcCi0JCShwc2l6ZSkp
CisjZGVmaW5lIE5FVExJTktfQUREX01FU1NBR0UoY3R4LCBoZWFkZXIsIHBheWxvYWQsIHBzaXpl
KSBcCisJdHN0X25ldGxpbmtfYWRkX21lc3NhZ2UoX19GSUxFX18sIF9fTElORV9fLCAoY3R4KSwg
KGhlYWRlciksIFwKKwkJKHBheWxvYWQpLCAocHNpemUpKQogCiAvKiBBZGQgYXJiaXRyYXJ5IGF0
dHJpYnV0ZSB0byBsYXN0IG1lc3NhZ2UgKi8KIGludCB0c3RfcnRubF9hZGRfYXR0cihjb25zdCBj
aGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAotCXN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpj
dHgsIHVuc2lnbmVkIHNob3J0IHR5cGUsIGNvbnN0IHZvaWQgKmRhdGEsCisJc3RydWN0IHRzdF9u
ZXRsaW5rX2NvbnRleHQgKmN0eCwgdW5zaWduZWQgc2hvcnQgdHlwZSwgY29uc3Qgdm9pZCAqZGF0
YSwKIAl1bnNpZ25lZCBzaG9ydCBsZW4pOwogI2RlZmluZSBSVE5MX0FERF9BVFRSKGN0eCwgdHlw
ZSwgZGF0YSwgbGVuKSBcCiAJdHN0X3J0bmxfYWRkX2F0dHIoX19GSUxFX18sIF9fTElORV9fLCAo
Y3R4KSwgKHR5cGUpLCAoZGF0YSksIChsZW4pKQogCiAvKiBBZGQgc3RyaW5nIGF0dHJpYnV0ZSB0
byBsYXN0IG1lc3NhZ2UgKi8KIGludCB0c3RfcnRubF9hZGRfYXR0cl9zdHJpbmcoY29uc3QgY2hh
ciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKLQlzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCAqY3R4
LCB1bnNpZ25lZCBzaG9ydCB0eXBlLCBjb25zdCBjaGFyICpkYXRhKTsKKwlzdHJ1Y3QgdHN0X25l
dGxpbmtfY29udGV4dCAqY3R4LCB1bnNpZ25lZCBzaG9ydCB0eXBlLCBjb25zdCBjaGFyICpkYXRh
KTsKICNkZWZpbmUgUlROTF9BRERfQVRUUl9TVFJJTkcoY3R4LCB0eXBlLCBkYXRhKSBcCiAJdHN0
X3J0bmxfYWRkX2F0dHJfc3RyaW5nKF9fRklMRV9fLCBfX0xJTkVfXywgKGN0eCksICh0eXBlKSwg
KGRhdGEpKQogCkBAIC04NywyMiArODgsMjIgQEAgaW50IHRzdF9ydG5sX2FkZF9hdHRyX3N0cmlu
Zyhjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAogICogYnkgYXR0cmlidXRlIHdp
dGggbmVnYXRpdmUgbGVuZ3RoLiBOZXN0ZWQgc3VibGlzdHMgYXJlIHN1cHBvcnRlZC4KICAqLwog
aW50IHRzdF9ydG5sX2FkZF9hdHRyX2xpc3QoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxp
bmVubywKLQlzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCAqY3R4LCBjb25zdCBzdHJ1Y3QgdHN0X3J0
bmxfYXR0cl9saXN0ICpsaXN0KTsKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4LCBj
b25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0ICpsaXN0KTsKICNkZWZpbmUgUlROTF9BRERf
QVRUUl9MSVNUKGN0eCwgbGlzdCkgXAogCXRzdF9ydG5sX2FkZF9hdHRyX2xpc3QoX19GSUxFX18s
IF9fTElORV9fLCAoY3R4KSwgKGxpc3QpKQogCiAvKiBDaGVjayB0aGF0IGFsbCBzZW50IG1lc3Nh
Z2VzIHdpdGggTkxNX0ZfQUNLIGZsYWcgaGF2ZSBiZWVuIGFja2VkIHdpdGhvdXQKICAqIGVycm9y
LiBVc2FnZToKICAqCi0gKiB0c3RfcnRubF9zZW5kKGN0eCk7Ci0gKiB0c3RfcnRubF93YWl0KGN0
eCk7Ci0gKiByZXNwb25zZSA9IHRzdF9ydG5sX3JlY3YoY3R4KTsKLSAqIGlmICghdHN0X3J0bmxf
Y2hlY2tfYWNrcyhjdHgsIHJlc3BvbnNlKSkgeyAuLi4gfQotICogdHN0X3J0bmxfZnJlZV9tZXNz
YWdlKHJlc3BvbnNlKTsKKyAqIHRzdF9uZXRsaW5rX3NlbmQoY3R4KTsKKyAqIHRzdF9uZXRsaW5r
X3dhaXQoY3R4KTsKKyAqIHJlc3BvbnNlID0gdHN0X25ldGxpbmtfcmVjdihjdHgpOworICogaWYg
KCF0c3RfbmV0bGlua19jaGVja19hY2tzKGN0eCwgcmVzcG9uc2UpKSB7IC4uLiB9CisgKiB0c3Rf
bmV0bGlua19mcmVlX21lc3NhZ2UocmVzcG9uc2UpOwogICovCi1pbnQgdHN0X3J0bmxfY2hlY2tf
YWNrcyhjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAotCXN0cnVjdCB0c3RfcnRu
bF9jb250ZXh0ICpjdHgsIHN0cnVjdCB0c3RfcnRubF9tZXNzYWdlICpyZXNwb25zZSk7Ci0jZGVm
aW5lIFJUTkxfQ0hFQ0tfQUNLUyhjdHgsIHJlc3BvbnNlKSBcCi0JdHN0X3J0bmxfY29udGV4dChf
X0ZJTEVfXywgX19MSU5FX18sIChjdHgpLCAocmVzcG9uc2UpKQoraW50IHRzdF9uZXRsaW5rX2No
ZWNrX2Fja3MoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwlzdHJ1Y3QgdHN0
X25ldGxpbmtfY29udGV4dCAqY3R4LCBzdHJ1Y3QgdHN0X25ldGxpbmtfbWVzc2FnZSAqcmVzcG9u
c2UpOworI2RlZmluZSBORVRMSU5LX0NIRUNLX0FDS1MoY3R4LCByZXNwb25zZSkgXAorCXRzdF9u
ZXRsaW5rX2NoZWNrX2Fja3MoX19GSUxFX18sIF9fTElORV9fLCAoY3R4KSwgKHJlc3BvbnNlKSkK
IAogI2VuZGlmIC8qIFRTVF9SVE5FVExJTktfSCAqLwpkaWZmIC0tZ2l0IGEvbGliL3RzdF9uZXRk
ZXZpY2UuYyBiL2xpYi90c3RfbmV0ZGV2aWNlLmMKaW5kZXggZGJhNDRjNjIzLi41ODczYjNkNTgg
MTAwNjQ0Ci0tLSBhL2xpYi90c3RfbmV0ZGV2aWNlLmMKKysrIGIvbGliL3RzdF9uZXRkZXZpY2Uu
YwpAQCAtMTUsMjMgKzE1LDI0IEBACiAjaW5jbHVkZSAidHN0X3J0bmV0bGluay5oIgogI2luY2x1
ZGUgInRzdF9uZXRkZXZpY2UuaCIKIAotc3RhdGljIHN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpj
cmVhdGVfcmVxdWVzdChjb25zdCBjaGFyICpmaWxlLAorc3RhdGljIHN0cnVjdCB0c3RfbmV0bGlu
a19jb250ZXh0ICpjcmVhdGVfcmVxdWVzdChjb25zdCBjaGFyICpmaWxlLAogCWNvbnN0IGludCBs
aW5lbm8sIHVuc2lnbmVkIGludCB0eXBlLCB1bnNpZ25lZCBpbnQgZmxhZ3MsCiAJY29uc3Qgdm9p
ZCAqcGF5bG9hZCwgc2l6ZV90IHBzaXplKQogewotCXN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpj
dHg7CisJc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eDsKIAlzdHJ1Y3Qgbmxtc2doZHIg
aGVhZGVyID0gewogCQkubmxtc2dfdHlwZSA9IHR5cGUsCiAJCS5ubG1zZ19mbGFncyA9IE5MTV9G
X1JFUVVFU1QgfCBOTE1fRl9BQ0sgfCBmbGFncywKIAl9OwogCi0JY3R4ID0gdHN0X3J0bmxfY3Jl
YXRlX2NvbnRleHQoZmlsZSwgbGluZW5vKTsKKwljdHggPSB0c3RfbmV0bGlua19jcmVhdGVfY29u
dGV4dChmaWxlLCBsaW5lbm8sIE5FVExJTktfUk9VVEUpOwogCiAJaWYgKCFjdHgpCiAJCXJldHVy
biBOVUxMOwogCi0JaWYgKCF0c3RfcnRubF9hZGRfbWVzc2FnZShmaWxlLCBsaW5lbm8sIGN0eCwg
JmhlYWRlciwgcGF5bG9hZCwgcHNpemUpKSB7Ci0JCXRzdF9ydG5sX2Rlc3Ryb3lfY29udGV4dChm
aWxlLCBsaW5lbm8sIGN0eCk7CisJaWYgKCF0c3RfbmV0bGlua19hZGRfbWVzc2FnZShmaWxlLCBs
aW5lbm8sIGN0eCwgJmhlYWRlciwgcGF5bG9hZCwKKwkJcHNpemUpKSB7CisJCXRzdF9uZXRsaW5r
X2Rlc3Ryb3lfY29udGV4dChmaWxlLCBsaW5lbm8sIGN0eCk7CiAJCXJldHVybiBOVUxMOwogCX0K
IApAQCAtMTAzLDcgKzEwNCw3IEBAIGludCB0c3RfY3JlYXRlX3ZldGhfcGFpcihjb25zdCBjaGFy
ICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLCBpbnQgc3RyaWN0LAogewogCWludCByZXQ7CiAJc3Ry
dWN0IGlmaW5mb21zZyBpbmZvID0geyAuaWZpX2ZhbWlseSA9IEFGX1VOU1BFQyB9OwotCXN0cnVj
dCB0c3RfcnRubF9jb250ZXh0ICpjdHg7CisJc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0
eDsKIAlzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0IHBlZXJpbmZvW10gPSB7CiAJCXtJRkxBX0lG
TkFNRSwgaWZuYW1lMiwgc3RybGVuKGlmbmFtZTIpICsgMSwgTlVMTH0sCiAJCXswLCBOVUxMLCAt
MSwgTlVMTH0KQEAgLTE0MSwxNyArMTQyLDE3IEBAIGludCB0c3RfY3JlYXRlX3ZldGhfcGFpcihj
b25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLCBpbnQgc3RyaWN0LAogCQlyZXR1cm4g
MDsKIAogCWlmICh0c3RfcnRubF9hZGRfYXR0cl9saXN0KGZpbGUsIGxpbmVubywgY3R4LCBhdHRy
cykgIT0gMikgewotCQl0c3RfcnRubF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgp
OworCQl0c3RfbmV0bGlua19kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOwogCQly
ZXR1cm4gMDsKIAl9CiAKLQlyZXQgPSB0c3RfcnRubF9zZW5kX3ZhbGlkYXRlKGZpbGUsIGxpbmVu
bywgY3R4KTsKLQl0c3RfcnRubF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOwor
CXJldCA9IHRzdF9uZXRsaW5rX3NlbmRfdmFsaWRhdGUoZmlsZSwgbGluZW5vLCBjdHgpOworCXRz
dF9uZXRsaW5rX2Rlc3Ryb3lfY29udGV4dChmaWxlLCBsaW5lbm8sIGN0eCk7CiAKIAlpZiAoc3Ry
aWN0ICYmICFyZXQpIHsKIAkJdHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSywKIAkJCSJGYWls
ZWQgdG8gY3JlYXRlIHZldGggaW50ZXJmYWNlcyAlcyslczogJXMiLCBpZm5hbWUxLAotCQkJaWZu
YW1lMiwgdHN0X3N0cmVycm5vKHRzdF9ydG5sX2Vycm5vKSk7CisJCQlpZm5hbWUyLCB0c3Rfc3Ry
ZXJybm8odHN0X25ldGxpbmtfZXJybm8pKTsKIAl9CiAKIAlyZXR1cm4gcmV0OwpAQCAtMTYyLDcg
KzE2Myw3IEBAIGludCB0c3RfbmV0ZGV2X2FkZF9kZXZpY2UoY29uc3QgY2hhciAqZmlsZSwgY29u
c3QgaW50IGxpbmVubywgaW50IHN0cmljdCwKIHsKIAlpbnQgcmV0OwogCXN0cnVjdCBpZmluZm9t
c2cgaW5mbyA9IHsgLmlmaV9mYW1pbHkgPSBBRl9VTlNQRUMgfTsKLQlzdHJ1Y3QgdHN0X3J0bmxf
Y29udGV4dCAqY3R4OworCXN0cnVjdCB0c3RfbmV0bGlua19jb250ZXh0ICpjdHg7CiAJc3RydWN0
IHRzdF9ydG5sX2F0dHJfbGlzdCBhdHRyc1tdID0gewogCQl7SUZMQV9JRk5BTUUsIGlmbmFtZSwg
c3RybGVuKGlmbmFtZSkgKyAxLCBOVUxMfSwKIAkJe0lGTEFfTElOS0lORk8sIE5VTEwsIDAsIChj
b25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0W10pewpAQCAtMTg1LDE3ICsxODYsMTcgQEAg
aW50IHRzdF9uZXRkZXZfYWRkX2RldmljZShjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGlu
ZW5vLCBpbnQgc3RyaWN0LAogCQlyZXR1cm4gMDsKIAogCWlmICh0c3RfcnRubF9hZGRfYXR0cl9s
aXN0KGZpbGUsIGxpbmVubywgY3R4LCBhdHRycykgIT0gMikgewotCQl0c3RfcnRubF9kZXN0cm95
X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOworCQl0c3RfbmV0bGlua19kZXN0cm95X2NvbnRl
eHQoZmlsZSwgbGluZW5vLCBjdHgpOwogCQlyZXR1cm4gMDsKIAl9CiAKLQlyZXQgPSB0c3RfcnRu
bF9zZW5kX3ZhbGlkYXRlKGZpbGUsIGxpbmVubywgY3R4KTsKLQl0c3RfcnRubF9kZXN0cm95X2Nv
bnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOworCXJldCA9IHRzdF9uZXRsaW5rX3NlbmRfdmFsaWRh
dGUoZmlsZSwgbGluZW5vLCBjdHgpOworCXRzdF9uZXRsaW5rX2Rlc3Ryb3lfY29udGV4dChmaWxl
LCBsaW5lbm8sIGN0eCk7CiAKIAlpZiAoc3RyaWN0ICYmICFyZXQpIHsKIAkJdHN0X2Jya18oZmls
ZSwgbGluZW5vLCBUQlJPSywKIAkJCSJGYWlsZWQgdG8gY3JlYXRlICVzIGRldmljZSAlczogJXMi
LCBkZXZ0eXBlLCBpZm5hbWUsCi0JCQl0c3Rfc3RyZXJybm8odHN0X3J0bmxfZXJybm8pKTsKKwkJ
CXRzdF9zdHJlcnJubyh0c3RfbmV0bGlua19lcnJubykpOwogCX0KIAogCXJldHVybiByZXQ7CkBA
IC0yMDUsNyArMjA2LDcgQEAgaW50IHRzdF9uZXRkZXZfcmVtb3ZlX2RldmljZShjb25zdCBjaGFy
ICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLCBpbnQgc3RyaWN0LAogCWNvbnN0IGNoYXIgKmlmbmFt
ZSkKIHsKIAlzdHJ1Y3QgaWZpbmZvbXNnIGluZm8gPSB7IC5pZmlfZmFtaWx5ID0gQUZfVU5TUEVD
IH07Ci0Jc3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKmN0eDsKKwlzdHJ1Y3QgdHN0X25ldGxpbmtf
Y29udGV4dCAqY3R4OwogCWludCByZXQ7CiAKIAlpZiAoc3RybGVuKGlmbmFtZSkgPj0gSUZOQU1T
SVopIHsKQEAgLTIyMCwxNyArMjIxLDE3IEBAIGludCB0c3RfbmV0ZGV2X3JlbW92ZV9kZXZpY2Uo
Y29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywgaW50IHN0cmljdCwKIAkJcmV0dXJu
IDA7CiAKIAlpZiAoIXRzdF9ydG5sX2FkZF9hdHRyX3N0cmluZyhmaWxlLCBsaW5lbm8sIGN0eCwg
SUZMQV9JRk5BTUUsIGlmbmFtZSkpIHsKLQkJdHN0X3J0bmxfZGVzdHJveV9jb250ZXh0KGZpbGUs
IGxpbmVubywgY3R4KTsKKwkJdHN0X25ldGxpbmtfZGVzdHJveV9jb250ZXh0KGZpbGUsIGxpbmVu
bywgY3R4KTsKIAkJcmV0dXJuIDA7CiAJfQogCi0JcmV0ID0gdHN0X3J0bmxfc2VuZF92YWxpZGF0
ZShmaWxlLCBsaW5lbm8sIGN0eCk7Ci0JdHN0X3J0bmxfZGVzdHJveV9jb250ZXh0KGZpbGUsIGxp
bmVubywgY3R4KTsKKwlyZXQgPSB0c3RfbmV0bGlua19zZW5kX3ZhbGlkYXRlKGZpbGUsIGxpbmVu
bywgY3R4KTsKKwl0c3RfbmV0bGlua19kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgp
OwogCiAJaWYgKHN0cmljdCAmJiAhcmV0KSB7CiAJCXRzdF9icmtfKGZpbGUsIGxpbmVubywgVEJS
T0ssCiAJCQkiRmFpbGVkIHRvIHJlbW92ZSBuZXRkZXZpY2UgJXM6ICVzIiwgaWZuYW1lLAotCQkJ
dHN0X3N0cmVycm5vKHRzdF9ydG5sX2Vycm5vKSk7CisJCQl0c3Rfc3RyZXJybm8odHN0X25ldGxp
bmtfZXJybm8pKTsKIAl9CiAKIAlyZXR1cm4gcmV0OwpAQCAtMjQxLDcgKzI0Miw3IEBAIHN0YXRp
YyBpbnQgbW9kaWZ5X2FkZHJlc3MoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywg
aW50IHN0cmljdCwKIAl1bnNpZ25lZCBpbnQgZmFtaWx5LCBjb25zdCB2b2lkICphZGRyZXNzLCB1
bnNpZ25lZCBpbnQgcHJlZml4LAogCXNpemVfdCBhZGRybGVuLCB1aW50MzJfdCBhZGRyX2ZsYWdz
KQogewotCXN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpjdHg7CisJc3RydWN0IHRzdF9uZXRsaW5r
X2NvbnRleHQgKmN0eDsKIAlpbnQgaW5kZXgsIHJldDsKIAlzdHJ1Y3QgaWZhZGRybXNnIGluZm8g
PSB7CiAJCS5pZmFfZmFtaWx5ID0gZmFtaWx5LApAQCAtMjY0LDIzICsyNjUsMjMgQEAgc3RhdGlj
IGludCBtb2RpZnlfYWRkcmVzcyhjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLCBp
bnQgc3RyaWN0LAogCiAJaWYgKCF0c3RfcnRubF9hZGRfYXR0cihmaWxlLCBsaW5lbm8sIGN0eCwg
SUZBX0ZMQUdTLCAmYWRkcl9mbGFncywKIAkJc2l6ZW9mKHVpbnQzMl90KSkpIHsKLQkJdHN0X3J0
bmxfZGVzdHJveV9jb250ZXh0KGZpbGUsIGxpbmVubywgY3R4KTsKKwkJdHN0X25ldGxpbmtfZGVz
dHJveV9jb250ZXh0KGZpbGUsIGxpbmVubywgY3R4KTsKIAkJcmV0dXJuIDA7CiAJfQogCiAJaWYg
KCF0c3RfcnRubF9hZGRfYXR0cihmaWxlLCBsaW5lbm8sIGN0eCwgSUZBX0xPQ0FMLCBhZGRyZXNz
LAogCQlhZGRybGVuKSkgewotCQl0c3RfcnRubF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5v
LCBjdHgpOworCQl0c3RfbmV0bGlua19kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgp
OwogCQlyZXR1cm4gMDsKIAl9CiAKLQlyZXQgPSB0c3RfcnRubF9zZW5kX3ZhbGlkYXRlKGZpbGUs
IGxpbmVubywgY3R4KTsKLQl0c3RfcnRubF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBj
dHgpOworCXJldCA9IHRzdF9uZXRsaW5rX3NlbmRfdmFsaWRhdGUoZmlsZSwgbGluZW5vLCBjdHgp
OworCXRzdF9uZXRsaW5rX2Rlc3Ryb3lfY29udGV4dChmaWxlLCBsaW5lbm8sIGN0eCk7CiAKIAlp
ZiAoc3RyaWN0ICYmICFyZXQpIHsKIAkJdHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSywKIAkJ
CSJGYWlsZWQgdG8gbW9kaWZ5ICVzIG5ldHdvcmsgYWRkcmVzczogJXMiLCBpZm5hbWUsCi0JCQl0
c3Rfc3RyZXJybm8odHN0X3J0bmxfZXJybm8pKTsKKwkJCXRzdF9zdHJlcnJubyh0c3RfbmV0bGlu
a19lcnJubykpOwogCX0KIAogCXJldHVybiByZXQ7CkBAIC0zMjIsNyArMzIzLDcgQEAgc3RhdGlj
IGludCBjaGFuZ2VfbnMoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywgaW50IHN0
cmljdCwKIAljb25zdCBjaGFyICppZm5hbWUsIHVuc2lnbmVkIHNob3J0IGF0dHIsIHVpbnQzMl90
IHZhbHVlKQogewogCXN0cnVjdCBpZmluZm9tc2cgaW5mbyA9IHsgLmlmaV9mYW1pbHkgPSBBRl9V
TlNQRUMgfTsKLQlzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCAqY3R4OworCXN0cnVjdCB0c3RfbmV0
bGlua19jb250ZXh0ICpjdHg7CiAJaW50IHJldDsKIAogCWlmIChzdHJsZW4oaWZuYW1lKSA+PSBJ
Rk5BTVNJWikgewpAQCAtMzM3LDIzICszMzgsMjMgQEAgc3RhdGljIGludCBjaGFuZ2VfbnMoY29u
c3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywgaW50IHN0cmljdCwKIAkJcmV0dXJuIDA7
CiAKIAlpZiAoIXRzdF9ydG5sX2FkZF9hdHRyX3N0cmluZyhmaWxlLCBsaW5lbm8sIGN0eCwgSUZM
QV9JRk5BTUUsIGlmbmFtZSkpIHsKLQkJdHN0X3J0bmxfZGVzdHJveV9jb250ZXh0KGZpbGUsIGxp
bmVubywgY3R4KTsKKwkJdHN0X25ldGxpbmtfZGVzdHJveV9jb250ZXh0KGZpbGUsIGxpbmVubywg
Y3R4KTsKIAkJcmV0dXJuIDA7CiAJfQogCiAJaWYgKCF0c3RfcnRubF9hZGRfYXR0cihmaWxlLCBs
aW5lbm8sIGN0eCwgYXR0ciwgJnZhbHVlLAogCQlzaXplb2YodWludDMyX3QpKSkgewotCQl0c3Rf
cnRubF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOworCQl0c3RfbmV0bGlua19k
ZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOwogCQlyZXR1cm4gMDsKIAl9CiAKLQly
ZXQgPSB0c3RfcnRubF9zZW5kX3ZhbGlkYXRlKGZpbGUsIGxpbmVubywgY3R4KTsKLQl0c3RfcnRu
bF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOworCXJldCA9IHRzdF9uZXRsaW5r
X3NlbmRfdmFsaWRhdGUoZmlsZSwgbGluZW5vLCBjdHgpOworCXRzdF9uZXRsaW5rX2Rlc3Ryb3lf
Y29udGV4dChmaWxlLCBsaW5lbm8sIGN0eCk7CiAKIAlpZiAoc3RyaWN0ICYmICFyZXQpIHsKIAkJ
dHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSywKIAkJCSJGYWlsZWQgdG8gbW92ZSAlcyB0byBh
bm90aGVyIG5hbWVzcGFjZTogJXMiLCBpZm5hbWUsCi0JCQl0c3Rfc3RyZXJybm8odHN0X3J0bmxf
ZXJybm8pKTsKKwkJCXRzdF9zdHJlcnJubyh0c3RfbmV0bGlua19lcnJubykpOwogCX0KIAogCXJl
dHVybiByZXQ7CkBAIC0zNzcsNyArMzc4LDcgQEAgc3RhdGljIGludCBtb2RpZnlfcm91dGUoY29u
c3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywgaW50IHN0cmljdCwKIAlzaXplX3Qgc3Jj
bGVuLCBjb25zdCB2b2lkICpkc3RhZGRyLCB1bnNpZ25lZCBpbnQgZHN0cHJlZml4LAogCXNpemVf
dCBkc3RsZW4sIGNvbnN0IHZvaWQgKmdhdGV3YXksIHNpemVfdCBnYXRld2F5bGVuKQogewotCXN0
cnVjdCB0c3RfcnRubF9jb250ZXh0ICpjdHg7CisJc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQg
KmN0eDsKIAlpbnQgcmV0OwogCWludDMyX3QgaW5kZXg7CiAJc3RydWN0IHJ0bXNnIGluZm8gPSB7
CkBAIC00MjAsMzUgKzQyMSwzNSBAQCBzdGF0aWMgaW50IG1vZGlmeV9yb3V0ZShjb25zdCBjaGFy
ICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLCBpbnQgc3RyaWN0LAogCiAJaWYgKHNyY2FkZHIgJiYg
IXRzdF9ydG5sX2FkZF9hdHRyKGZpbGUsIGxpbmVubywgY3R4LCBSVEFfU1JDLCBzcmNhZGRyLAog
CQlzcmNsZW4pKSB7Ci0JCXRzdF9ydG5sX2Rlc3Ryb3lfY29udGV4dChmaWxlLCBsaW5lbm8sIGN0
eCk7CisJCXRzdF9uZXRsaW5rX2Rlc3Ryb3lfY29udGV4dChmaWxlLCBsaW5lbm8sIGN0eCk7CiAJ
CXJldHVybiAwOwogCX0KIAogCWlmIChkc3RhZGRyICYmICF0c3RfcnRubF9hZGRfYXR0cihmaWxl
LCBsaW5lbm8sIGN0eCwgUlRBX0RTVCwgZHN0YWRkciwKIAkJZHN0bGVuKSkgewotCQl0c3RfcnRu
bF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOworCQl0c3RfbmV0bGlua19kZXN0
cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOwogCQlyZXR1cm4gMDsKIAl9CiAKIAlpZiAo
Z2F0ZXdheSAmJiAhdHN0X3J0bmxfYWRkX2F0dHIoZmlsZSwgbGluZW5vLCBjdHgsIFJUQV9HQVRF
V0FZLAogCQlnYXRld2F5LCBnYXRld2F5bGVuKSkgewotCQl0c3RfcnRubF9kZXN0cm95X2NvbnRl
eHQoZmlsZSwgbGluZW5vLCBjdHgpOworCQl0c3RfbmV0bGlua19kZXN0cm95X2NvbnRleHQoZmls
ZSwgbGluZW5vLCBjdHgpOwogCQlyZXR1cm4gMDsKIAl9CiAKIAlpZiAoaWZuYW1lICYmICF0c3Rf
cnRubF9hZGRfYXR0cihmaWxlLCBsaW5lbm8sIGN0eCwgUlRBX09JRiwgJmluZGV4LAogCQlzaXpl
b2YoaW5kZXgpKSkgewotCQl0c3RfcnRubF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBj
dHgpOworCQl0c3RfbmV0bGlua19kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOwog
CQlyZXR1cm4gMDsKIAl9CiAKLQlyZXQgPSB0c3RfcnRubF9zZW5kX3ZhbGlkYXRlKGZpbGUsIGxp
bmVubywgY3R4KTsKLQl0c3RfcnRubF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgp
OworCXJldCA9IHRzdF9uZXRsaW5rX3NlbmRfdmFsaWRhdGUoZmlsZSwgbGluZW5vLCBjdHgpOwor
CXRzdF9uZXRsaW5rX2Rlc3Ryb3lfY29udGV4dChmaWxlLCBsaW5lbm8sIGN0eCk7CiAKIAlpZiAo
c3RyaWN0ICYmICFyZXQpIHsKIAkJdHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSywKIAkJCSJG
YWlsZWQgdG8gbW9kaWZ5IG5ldHdvcmsgcm91dGU6ICVzIiwKLQkJCXRzdF9zdHJlcnJubyh0c3Rf
cnRubF9lcnJubykpOworCQkJdHN0X3N0cmVycm5vKHRzdF9uZXRsaW5rX2Vycm5vKSk7CiAJfQog
CiAJcmV0dXJuIHJldDsKQEAgLTUyOCw3ICs1MjksNyBAQCBzdGF0aWMgaW50IG1vZGlmeV9xZGlz
Yyhjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLCBpbnQgc3RyaWN0LAogCXVuc2ln
bmVkIGludCBoYW5kbGUsIHVuc2lnbmVkIGludCBpbmZvLCBjb25zdCBjaGFyICpxZF9raW5kLAog
CWNvbnN0IHN0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3QgKmNvbmZpZykKIHsKLQlzdHJ1Y3QgdHN0
X3J0bmxfY29udGV4dCAqY3R4OworCXN0cnVjdCB0c3RfbmV0bGlua19jb250ZXh0ICpjdHg7CiAJ
aW50IHJldDsKIAlzdHJ1Y3QgdGNtc2cgbXNnID0gewogCQkudGNtX2ZhbWlseSA9IGZhbWlseSwK
QEAgLTU2MCwyMiArNTYxLDIyIEBAIHN0YXRpYyBpbnQgbW9kaWZ5X3FkaXNjKGNvbnN0IGNoYXIg
KmZpbGUsIGNvbnN0IGludCBsaW5lbm8sIGludCBzdHJpY3QsCiAJCXJldHVybiAwOwogCiAJaWYg
KCF0c3RfcnRubF9hZGRfYXR0cl9zdHJpbmcoZmlsZSwgbGluZW5vLCBjdHgsIFRDQV9LSU5ELCBx
ZF9raW5kKSkgewotCQl0c3RfcnRubF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgp
OworCQl0c3RfbmV0bGlua19kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOwogCQly
ZXR1cm4gMDsKIAl9CiAKIAlpZiAoY29uZmlnICYmICF0c3RfcnRubF9hZGRfYXR0cl9saXN0KGZp
bGUsIGxpbmVubywgY3R4LCBjb25maWcpKSB7Ci0JCXRzdF9ydG5sX2Rlc3Ryb3lfY29udGV4dChm
aWxlLCBsaW5lbm8sIGN0eCk7CisJCXRzdF9uZXRsaW5rX2Rlc3Ryb3lfY29udGV4dChmaWxlLCBs
aW5lbm8sIGN0eCk7CiAJCXJldHVybiAwOwogCX0KIAotCXJldCA9IHRzdF9ydG5sX3NlbmRfdmFs
aWRhdGUoZmlsZSwgbGluZW5vLCBjdHgpOwotCXRzdF9ydG5sX2Rlc3Ryb3lfY29udGV4dChmaWxl
LCBsaW5lbm8sIGN0eCk7CisJcmV0ID0gdHN0X25ldGxpbmtfc2VuZF92YWxpZGF0ZShmaWxlLCBs
aW5lbm8sIGN0eCk7CisJdHN0X25ldGxpbmtfZGVzdHJveV9jb250ZXh0KGZpbGUsIGxpbmVubywg
Y3R4KTsKIAogCWlmIChzdHJpY3QgJiYgIXJldCkgewogCQl0c3RfYnJrXyhmaWxlLCBsaW5lbm8s
IFRCUk9LLAogCQkJIkZhaWxlZCB0byBtb2RpZnkgJXM6ICVzIiwgb2JqZWN0LAotCQkJdHN0X3N0
cmVycm5vKHRzdF9ydG5sX2Vycm5vKSk7CisJCQl0c3Rfc3RyZXJybm8odHN0X25ldGxpbmtfZXJy
bm8pKTsKIAl9CiAKIAlyZXR1cm4gcmV0OwpkaWZmIC0tZ2l0IGEvbGliL3RzdF9ydG5ldGxpbmsu
YyBiL2xpYi90c3RfcnRuZXRsaW5rLmMKaW5kZXggYTI0MTFkZmRlLi5lYWNmZGNlZDEgMTAwNjQ0
Ci0tLSBhL2xpYi90c3RfcnRuZXRsaW5rLmMKKysrIGIvbGliL3RzdF9ydG5ldGxpbmsuYwpAQCAt
MTUsNyArMTUsNyBAQAogI2luY2x1ZGUgInRzdF90ZXN0LmgiCiAjaW5jbHVkZSAidHN0X3J0bmV0
bGluay5oIgogCi1zdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCB7CitzdHJ1Y3QgdHN0X25ldGxpbmtf
Y29udGV4dCB7CiAJaW50IHNvY2tldDsKIAlwaWRfdCBwaWQ7CiAJdWludDMyX3Qgc2VxOwpAQCAt
MjQsMTAgKzI0LDEwIEBAIHN0cnVjdCB0c3RfcnRubF9jb250ZXh0IHsKIAlzdHJ1Y3Qgbmxtc2do
ZHIgKmN1cm1zZzsKIH07CiAKLWludCB0c3RfcnRubF9lcnJubzsKK2ludCB0c3RfbmV0bGlua19l
cnJubzsKIAotc3RhdGljIGludCB0c3RfcnRubF9ncm93X2J1ZmZlcihjb25zdCBjaGFyICpmaWxl
LCBjb25zdCBpbnQgbGluZW5vLAotCXN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpjdHgsIHNpemVf
dCBzaXplKQorc3RhdGljIGludCBuZXRsaW5rX2dyb3dfYnVmZmVyKGNvbnN0IGNoYXIgKmZpbGUs
IGNvbnN0IGludCBsaW5lbm8sCisJc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCwgc2l6
ZV90IHNpemUpCiB7CiAJc2l6ZV90IG5lZWRlZCwgb2Zmc2V0LCBjdXJsZW4gPSBOTE1TR19BTElH
TihjdHgtPmRhdGFsZW4pOwogCWNoYXIgKmJ1ZjsKQEAgLTUyLDIxICs1MiwyMiBAQCBzdGF0aWMg
aW50IHRzdF9ydG5sX2dyb3dfYnVmZmVyKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5l
bm8sCiAJcmV0dXJuIDE7CiB9CiAKLXZvaWQgdHN0X3J0bmxfZGVzdHJveV9jb250ZXh0KGNvbnN0
IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCi0Jc3RydWN0IHRzdF9ydG5sX2NvbnRleHQg
KmN0eCkKK3ZvaWQgdHN0X25ldGxpbmtfZGVzdHJveV9jb250ZXh0KGNvbnN0IGNoYXIgKmZpbGUs
IGNvbnN0IGludCBsaW5lbm8sCisJc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCkKIHsK
IAlzYWZlX2Nsb3NlKGZpbGUsIGxpbmVubywgTlVMTCwgY3R4LT5zb2NrZXQpOwogCWZyZWUoY3R4
LT5idWZmZXIpOwogCWZyZWUoY3R4KTsKIH0KIAotc3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKnRz
dF9ydG5sX2NyZWF0ZV9jb250ZXh0KGNvbnN0IGNoYXIgKmZpbGUsCi0JY29uc3QgaW50IGxpbmVu
bykKK3N0cnVjdCB0c3RfbmV0bGlua19jb250ZXh0ICp0c3RfbmV0bGlua19jcmVhdGVfY29udGV4
dChjb25zdCBjaGFyICpmaWxlLAorCWNvbnN0IGludCBsaW5lbm8sIGludCBwcm90b2NvbCkKIHsK
LQlzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCAqY3R4OworCXN0cnVjdCB0c3RfbmV0bGlua19jb250
ZXh0ICpjdHg7CiAJc3RydWN0IHNvY2thZGRyX25sIGFkZHIgPSB7IC5ubF9mYW1pbHkgPSBBRl9O
RVRMSU5LIH07CiAKLQljdHggPSBzYWZlX21hbGxvYyhmaWxlLCBsaW5lbm8sIE5VTEwsIHNpemVv
ZihzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCkpOworCWN0eCA9IHNhZmVfbWFsbG9jKGZpbGUsIGxp
bmVubywgTlVMTCwKKwkJc2l6ZW9mKHN0cnVjdCB0c3RfbmV0bGlua19jb250ZXh0KSk7CiAKIAlp
ZiAoIWN0eCkKIAkJcmV0dXJuIE5VTEw7CkBAIC03OCw3ICs3OSw3IEBAIHN0cnVjdCB0c3RfcnRu
bF9jb250ZXh0ICp0c3RfcnRubF9jcmVhdGVfY29udGV4dChjb25zdCBjaGFyICpmaWxlLAogCWN0
eC0+ZGF0YWxlbiA9IDA7CiAJY3R4LT5jdXJtc2cgPSBOVUxMOwogCWN0eC0+c29ja2V0ID0gc2Fm
ZV9zb2NrZXQoZmlsZSwgbGluZW5vLCBOVUxMLCBBRl9ORVRMSU5LLAotCQlTT0NLX0RHUkFNIHwg
U09DS19DTE9FWEVDLCBORVRMSU5LX1JPVVRFKTsKKwkJU09DS19ER1JBTSB8IFNPQ0tfQ0xPRVhF
QywgcHJvdG9jb2wpOwogCiAJaWYgKGN0eC0+c29ja2V0IDwgMCkgewogCQlmcmVlKGN0eCk7CkBA
IC04NywxNCArODgsMTQgQEAgc3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKnRzdF9ydG5sX2NyZWF0
ZV9jb250ZXh0KGNvbnN0IGNoYXIgKmZpbGUsCiAKIAlpZiAoc2FmZV9iaW5kKGZpbGUsIGxpbmVu
bywgTlVMTCwgY3R4LT5zb2NrZXQsIChzdHJ1Y3Qgc29ja2FkZHIgKikmYWRkciwKIAkJc2l6ZW9m
KGFkZHIpKSkgewotCQl0c3RfcnRubF9kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgp
OworCQl0c3RfbmV0bGlua19kZXN0cm95X2NvbnRleHQoZmlsZSwgbGluZW5vLCBjdHgpOwogCQly
ZXR1cm4gTlVMTDsKIAl9CiAKIAljdHgtPmJ1ZmZlciA9IHNhZmVfbWFsbG9jKGZpbGUsIGxpbmVu
bywgTlVMTCwgY3R4LT5idWZzaXplKTsKIAogCWlmICghY3R4LT5idWZmZXIpIHsKLQkJdHN0X3J0
bmxfZGVzdHJveV9jb250ZXh0KGZpbGUsIGxpbmVubywgY3R4KTsKKwkJdHN0X25ldGxpbmtfZGVz
dHJveV9jb250ZXh0KGZpbGUsIGxpbmVubywgY3R4KTsKIAkJcmV0dXJuIE5VTEw7CiAJfQogCkBA
IC0xMDMsNyArMTA0LDcgQEAgc3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKnRzdF9ydG5sX2NyZWF0
ZV9jb250ZXh0KGNvbnN0IGNoYXIgKmZpbGUsCiAJcmV0dXJuIGN0eDsKIH0KIAotdm9pZCB0c3Rf
cnRubF9mcmVlX21lc3NhZ2Uoc3RydWN0IHRzdF9ydG5sX21lc3NhZ2UgKm1zZykKK3ZvaWQgdHN0
X25ldGxpbmtfZnJlZV9tZXNzYWdlKHN0cnVjdCB0c3RfbmV0bGlua19tZXNzYWdlICptc2cpCiB7
CiAJaWYgKCFtc2cpCiAJCXJldHVybjsKQEAgLTExNCw4ICsxMTUsOCBAQCB2b2lkIHRzdF9ydG5s
X2ZyZWVfbWVzc2FnZShzdHJ1Y3QgdHN0X3J0bmxfbWVzc2FnZSAqbXNnKQogCWZyZWUobXNnKTsK
IH0KIAotaW50IHRzdF9ydG5sX3NlbmQoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVu
bywKLQlzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCAqY3R4KQoraW50IHRzdF9uZXRsaW5rX3NlbmQo
Y29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwlzdHJ1Y3QgdHN0X25ldGxpbmtf
Y29udGV4dCAqY3R4KQogewogCWludCByZXQ7CiAJc3RydWN0IHNvY2thZGRyX25sIGFkZHIgPSB7
IC5ubF9mYW1pbHkgPSBBRl9ORVRMSU5LIH07CkBAIC0xMzYsNyArMTM3LDcgQEAgaW50IHRzdF9y
dG5sX3NlbmQoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKIAlpZiAoY3R4LT5j
dXJtc2ctPm5sbXNnX2ZsYWdzICYgTkxNX0ZfTVVMVEkpIHsKIAkJc3RydWN0IG5sbXNnaGRyIGVv
bSA9IHsgLm5sbXNnX3R5cGUgPSBOTE1TR19ET05FIH07CiAKLQkJaWYgKCF0c3RfcnRubF9hZGRf
bWVzc2FnZShmaWxlLCBsaW5lbm8sIGN0eCwgJmVvbSwgTlVMTCwgMCkpCisJCWlmICghdHN0X25l
dGxpbmtfYWRkX21lc3NhZ2UoZmlsZSwgbGluZW5vLCBjdHgsICZlb20sIE5VTEwsIDApKQogCQkJ
cmV0dXJuIDA7CiAKIAkJLyogTkxNU0dfRE9ORSBtZXNzYWdlIG11c3Qgbm90IGhhdmUgTkxNX0Zf
TVVMVEkgZmxhZyAqLwpAQCAtMTUzLDcgKzE1NCw3IEBAIGludCB0c3RfcnRubF9zZW5kKGNvbnN0
IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHRz
dF9ydG5sX3dhaXQoc3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKmN0eCkKK2ludCB0c3RfbmV0bGlu
a193YWl0KHN0cnVjdCB0c3RfbmV0bGlua19jb250ZXh0ICpjdHgpCiB7CiAJc3RydWN0IHBvbGxm
ZCBmZGluZm8gPSB7CiAJCS5mZCA9IGN0eC0+c29ja2V0LApAQCAtMTYzLDExICsxNjQsMTEgQEAg
aW50IHRzdF9ydG5sX3dhaXQoc3RydWN0IHRzdF9ydG5sX2NvbnRleHQgKmN0eCkKIAlyZXR1cm4g
cG9sbCgmZmRpbmZvLCAxLCAxMDAwKTsKIH0KIAotc3RydWN0IHRzdF9ydG5sX21lc3NhZ2UgKnRz
dF9ydG5sX3JlY3YoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKLQlzdHJ1Y3Qg
dHN0X3J0bmxfY29udGV4dCAqY3R4KQorc3RydWN0IHRzdF9uZXRsaW5rX21lc3NhZ2UgKnRzdF9u
ZXRsaW5rX3JlY3YoY29uc3QgY2hhciAqZmlsZSwKKwljb25zdCBpbnQgbGluZW5vLCBzdHJ1Y3Qg
dHN0X25ldGxpbmtfY29udGV4dCAqY3R4KQogewogCWNoYXIgdG1wLCAqdG1wYnVmLCAqYnVmZmVy
ID0gTlVMTDsKLQlzdHJ1Y3QgdHN0X3J0bmxfbWVzc2FnZSAqcmV0OworCXN0cnVjdCB0c3RfbmV0
bGlua19tZXNzYWdlICpyZXQ7CiAJc3RydWN0IG5sbXNnaGRyICpwdHI7CiAJc2l6ZV90IHJldHNp
emUsIGJ1ZnNpemUgPSAwOwogCXNzaXplX3Qgc2l6ZTsKQEAgLTIxNSw3ICsyMTYsNyBAQCBzdHJ1
Y3QgdHN0X3J0bmxfbWVzc2FnZSAqdHN0X3J0bmxfcmVjdihjb25zdCBjaGFyICpmaWxlLCBjb25z
dCBpbnQgbGluZW5vLAogCWZvciAoOyBzaXplX2xlZnQgPiAwICYmIE5MTVNHX09LKHB0ciwgc2l6
ZV9sZWZ0KTsgbXNnY291bnQrKykKIAkJcHRyID0gTkxNU0dfTkVYVChwdHIsIHNpemVfbGVmdCk7
CiAKLQlyZXRzaXplID0gKG1zZ2NvdW50ICsgMSkgKiBzaXplb2Yoc3RydWN0IHRzdF9ydG5sX21l
c3NhZ2UpOworCXJldHNpemUgPSAobXNnY291bnQgKyAxKSAqIHNpemVvZihzdHJ1Y3QgdHN0X25l
dGxpbmtfbWVzc2FnZSk7CiAJcmV0ID0gc2FmZV9tYWxsb2MoZmlsZSwgbGluZW5vLCBOVUxMLCBy
ZXRzaXplKTsKIAogCWlmICghcmV0KSB7CkBAIC0yMzksMTQgKzI0MCwxNCBAQCBzdHJ1Y3QgdHN0
X3J0bmxfbWVzc2FnZSAqdHN0X3J0bmxfcmVjdihjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQg
bGluZW5vLAogCXJldHVybiByZXQ7CiB9CiAKLWludCB0c3RfcnRubF9hZGRfbWVzc2FnZShjb25z
dCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAotCXN0cnVjdCB0c3RfcnRubF9jb250ZXh0
ICpjdHgsIGNvbnN0IHN0cnVjdCBubG1zZ2hkciAqaGVhZGVyLAoraW50IHRzdF9uZXRsaW5rX2Fk
ZF9tZXNzYWdlKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCisJc3RydWN0IHRz
dF9uZXRsaW5rX2NvbnRleHQgKmN0eCwgY29uc3Qgc3RydWN0IG5sbXNnaGRyICpoZWFkZXIsCiAJ
Y29uc3Qgdm9pZCAqcGF5bG9hZCwgc2l6ZV90IHBheWxvYWRfc2l6ZSkKIHsKIAlzaXplX3Qgc2l6
ZTsKIAl1bnNpZ25lZCBpbnQgZXh0cmFfZmxhZ3MgPSAwOwogCi0JaWYgKCF0c3RfcnRubF9ncm93
X2J1ZmZlcihmaWxlLCBsaW5lbm8sIGN0eCwgTkxNU0dfU1BBQ0UocGF5bG9hZF9zaXplKSkpCisJ
aWYgKCFuZXRsaW5rX2dyb3dfYnVmZmVyKGZpbGUsIGxpbmVubywgY3R4LCBOTE1TR19TUEFDRShw
YXlsb2FkX3NpemUpKSkKIAkJcmV0dXJuIDA7CiAKIAlpZiAoIWN0eC0+Y3VybXNnKSB7CkBAIC0y
ODAsNyArMjgxLDcgQEAgaW50IHRzdF9ydG5sX2FkZF9tZXNzYWdlKGNvbnN0IGNoYXIgKmZpbGUs
IGNvbnN0IGludCBsaW5lbm8sCiB9CiAKIGludCB0c3RfcnRubF9hZGRfYXR0cihjb25zdCBjaGFy
ICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAotCXN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpjdHgs
IHVuc2lnbmVkIHNob3J0IHR5cGUsCisJc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCwg
dW5zaWduZWQgc2hvcnQgdHlwZSwKIAljb25zdCB2b2lkICpkYXRhLCB1bnNpZ25lZCBzaG9ydCBs
ZW4pCiB7CiAJc2l6ZV90IHNpemU7CkBAIC0yOTIsNyArMjkzLDcgQEAgaW50IHRzdF9ydG5sX2Fk
ZF9hdHRyKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCiAJCXJldHVybiAwOwog
CX0KIAotCWlmICghdHN0X3J0bmxfZ3Jvd19idWZmZXIoZmlsZSwgbGluZW5vLCBjdHgsIFJUQV9T
UEFDRShsZW4pKSkKKwlpZiAoIW5ldGxpbmtfZ3Jvd19idWZmZXIoZmlsZSwgbGluZW5vLCBjdHgs
IFJUQV9TUEFDRShsZW4pKSkKIAkJcmV0dXJuIDA7CiAKIAlzaXplID0gTkxNU0dfQUxJR04oY3R4
LT5jdXJtc2ctPm5sbXNnX2xlbik7CkBAIC0zMDcsNyArMzA4LDcgQEAgaW50IHRzdF9ydG5sX2Fk
ZF9hdHRyKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCiB9CiAKIGludCB0c3Rf
cnRubF9hZGRfYXR0cl9zdHJpbmcoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywK
LQlzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCAqY3R4LCB1bnNpZ25lZCBzaG9ydCB0eXBlLAorCXN0
cnVjdCB0c3RfbmV0bGlua19jb250ZXh0ICpjdHgsIHVuc2lnbmVkIHNob3J0IHR5cGUsCiAJY29u
c3QgY2hhciAqZGF0YSkKIHsKIAlyZXR1cm4gdHN0X3J0bmxfYWRkX2F0dHIoZmlsZSwgbGluZW5v
LCBjdHgsIHR5cGUsIGRhdGEsCkBAIC0zMTUsNyArMzE2LDcgQEAgaW50IHRzdF9ydG5sX2FkZF9h
dHRyX3N0cmluZyhjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAogfQogCiBpbnQg
dHN0X3J0bmxfYWRkX2F0dHJfbGlzdChjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5v
LAotCXN0cnVjdCB0c3RfcnRubF9jb250ZXh0ICpjdHgsCisJc3RydWN0IHRzdF9uZXRsaW5rX2Nv
bnRleHQgKmN0eCwKIAljb25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0ICpsaXN0KQogewog
CWludCBpLCByZXQ7CkBAIC0zNTksOCArMzYwLDggQEAgaW50IHRzdF9ydG5sX2FkZF9hdHRyX2xp
c3QoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKIAlyZXR1cm4gaTsKIH0KIAot
aW50IHRzdF9ydG5sX2NoZWNrX2Fja3MoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVu
bywKLQlzdHJ1Y3QgdHN0X3J0bmxfY29udGV4dCAqY3R4LCBzdHJ1Y3QgdHN0X3J0bmxfbWVzc2Fn
ZSAqcmVzKQoraW50IHRzdF9uZXRsaW5rX2NoZWNrX2Fja3MoY29uc3QgY2hhciAqZmlsZSwgY29u
c3QgaW50IGxpbmVubywKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4LCBzdHJ1Y3Qg
dHN0X25ldGxpbmtfbWVzc2FnZSAqcmVzKQogewogCXN0cnVjdCBubG1zZ2hkciAqbXNnID0gKHN0
cnVjdCBubG1zZ2hkciAqKWN0eC0+YnVmZmVyOwogCWludCBzaXplX2xlZnQgPSBjdHgtPmRhdGFs
ZW47CkBAIC0zODIsNyArMzgzLDcgQEAgaW50IHRzdF9ydG5sX2NoZWNrX2Fja3MoY29uc3QgY2hh
ciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKIAkJfQogCiAJCWlmIChyZXMtPmVyci0+ZXJyb3Ip
IHsKLQkJCXRzdF9ydG5sX2Vycm5vID0gLXJlcy0+ZXJyLT5lcnJvcjsKKwkJCXRzdF9uZXRsaW5r
X2Vycm5vID0gLXJlcy0+ZXJyLT5lcnJvcjsKIAkJCXJldHVybiAwOwogCQl9CiAJfQpAQCAtMzkw
LDI1ICszOTEsMjUgQEAgaW50IHRzdF9ydG5sX2NoZWNrX2Fja3MoY29uc3QgY2hhciAqZmlsZSwg
Y29uc3QgaW50IGxpbmVubywKIAlyZXR1cm4gMTsKIH0KIAotaW50IHRzdF9ydG5sX3NlbmRfdmFs
aWRhdGUoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKLQlzdHJ1Y3QgdHN0X3J0
bmxfY29udGV4dCAqY3R4KQoraW50IHRzdF9uZXRsaW5rX3NlbmRfdmFsaWRhdGUoY29uc3QgY2hh
ciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAq
Y3R4KQogewotCXN0cnVjdCB0c3RfcnRubF9tZXNzYWdlICpyZXNwb25zZTsKKwlzdHJ1Y3QgdHN0
X25ldGxpbmtfbWVzc2FnZSAqcmVzcG9uc2U7CiAJaW50IHJldDsKIAotCXRzdF9ydG5sX2Vycm5v
ID0gMDsKKwl0c3RfbmV0bGlua19lcnJubyA9IDA7CiAKLQlpZiAodHN0X3J0bmxfc2VuZChmaWxl
LCBsaW5lbm8sIGN0eCkgPD0gMCkKKwlpZiAodHN0X25ldGxpbmtfc2VuZChmaWxlLCBsaW5lbm8s
IGN0eCkgPD0gMCkKIAkJcmV0dXJuIDA7CiAKLQl0c3RfcnRubF93YWl0KGN0eCk7Ci0JcmVzcG9u
c2UgPSB0c3RfcnRubF9yZWN2KGZpbGUsIGxpbmVubywgY3R4KTsKKwl0c3RfbmV0bGlua193YWl0
KGN0eCk7CisJcmVzcG9uc2UgPSB0c3RfbmV0bGlua19yZWN2KGZpbGUsIGxpbmVubywgY3R4KTsK
IAogCWlmICghcmVzcG9uc2UpCiAJCXJldHVybiAwOwogCi0JcmV0ID0gdHN0X3J0bmxfY2hlY2tf
YWNrcyhmaWxlLCBsaW5lbm8sIGN0eCwgcmVzcG9uc2UpOwotCXRzdF9ydG5sX2ZyZWVfbWVzc2Fn
ZShyZXNwb25zZSk7CisJcmV0ID0gdHN0X25ldGxpbmtfY2hlY2tfYWNrcyhmaWxlLCBsaW5lbm8s
IGN0eCwgcmVzcG9uc2UpOworCXRzdF9uZXRsaW5rX2ZyZWVfbWVzc2FnZShyZXNwb25zZSk7CiAK
IAlyZXR1cm4gcmV0OwogfQpkaWZmIC0tZ2l0IGEvdGVzdGNhc2VzL2N2ZS90Y2luZGV4MDEuYyBi
L3Rlc3RjYXNlcy9jdmUvdGNpbmRleDAxLmMKaW5kZXggMDAxMDU2ODIwLi4wZmQyNTRhOTIgMTAw
NjQ0Ci0tLSBhL3Rlc3RjYXNlcy9jdmUvdGNpbmRleDAxLmMKKysrIGIvdGVzdGNhc2VzL2N2ZS90
Y2luZGV4MDEuYwpAQCAtOTUsNyArOTUsNyBAQCBzdGF0aWMgdm9pZCBydW4odm9pZCkKIAkJMSwg
InRjaW5kZXgiKTsKIAlyZXQgPSB0c3RfbmV0ZGV2X2FkZF90cmFmZmljX2ZpbHRlcihfX0ZJTEVf
XywgX19MSU5FX18sIDAsIERFVk5BTUUsCiAJCXFkX2hhbmRsZSwgMTAsIEVUSF9QX0lQLCAxLCAi
dGNpbmRleCIsIGZfY29uZmlnKTsKLQlUU1RfRVJSID0gdHN0X3J0bmxfZXJybm87CisJVFNUX0VS
UiA9IHRzdF9uZXRsaW5rX2Vycm5vOwogCU5FVERFVl9SRU1PVkVfUURJU0MoREVWTkFNRSwgQUZf
VU5TUEVDLCBUQ19IX1JPT1QsIHFkX2hhbmRsZSwgImh0YiIpOwogCiAJaWYgKHJldCkKLS0gCjIu
NDIuMAoKCi0tIApNYWlsaW5nIGxpc3QgaW5mbzogaHR0cHM6Ly9saXN0cy5saW51eC5pdC9saXN0
aW5mby9sdHAK
