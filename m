Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [IPv6:2001:1418:10:5::2])
	by mail.lfdr.de (Postfix) with ESMTPS id DF85822596
	for <lists+linux-ltp@lfdr.de>; Sun, 19 May 2019 02:39:12 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id B620C3EA5C1
	for <lists+linux-ltp@lfdr.de>; Sun, 19 May 2019 02:39:12 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-3.smtp.seeweb.it (in-3.smtp.seeweb.it [217.194.8.3])
 by picard.linux.it (Postfix) with ESMTP id E5AAE3EA699
 for <ltp@lists.linux.it>; Sun, 19 May 2019 02:39:10 +0200 (CEST)
Received: from mail-pl1-x641.google.com (mail-pl1-x641.google.com
 [IPv6:2607:f8b0:4864:20::641])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by in-3.smtp.seeweb.it (Postfix) with ESMTPS id 7FAA71A00930
 for <ltp@lists.linux.it>; Sun, 19 May 2019 02:39:05 +0200 (CEST)
Received: by mail-pl1-x641.google.com with SMTP id x15so5021541pln.9
 for <ltp@lists.linux.it>; Sat, 18 May 2019 17:39:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=android.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=7N9jb5fYBT7W5Xn4dYvmEq+RQC0hHqy+1GWy19S2wC8=;
 b=MF5unyZuwhrZbeEErQRuelIaJTfvCRd0zB2l8tggo4yq/xcp6ye1r7J2rJQJEnXl3r
 03UZ2XTP9/Cy0xln63IIAEsfMJj45hUsVlBCc884Df5FizAU1hg0bmtZBHTf/DM7LLER
 M5AEsXTayCwf4KjeLWEzaiaj/F2kj9W9DnyCCCmWx4nxrg/CK/z94CljJY7UBfr/12Fs
 lPrDh4xoBEXQaXD9TNHw9bakwG1sK3EbF2OjF++WGwUECrkPvvR42GVkxBZWj4dlIgqj
 oJ4D76jD7qRzuxd23ZsxjI4GSLlh3baDnfQ+vkVbJG3mYLHKbEdwu7jG6aSD+EJoMgUP
 bC4A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=7N9jb5fYBT7W5Xn4dYvmEq+RQC0hHqy+1GWy19S2wC8=;
 b=eVJBjLghl/TfUp1XoxFUVQ2JwXpquAoDmoIcvYEjINC/u0ttnSPk6BS+OpRwqHr4Rb
 HdjJs3W+vBYxuGp/cdsrenfBr1QHCK/htFlSXO/LFU7RCtIRxN2COXDNDYFedU7WE0st
 U3WrWwOtu3urHlMa5DWWNnnkqz0Hb3sf7pihGeV8uzPYK2Ux1fKOJaErN0ZsBDiTBKBb
 VNQr5/W5CYO6aDRh2KZ9mxPz1OrFK9iP0dh2FEMAw4rn2NUNMjreAFR8TR4JVzN7k3CB
 caNs9gWjK6+WKny9nkSXadA+mcCBhouGN9DZDqxNFYEztPh6DQ9S742b0clId1ydz3vv
 Plqg==
X-Gm-Message-State: APjAAAWroy9Yb4w35UXMcscCRvZUE+mZrQ8TEpZj/yG4gUOFhEFTNAXO
 YEss+bMJ1jFu/g8mUV96YocIZ8G44h4=
X-Google-Smtp-Source: APXvYqy+wzofdKi/0B9U8VSJrQdhcbRsFcj8HFjvMeKMsVT41C76oigAESQZTMRh8qfEXhCPvA/o5Q==
X-Received: by 2002:a17:902:9689:: with SMTP id
 n9mr67616855plp.133.1558226343796; 
 Sat, 18 May 2019 17:39:03 -0700 (PDT)
Received: from sspatil-glaptop2.unitedwifi.com ([104.153.224.166])
 by smtp.gmail.com with ESMTPSA id t5sm14592814pgn.80.2019.05.18.17.38.56
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
 Sat, 18 May 2019 17:39:03 -0700 (PDT)
From: Sandeep Patil <sspatil@android.com>
To: ltp@lists.linux.it
Date: Sat, 18 May 2019 17:38:06 -0700
Message-Id: <20190519003808.47425-4-sspatil@android.com>
X-Mailer: git-send-email 2.21.0.1020.gf2820cf01a-goog
In-Reply-To: <20190519003808.47425-1-sspatil@android.com>
References: <20190519003808.47425-1-sspatil@android.com>
MIME-Version: 1.0
X-Virus-Scanned: clamav-milter 0.99.2 at in-3.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=0.1 required=7.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,SPF_HELO_NONE,SPF_PASS autolearn=disabled version=3.4.0
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on in-3.smtp.seeweb.it
Cc: chrubis@suze.cz, kernel-team@android.com
Subject: [LTP] [PATCH 3/5] syscalls/asyncio02: convert to new library.
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

RHJvcCBzZXZlcmFsIGR1cGxpY2F0ZSB0ZXN0IGNhc2VzIGFsb25nIHRoZSB3YXkKClNpZ25lZC1v
ZmYtYnk6IFNhbmRlZXAgUGF0aWwgPHNzcGF0aWxAYW5kcm9pZC5jb20+Ci0tLQogdGVzdGNhc2Vz
L2tlcm5lbC9zeXNjYWxscy9hc3luY2lvL2FzeW5jaW8wMi5jIHwgMzIzICsrKystLS0tLS0tLS0t
LS0tLQogMSBmaWxlIGNoYW5nZWQsIDYxIGluc2VydGlvbnMoKyksIDI2MiBkZWxldGlvbnMoLSkK
CmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2FzeW5jaW8vYXN5bmNpbzAy
LmMgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2FzeW5jaW8vYXN5bmNpbzAyLmMKaW5kZXgg
ZTUzMmNjMjg3Li5kODZhMGFmOWMgMTAwNjQ0Ci0tLSBhL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2Fs
bHMvYXN5bmNpby9hc3luY2lvMDIuYworKysgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2Fz
eW5jaW8vYXN5bmNpbzAyLmMKQEAgLTEsOTQgKzEsMTAgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBHUEwtMi4wCisKIC8qCiAgKiBDb3B5cmlnaHQgKGMpIDIwMDAgU2lsaWNvbiBHcmFw
aGljcywgSW5jLiAgQWxsIFJpZ2h0cyBSZXNlcnZlZC4KLSAqCi0gKiBUaGlzIHByb2dyYW0gaXMg
ZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdAot
ICogdW5kZXIgdGhlIHRlcm1zIG9mIHZlcnNpb24gMiBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGlj
IExpY2Vuc2UgYXMKLSAqIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9u
LgotICoKLSAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0
IHdvdWxkIGJlIHVzZWZ1bCwgYnV0Ci0gKiBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBl
dmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCi0gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVT
UyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuCi0gKgotICogRnVydGhlciwgdGhpcyBzb2Z0d2Fy
ZSBpcyBkaXN0cmlidXRlZCB3aXRob3V0IGFueSB3YXJyYW50eSB0aGF0IGl0IGlzCi0gKiBmcmVl
IG9mIHRoZSByaWdodGZ1bCBjbGFpbSBvZiBhbnkgdGhpcmQgcGVyc29uIHJlZ2FyZGluZyBpbmZy
aW5nZW1lbnQKLSAqIG9yIHRoZSBsaWtlLiAgQW55IGxpY2Vuc2UgcHJvdmlkZWQgaGVyZWluLCB3
aGV0aGVyIGltcGxpZWQgb3IKLSAqIG90aGVyd2lzZSwgYXBwbGllcyBvbmx5IHRvIHRoaXMgc29m
dHdhcmUgZmlsZS4gIFBhdGVudCBsaWNlbnNlcywgaWYKLSAqIGFueSwgcHJvdmlkZWQgaGVyZWlu
IGRvIG5vdCBhcHBseSB0byBjb21iaW5hdGlvbnMgb2YgdGhpcyBwcm9ncmFtIHdpdGgKLSAqIG90
aGVyIHNvZnR3YXJlLCBvciBhbnkgb3RoZXIgcHJvZHVjdCB3aGF0c29ldmVyLgotICoKLSAqIFlv
dSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBM
aWNlbnNlIGFsb25nCi0gKiB3aXRoIHRoaXMgcHJvZ3JhbTsgaWYgbm90LCB3cml0ZSB0aGUgRnJl
ZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuLAotICogNTEgRnJhbmtsaW4gU3RyZWV0LCBGaWZ0
aCBGbG9vciwgQm9zdG9uLCBNQSAwMjExMC0xMzAxIFVTQS4KLSAqCi0gKiBDb250YWN0IGluZm9y
bWF0aW9uOiBTaWxpY29uIEdyYXBoaWNzLCBJbmMuLCAxNjAwIEFtcGhpdGhlYXRyZSBQa3d5LAot
ICogTW91bnRhaW4gVmlldywgQ0EgIDk0MDQzLCBvcjoKLSAqCi0gKiBodHRwOi8vd3d3LnNnaS5j
b20KLSAqCi0gKiBGb3IgZnVydGhlciBpbmZvcm1hdGlvbiByZWdhcmRpbmcgdGhpcyBub3RpY2Us
IHNlZToKLSAqCi0gKiBodHRwOi8vb3NzLnNnaS5jb20vcHJvamVjdHMvR2VuSW5mby9Ob3RpY2VF
eHBsYW4vCi0gKgotICovCi0vKiAkSWQ6IGFzeW5jaW8wMi5jLHYgMS42IDIwMDkvMDgvMjggMTE6
MTc6MzkgdmFwaWVyIEV4cCAkICovCi0vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBPUyBUZXN0IC0gU2lsaWNvbiBHcmFwaGlj
cywgSW5jLgotICogTWVuZG90YSBIZWlnaHRzLCBNaW5uZXNvdGEKLSAqCi0gKiBURVNUIElERU5U
SUZJRVI6ICBhaW90Y3MwMjogIHdyaXRlL2Nsb3NlIGZsdXNoZXMgZGF0YSB0byB0aGUgZmlsZQot
ICoKLSAqIFBBUkVOVCBET0NVTUVOVDogIGFpb3RkczAxOiAga2VybmVsIGkvbwotICoKICAqIEFV
VEhPUjogQmFycmllIEtsZXRzY2hlcgotICoKICAqIENPLVBJTE9UOiBEYXZlIEJhdW1nYXJ0bmVy
Ci0gKgotICogVEVTVCBJVEVNUzoKLSAqIAlmb3IgZWFjaCBvcGVuIGZsYWdzIHNldCB1c2VkOgot
ICogCTEuIE11bHRpcGxlIHdyaXRlcyB0byBhIGZpbGUgd29yayBhcyBzcGVjaWZpZWQgZm9yCi0g
KiAJICAgbW9yZSB0aGFuIEJVRlNJWiBieXRlcy4KLSAqIAkyLiBNdWx0aXBsZSB3cml0ZXMgdG8g
YSBmaWxlIHdvcmsgYXMgc3BlY2lmaWVkIGZvcgotICogCSAgIEJVRlNJWiBieXRlcy4KLSAqIAkz
LiBNdWx0aXBsZSB3cml0ZXMgdG8gYSBmaWxlIHdvcmsgYXMgc3BlY2lmaWVkIGZvcgotICogCSAg
IGxvd2VyIHRoYW4gQlVGU0laIGJ5dGVzLgotICoKLSAqIElOUFVUIFNQRUNJRklDQVRJT05TOgot
ICogCVN0YW5kYXJkIHBhcnNlX29wdHMgc3VwcG9ydGVkIG9wdGlvbnMuCi0gKiQKLSAqIE9VVFBV
VCBTUEVDSUZJQ0FUSU9OUwotICogCVN0YW5kYXJkIHRzdF9yZXMgb3V0cHV0IGZvcm1hdAotICoK
LSAqIEVOVklST05NRU5UQUwgTkVFRFM6Ci0gKiAJVGhpcyBwcm9ncmFtIHVzZXMgdGhlIGVudmly
b25tZW50IHZhcmlhYmxlIFRNUERJUiBmb3IgdGhlIGxvY2F0aW9uCi0gKiAJb2YgdGhlIHRlbXBv
cmFyeSBkaXJlY3RvcnkuCi0gKgotICoKLSAqIFNQRUNJQUwgUFJPQ0VEVVJBTCBSRVFVSVJFTUVO
VFM6Ci0gKiAJVGhlIHByb2dyYW0gbXVzdCBiZSBsaW5rZWQgd2l0aCB0c3RfKi5vIGFuZCBwYXJz
ZV9vcHRzLm8uCi0gKgotICogSU5URVJDQVNFIERFUEVOREVOQ0lFUzoKLSAqIAlOT05FLgotICoK
LSAqIERFVEFJTEVEIERFU0NSSVBUSU9OOgotICogCUF0dGVtcHQgdG8gZ2V0IHNvbWUgbWVtb3J5
IHRvIHdvcmsgd2l0aC4KLSAqIAlDYWxsIHRlc3RydW4gd3JpdGluZyAoQlVGU0laICsgMSkgYnl0
ZXMKLSAqIAlDYWxsIHRlc3RydW4gd3JpdGluZyBCVUZTSVogYnl0ZXMKLSAqIAlSZXBlYXRlZCBj
YWxsIHRvIHRlc3RydW4oKSB3aXRoIGRlY3JlYXNpbmcgd3JpdGUgc2l6ZXMKLSAqIAkJbGVzcyB0
aGFuIEJVRlNJWgotICogCUVuZAotICoKLSAqIAlTdGFydCB0ZXN0cnVuKCkKLSAqIAlBdHRlbXB0
IHRvIG9wZW4gYSB0ZW1wb3JhcnkgZmlsZS4KLSAqIAlXcml0ZSB0aGUgbWVtb3J5IHRvIHRoZSBm
aWxlLgotICogCUF0dGVtcHQgdG8gY2xvc2UgdGhlIGZpbGUgd2hpY2ggYWxzbyBmbHVzaGVzIHRo
ZSBidWZmZXJzLgotICogCU5vdyBjaGVjayB0byBzZWUgaWYgdGhlIG51bWJlciBvZiBieXRlcyB3
cml0dGVuIGlzIHRoZQotICogCQlzYW1lIGFzIHRoZSBudW1iZXIgb2YgYnl0ZXMgaW4gdGhlIGZp
bGUuCi0gKiAJQ2xlYW51cAotICoKLSAqIEJVR1M6Ci0gKiAJTk9ORS4KLSAqCi0qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCisgKi8K
IAogI2luY2x1ZGUgPGZjbnRsLmg+CiAjaW5jbHVkZSA8c3lzL3R5cGVzLmg+CkBAIC05NiwxOTkg
KzEyLDgyIEBACiAjaW5jbHVkZSA8c3lzL3NpZ25hbC5oPgogI2luY2x1ZGUgPGVycm5vLmg+CiAj
aW5jbHVkZSA8c3RkbGliLmg+Ci0jaW5jbHVkZSAidGVzdC5oIgotI2luY2x1ZGUgInNhZmVfbWFj
cm9zLmgiCi0KLSNkZWZpbmUgRkxBRyBPX1JEV1IgfCBPX0NSRUFUIHwgT19UUlVOQwkvKiBGbGFn
cyB1c2VkIHdoZW4gb3BlbmluZyB0ZW1wIHRpbGUgKi8KLSNkZWZpbmUgTU9ERSAgMDc3NwkJLyog
TW9kZSB0byBvcGVuIGZpbGUgd2l0aCAqLwotI2RlZmluZSBXUklURVMgMTAJCS8qIE51bWJlciBv
ZiB0aW1lcyBidWZmZXIgaXMgd3JpdHRlbiAqLwotI2RlZmluZSBERUNSIDEwMDAJCS8qIE51bWJl
ciBvZiBieXRlcyBkZWNyZW1lbnRlZCBiZXR3ZWVuICovCi0JCQkJCS8qIENhbGxzIHRvIHRlc3Ry
dW4oKSAqLwotI2RlZmluZSBPSyAtMQkJCS8qIFJldHVybiB2YWx1ZSBmcm9tIHRlc3RydW4oKSAq
LwotCi0jZGVmaW5lIEZOQU1FMQkiYWlvMDIuMSIKLSNkZWZpbmUgRk5BTUUyCSJhaW8wMi4yIgot
I2RlZmluZSBGTkFNRTMJImFpbzAyLjMiCi0KLSNkZWZpbmUgRVJSX01TRzEgIkJ5dGVzIGluIGZp
bGUgbm90IGVxdWFsIHRvIGJ5dGVzIHdyaXR0ZW4uIgotI2RlZmluZSBFUlJfTVNHMiAiQnl0ZXMg
aW4gZmlsZSAoJWQpIG5vdCBlcXVhbCB0byBieXRlcyB3cml0dGVuICglZCkuIgotCi1jaGFyICpk
cDsJCQkvKiBwb2ludGVyIHRvIGFyZWEgb2YgbWVtb3J5ICovCi0KLXZvaWQgc2V0dXAoKTsKLXZv
aWQgY2xlYW51cCgpOwotaW50IHRlc3RydW4oaW50IGZsYWcsIGludCBieXRlcywgaW50IHRpKTsK
LQotY2hhciAqVENJRCA9ICJhc3luY2lvMDIiOwotaW50IFRTVF9UT1RBTCA9IDY7Ci0KLWNoYXIg
KmZpbGVuYW1lOwkJCS8qIG5hbWUgb2YgdGhlIHRlbXBvcmFyeSBmaWxlICovCi0KLWNoYXIgKlBy
b2duYW1lOwotaW50IE9wZW5fZmxhZ3M7Ci0KLWludCBGbGFnc1tdID0gewotCU9fUkRXUiB8IE9f
Q1JFQVQgfCBPX1RSVU5DLAotCU9fUkRXUiB8IE9fQ1JFQVQgfCBPX1RSVU5DCisjaW5jbHVkZSAi
dHN0X3Rlc3QuaCIKKworLyogVGVtcG9yYXJ5IGZpbGUgbmFtZXMgKi8KKyNkZWZpbmUgRk5BTUUx
CSJhc3luY2lvMDIuMSIKKyNkZWZpbmUgRk5BTUUyCSJhc3luY2lvMDIuMiIKKworLyogTnVtYmVy
IG9mIHRpbWVzIGVhY2ggYnVmZmVyIGlzIHdyaXR0ZW4gKi8KKyNkZWZpbmUgTlVNX1dSSVRFUwko
MTApCisjZGVmaW5lIEJVRlNJWkUJCSg0MDk2KQorCitjaGFyICpidWZmZXI7CisKK3N0YXRpYyBz
dHJ1Y3QgdGVzdF9jYXNlIHsKKwljb25zdCBjaGFyICpmaWxlbmFtZTsKKwlzaXplX3QgYnl0ZXNf
dG9fd3JpdGU7CisJc2l6ZV90IGRlY3JlbWVudDsKK30gdGNhc2VzW10gPSB7CisJLyogV3JpdGUg
YW5kIHZlcmlmeSBCVUZTSVpFIGJ5dGUgY2h1bmtzICovCisJeyBGTkFNRTEsIEJVRlNJWkUsIEJV
RlNJWkUgfSwKKwkvKiBXcml0ZSBhbmQgdmVyaWZ5IGRlY3JlYXNpbmcgY2h1bmsgc2l6ZXMgKi8K
Kwl7IEZOQU1FMiwgQlVGU0laRSwgMTAwMCB9CiB9OwogCi1pbnQgTnVtX2ZsYWdzOwotCi0vKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKLSAqIE1BSU4KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLWludCBtYWluKGludCBhYywg
Y2hhciAqKmF2KQordm9pZCB2ZXJpZnkoY29uc3QgY2hhciAqZm5hbWUsIHNpemVfdCBieXRlcywg
c2l6ZV90IGRlY3JlbWVudCkKIHsKLQotCWludCBpOwotCWludCByZXRfdmFsOwotCWludCBlb2s7
CQkvKiBldmVyeXRoaW5nIGlzIG9rIGZsYWcgKi8KLQlpbnQgbGM7Ci0JaW50IGZsYWdfY250Owot
Ci0JTnVtX2ZsYWdzID0gc2l6ZW9mKEZsYWdzKSAvIHNpemVvZihpbnQpOwotCVRTVF9UT1RBTCA9
IDMgKiBOdW1fZmxhZ3M7Ci0KLQl0c3RfcGFyc2Vfb3B0cyhhYywgYXYsIE5VTEwsIE5VTEwpOwot
Ci0Jc2V0dXAoKTsKLQotCWZvciAobGMgPSAwOyBURVNUX0xPT1BJTkcobGMpOyBsYysrKSB7Ci0K
LQkJdHN0X2NvdW50ID0gMDsKLQotCQlmb3IgKGZsYWdfY250ID0gMDsgZmxhZ19jbnQgPCBOdW1f
ZmxhZ3M7IGZsYWdfY250KyspIHsKLQotCQkJLyoKLQkJCSAqIGNhbGwgdGVzdHJ1biB3cml0aW5n
IChCVUZTSVogKyAxKSBieXRlIGNodW5rcwotCQkJICovCi0KLQkJCWZpbGVuYW1lID0gRk5BTUUx
OwotCQkJaWYgKHRlc3RydW4oRmxhZ3NbZmxhZ19jbnRdLCBCVUZTSVogKyAxLCAxKSAhPSBPSykg
ewotCQkJCXRzdF9yZXNtKFRGQUlMLCBFUlJfTVNHMSk7Ci0JCQl9IGVsc2UgewotCQkJCXRzdF9y
ZXNtKFRQQVNTLAotCQkJCQkgIk1vcmUgdGhhbiBCVUZTSVpFIGJ5dGVzIG11bHRpcGxlIHN5bmNo
cm9ub3VzIHdyaXRlcyB0byBhIGZpbGUgY2hlY2sgb3V0IG9rIik7Ci0JCQl9Ci0KLQkJCS8qCi0J
CQkgKiBjYWxsIHRlc3RydW4gd3JpdGluZyBCVUZTSVogYnl0ZSBjaHVua3MKLQkJCSAqLwotCi0J
CQlmaWxlbmFtZSA9IEZOQU1FMjsKLQkJCWlmICh0ZXN0cnVuKEZsYWdzW2ZsYWdfY250XSwgQlVG
U0laLCAyKSAhPSBPSykgewotCQkJCXRzdF9yZXNtKFRGQUlMLCBFUlJfTVNHMSk7Ci0JCQl9IGVs
c2UgewotCQkJCXRzdF9yZXNtKFRQQVNTLAotCQkJCQkgIkJVRlNJWkUgYnl0ZXMgbXVsdGlwbGUg
c3luY2hyb25vdXMgd3JpdGVzIHRvIGEgZmlsZSBjaGVja3Mgb3V0IG9rIik7Ci0JCQl9Ci0KLQkJ
CS8qCi0JCQkgKiB3aGlsZSB0aGUgYnl0ZSBjaHVua3MgYXJlIGdyZWF0ZXIgdGhhbiAwCi0JCQkg
KiAgICAgIGNhbGwgdGVzdHJ1bigpIHdpdGggZGVjcmVhc2luZyBjaHVuayBzaXplcwotCQkJICov
Ci0KLQkJCWZpbGVuYW1lID0gRk5BTUUzOwotCQkJZW9rID0gMTsKLQkJCWZvciAoaSA9IEJVRlNJ
WiAtIDE7IGkgPj0gMDsgaSAtPSBERUNSKSB7Ci0JCQkJaWYgKChyZXRfdmFsID0KLQkJCQkgICAg
IHRlc3RydW4oRmxhZ3NbZmxhZ19jbnRdLCBpLCAzKSkgIT0gT0spIHsKLQkJCQkJdHN0X3Jlc20o
VEZBSUwsIEVSUl9NU0cyLCByZXRfdmFsLAotCQkJCQkJIGkgKiBXUklURVMpOwotCQkJCX0KLQkJ
CX0KLQotCQkJaWYgKGVvaykgewotCQkJCXRzdF9yZXNtKFRQQVNTLAotCQkJCQkgIkxlc3MgdGhh
biBCVUZTSVpFIGJ5dGVzIG11bHRpcGxlIHN5bmNocm9ub3VzIHdyaXRlcyB0byBhIGZpbGUgY2hl
Y2tzIG91dCBvayIpOwotCQkJfQorCXN0cnVjdCBzdGF0IHM7CisJaW50IGZkLCBpOworCXNpemVf
dCBieXRlc193cml0dGVuID0gMDsKKworCWZkID0gU0FGRV9PUEVOKGZuYW1lLCBPX0NSRUFUIHwg
T19UUlVOQyB8IE9fUkRXUiwgMDc3Nyk7CisJd2hpbGUgKGJ5dGVzID4gMCkgeworCQlmb3IgKGkg
PSAwOyBpIDwgTlVNX1dSSVRFUzsgaSsrKSB7CisJCQlTQUZFX1dSSVRFKDEsIGZkLCBidWZmZXIs
IGJ5dGVzKTsKKwkJCWJ5dGVzX3dyaXR0ZW4gKz0gYnl0ZXM7CiAJCX0KKwkJYnl0ZXMgLT0gYnl0
ZXMgPiBkZWNyZW1lbnQgPyBkZWNyZW1lbnQgOiBieXRlczsKIAl9Ci0JY2xlYW51cCgpOwotCXRz
dF9leGl0KCk7Ci19CQkJCS8qIGVuZCBtYWluKCkgKi8KLQotaW50IHRlc3RydW4oaW50IGZsYWcs
IGludCBieXRlcywgaW50IHRpKQotewotCi0JaW50IGZpbGRlcywgaSwgcmV0OwogCi0Jc3RydWN0
IHN0YXQgYnVmZmVyOwkvKiBidWZmZXIgb2YgbWVtb3J5IHJlcXVpcmVkIGZvciBzdGF0IGNvbW1h
bmQgKi8KKwlTQUZFX0NMT1NFKGZkKTsKKwlTQUZFX1NUQVQoZm5hbWUsICZzKTsKKwlTQUZFX1VO
TElOSyhmbmFtZSk7CiAKIAkvKgotCSAqICAgICAgQXR0ZW1wdCB0byBvcGVuIGEgdGVtcG9yYXJ5
IGZpbGUuCisJICogIE5vdyBjaGVjayB0byBzZWUgaWYgdGhlIG51bWJlciBvZiBieXRlcyB3cml0
dGVuIHdhcworCSAqICB0aGUgc2FtZSBhcyB0aGUgbnVtYmVyIG9mIGJ5dGVzIGluIHRoZSBmaWxl
LgogCSAqLwotCi0JaWYgKChmaWxkZXMgPSBvcGVuKGZpbGVuYW1lLCBmbGFnLCBNT0RFKSkgPT0g
LTEpIHsKLQkJdHN0X2Jya20oVEJST0sgfCBURVJSTk8sIGNsZWFudXAsICJvcGVuKCVzKSBmYWls
ZWQiLCBmaWxlbmFtZSk7CisJaWYgKHMuc3Rfc2l6ZSAhPSAob2ZmX3QpIGJ5dGVzX3dyaXR0ZW4p
IHsKKwkJdHN0X3JlcyhURkFJTCwgImZpbGUgc2l6ZSAoJXp1KSBub3QgYXMgZXhwZWN0ZWQgKCV6
dSkgYnl0ZXMiLAorCQkJCXMuc3Rfc2l6ZSwgYnl0ZXNfd3JpdHRlbik7CisJCXJldHVybjsKIAl9
CiAKLQkvKgotCSAqICAgICAgV3JpdGUgdGhlIG1lbW9yeSB0byB0aGUgZmlsZS4KLQkgKi8KLQot
CWZvciAoaSA9IDA7IGkgPCBXUklURVM7IGkrKykgewotCQlURVNUKHdyaXRlKGZpbGRlcywgZHAs
ICh1bnNpZ25lZClieXRlcykpOwotCi0JCWlmIChURVNUX1JFVFVSTiA9PSAtMSkgewotCQkJdHN0
X2Jya20oVEJST0sgfCBUVEVSUk5PLCBjbGVhbnVwLCAid3JpdGUoKSBmYWlsZWQiKTsKLQkJfQot
CX0JCQkvKiBlbmQgZm9yICgpICovCi0KLQkvKgotCSAqICAgICAgQXR0ZW1wdCB0byBjbG9zZSB0
aGUgZmlsZSB3aGljaCBhbHNvIGZsdXNoZXMgdGhlIGJ1ZmZlcnMuCi0JICovCi0KLQlTQUZFX0NM
T1NFKGNsZWFudXAsIGZpbGRlcyk7Ci0KLQlyZXQgPSBPSzsKLQotCS8qCi0JICogIE5vdyBjaGVj
ayB0byBzZWUgaWYgdGhlIG51bWJlciBvZiBieXRlcyB3cml0dGVuIGlzIHRoZQotCSAqICBzYW1l
IGFzIHRoZSBudW1iZXIgb2YgYnl0ZXMgaW4gdGhlIGZpbGUuCi0JICovCi0KLQlTQUZFX1NUQVQo
Y2xlYW51cCwgZmlsZW5hbWUsICZidWZmZXIpOwotCi0JaWYgKGJ1ZmZlci5zdF9zaXplICE9IChv
ZmZfdCkgKGJ5dGVzICogV1JJVEVTKSkgewotCQlyZXQgPSAoaW50KWJ1ZmZlci5zdF9zaXplOwot
CX0KLQotCVNBRkVfVU5MSU5LKGNsZWFudXAsIGZpbGVuYW1lKTsKKwl0c3RfcmVzKFRQQVNTLCAi
RmlsZSBzaXplIHJlcG9ydGVkIGFzIGV4cGVjdGVkIik7Cit9CiAKLQlyZXR1cm4gcmV0Owordm9p
ZCB2ZXJpZnlfYXN5bmNocm9ub3VzX2lvKHVuc2lnbmVkIGludCBucikKK3sKKwlzdHJ1Y3QgdGVz
dF9jYXNlICp0Y2FzZSA9ICZ0Y2FzZXNbbnJdOwogCi19CQkJCS8qIGVuZCB0ZXN0cnVuKCkgKi8K
Kwl2ZXJpZnkodGNhc2UtPmZpbGVuYW1lLCB0Y2FzZS0+Ynl0ZXNfdG9fd3JpdGUsIHRjYXNlLT5k
ZWNyZW1lbnQpOworfQogCi0vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBzZXR1cCgpIC0gcGVyZm9ybXMgYWxsIE9ORSBU
SU1FIHNldHVwIGZvciB0aGlzIHRlc3QuCi0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogdm9pZCBzZXR1cCh2b2lkKQogewot
Ci0JdHN0X3NpZyhGT1JLLCBERUZfSEFORExFUiwgY2xlYW51cCk7Ci0KLQlURVNUX1BBVVNFOwot
Ci0JLyogY3JlYXRlIGEgdGVtcG9yYXJ5IGRpcmVjdG9yeSBhbmQgZ28gdG8gaXQgKi8KLQl0c3Rf
dG1wZGlyKCk7Ci0KLQkvKgotCSAqICBBdHRlbXB0IHRvIGdldCBzb21lIG1lbW9yeSB0byB3b3Jr
IHdpdGguCi0JICovCi0KLQlpZiAoKGRwID0gbWFsbG9jKCh1bnNpZ25lZClCVUZTSVogKyAxKSkg
PT0gTlVMTCkgewotCQl0c3RfYnJrbShUQlJPSyB8IFRFUlJOTywgY2xlYW51cCwgIm1hbGxvYygp
IGZhaWxlZCIpOwotCX0KLQorCWJ1ZmZlciA9IFNBRkVfTUFMTE9DKEJVRlNJWkUpOwogfQogCi0v
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBjbGVhbnVwKCkgLSBwZXJmb3JtcyBhbGwgT05FIFRJTUUgY2xlYW51cCBmb3Ig
dGhpcyB0ZXN0IGF0Ci0gKiAgICAgICAgICAgICAgY29tcGxldGlvbiBvciBwcmVtYXR1cmUgZXhp
dC4KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKiovCiB2b2lkIGNsZWFudXAodm9pZCkKIHsKLQotCXRzdF9ybWRpcigpOworCWZy
ZWUoYnVmZmVyKTsKIH0KKworc3RhdGljIHN0cnVjdCB0c3RfdGVzdCB0ZXN0ID0geworCS50Y250
ID0gQVJSQVlfU0laRSh0Y2FzZXMpLAorCS5uZWVkc190bXBkaXIgPSAxLAorCS50ZXN0ID0gdmVy
aWZ5X2FzeW5jaHJvbm91c19pbywKKwkuc2V0dXAgPSBzZXR1cCwKKwkuY2xlYW51cCA9IGNsZWFu
dXAsCit9OwotLSAKMi4yMS4wLjEwMjAuZ2YyODIwY2YwMWEtZ29vZwoKCi0tIApNYWlsaW5nIGxp
c3QgaW5mbzogaHR0cHM6Ly9saXN0cy5saW51eC5pdC9saXN0aW5mby9sdHAK
