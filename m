Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [IPv6:2001:1418:10:5::2])
	by mail.lfdr.de (Postfix) with ESMTPS id B75AB22B6B
	for <lists+linux-ltp@lfdr.de>; Mon, 20 May 2019 07:50:50 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id 89D08294AB2
	for <lists+linux-ltp@lfdr.de>; Mon, 20 May 2019 07:50:50 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-5.smtp.seeweb.it (in-5.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::5])
 by picard.linux.it (Postfix) with ESMTP id 9D6FA294A89
 for <ltp@lists.linux.it>; Mon, 20 May 2019 07:50:49 +0200 (CEST)
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by in-5.smtp.seeweb.it (Postfix) with ESMTPS id 35EE6600BA2
 for <ltp@lists.linux.it>; Mon, 20 May 2019 07:50:49 +0200 (CEST)
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 6C9DDAEB0
 for <ltp@lists.linux.it>; Mon, 20 May 2019 05:50:46 +0000 (UTC)
From: Christian Amann <camann@suse.com>
To: ltp@lists.linux.it
Date: Mon, 20 May 2019 07:50:38 +0200
Message-Id: <20190520055038.11499-2-camann@suse.com>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20190520055038.11499-1-camann@suse.com>
References: <20190520055038.11499-1-camann@suse.com>
X-Virus-Scanned: clamav-milter 0.99.2 at in-5.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=0.0 required=7.0 tests=SPF_HELO_NONE,SPF_PASS
 autolearn=disabled version=3.4.0
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on in-5.smtp.seeweb.it
Subject: [LTP] [PATCH v1 2/2] syscalls/fstat{03,05}: rewrote testcases
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

TWVyZ2VkIGZzdGF0MDMgYW5kIGZzdGF0MDU6CglCb3RoIHRlc3RjYXNlcyBoYWQgbG90cyBvZiBk
dXBsaWNhdGVkIGNvZGUgd2hpY2gKCWNvdWxkIGJlIHJlbW92ZWQgYnkgY3JlYXRpbmcgYSBzaW5n
bGUgdGVzdGNhc2UKCWZvciBib3RoIHNjZW5hcmlvcy4KUmV3cm90ZSB0ZXN0Y2FzZToKCUNsZWFu
ZWQgdXAgYW5kIHBvcnRlZCB0byBuZXcgbGlicmFyeS4KClNpZ25lZC1vZmYtYnk6IENocmlzdGlh
biBBbWFubiA8Y2FtYW5uQHN1c2UuY29tPgotLS0KIHJ1bnRlc3Qvc3lzY2FsbHMgICAgICAgICAg
ICAgICAgICAgICAgICAgICB8ICAgMiAtCiB0ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2ZzdGF0
Ly5naXRpZ25vcmUgfCAgIDIgLQogdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3RhdC9mc3Rh
dDAzLmMgIHwgMTk4ICsrKysrKystLS0tLS0tLS0tLS0tLS0tCiB0ZXN0Y2FzZXMva2VybmVsL3N5
c2NhbGxzL2ZzdGF0L2ZzdGF0MDUuYyAgfCAyNDQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0KIDQgZmlsZXMgY2hhbmdlZCwgNTkgaW5zZXJ0aW9ucygrKSwgMzg3IGRlbGV0aW9ucygtKQog
ZGVsZXRlIG1vZGUgMTAwNjQ0IHRlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvZnN0YXQvZnN0YXQw
NS5jCgpkaWZmIC0tZ2l0IGEvcnVudGVzdC9zeXNjYWxscyBiL3J1bnRlc3Qvc3lzY2FsbHMKaW5k
ZXggNWMyZjRjZWM2Li4zY2ZiOTljNjMgMTAwNjQ0Ci0tLSBhL3J1bnRlc3Qvc3lzY2FsbHMKKysr
IGIvcnVudGVzdC9zeXNjYWxscwpAQCAtMzM4LDggKzMzOCw2IEBAIGZzdGF0MDIgZnN0YXQwMgog
ZnN0YXQwMl82NCBmc3RhdDAyXzY0CiBmc3RhdDAzIGZzdGF0MDMKIGZzdGF0MDNfNjQgZnN0YXQw
M182NAotZnN0YXQwNSBmc3RhdDA1Ci1mc3RhdDA1XzY0IGZzdGF0MDVfNjQKIAogI2ZzdGF0YXQ2
NC9uZXdmc3RhdGF0IHRlc3QgY2FzZXMKIGZzdGF0YXQwMSBmc3RhdGF0MDEKZGlmZiAtLWdpdCBh
L3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvZnN0YXQvLmdpdGlnbm9yZSBiL3Rlc3RjYXNlcy9r
ZXJuZWwvc3lzY2FsbHMvZnN0YXQvLmdpdGlnbm9yZQppbmRleCAxYzY2YmRmMTAuLjliMTA4OTQz
OCAxMDA2NDQKLS0tIGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3RhdC8uZ2l0aWdub3Jl
CisrKyBiL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvZnN0YXQvLmdpdGlnbm9yZQpAQCAtMiw1
ICsyLDMgQEAKIC9mc3RhdDAyXzY0CiAvZnN0YXQwMwogL2ZzdGF0MDNfNjQKLS9mc3RhdDA1Ci0v
ZnN0YXQwNV82NApkaWZmIC0tZ2l0IGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3RhdC9m
c3RhdDAzLmMgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2ZzdGF0L2ZzdGF0MDMuYwppbmRl
eCAwZmE2MmI4NDcuLmMxZWU3OWJjOSAxMDA2NDQKLS0tIGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNj
YWxscy9mc3RhdC9mc3RhdDAzLmMKKysrIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3Rh
dC9mc3RhdDAzLmMKQEAgLTEsMTYwICsxLDgwIEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmll
cjogR1BMLTIuMC1vci1sYXRlcgogLyoKLSAqIFRlc3QgTmFtZTogZnN0YXQwMwotICoKLSAqIFRl
c3QgRGVzY3JpcHRpb246Ci0gKiAgIFZlcmlmeSB0aGF0LCBmc3RhdCgyKSByZXR1cm5zIC0xIGFu
ZCBzZXRzIGVycm5vIHRvIEVCQURGIGlmIHRoZSBmaWxlCi0gKiAgIHBvaW50ZWQgdG8gYnkgZmls
ZSBkZXNjcmlwdG9yIGlzIG5vdCB2YWxpZC4KLSAqCi0gKiBFeHBlY3RlZCBSZXN1bHQ6Ci0gKiAg
ZnN0YXQoKSBzaG91bGQgZmFpbCB3aXRoIHJldHVybiB2YWx1ZSAtMSBhbmQgc2V0IGV4cGVjdGVk
IGVycm5vLgotICoKLSAqIEFsZ29yaXRobToKLSAqICBTZXR1cDoKLSAqICAgU2V0dXAgc2lnbmFs
IGhhbmRsaW5nLgotICogICBDcmVhdGUgdGVtcG9yYXJ5IGRpcmVjdG9yeS4KLSAqICAgUGF1c2Ug
Zm9yIFNJR1VTUjEgaWYgb3B0aW9uIHNwZWNpZmllZC4KLSAqCi0gKiAgVGVzdDoKLSAqICAgTG9v
cCBpZiB0aGUgcHJvcGVyIG9wdGlvbnMgYXJlIGdpdmVuLgotICogICBFeGVjdXRlIHN5c3RlbSBj
YWxsCi0gKiAgIENoZWNrIHJldHVybiBjb2RlLCBpZiBzeXN0ZW0gY2FsbCBmYWlsZWQgKHJldHVy
bj0tMSkKLSAqCWlmIGVycm5vIHNldCA9PSBleHBlY3RlZCBlcnJubwotICoJCUlzc3VlIHN5cyBj
YWxsIGZhaWxzIHdpdGggZXhwZWN0ZWQgcmV0dXJuIHZhbHVlIGFuZCBlcnJuby4KLSAqCU90aGVy
d2lzZSwKLSAqCQlJc3N1ZSBzeXMgY2FsbCBmYWlscyB3aXRoIHVuZXhwZWN0ZWQgZXJybm8uCi0g
KiAgIE90aGVyd2lzZSwKLSAqCUlzc3VlIHN5cyBjYWxsIHJldHVybnMgdW5leHBlY3RlZCB2YWx1
ZS4KLSAqCi0gKiAgQ2xlYW51cDoKLSAqICAgUHJpbnQgZXJybm8gbG9nIGFuZC9vciB0aW1pbmcg
c3RhdHMgaWYgb3B0aW9ucyBnaXZlbgotICogICBEZWxldGUgdGhlIHRlbXBvcmFyeSBkaXJlY3Rv
cnkocykvZmlsZShzKSBjcmVhdGVkLgotICoKLSAqIFVzYWdlOiAgPGZvciBjb21tYW5kLWxpbmU+
Ci0gKiAgZnN0YXQwMyBbLWMgbl0gWy1lXSBbLWkgbl0gWy1JIHhdIFstUCB4XSBbLXRdCi0gKiAg
ICAgd2hlcmUsICAtYyBuIDogUnVuIG4gY29waWVzIGNvbmN1cnJlbnRseS4KLSAqICAgICAgICAg
ICAgIC1lICAgOiBUdXJuIG9uIGVycm5vIGxvZ2dpbmcuCi0gKgkgICAgICAgLWkgbiA6IEV4ZWN1
dGUgdGVzdCBuIHRpbWVzLgotICoJICAgICAgIC1JIHggOiBFeGVjdXRlIHRlc3QgZm9yIHggc2Vj
b25kcy4KLSAqCSAgICAgICAtUCB4IDogUGF1c2UgZm9yIHggc2Vjb25kcyBiZXR3ZWVuIGl0ZXJh
dGlvbnMuCi0gKgkgICAgICAgLXQgICA6IFR1cm4gb24gc3lzY2FsbCB0aW1pbmcuCi0gKgotICog
SElTVE9SWQotICoJMDcvMjAwMSBQb3J0ZWQgYnkgV2F5bmUgQm95ZXIKLSAqCi0gKiBSRVNUUklD
VElPTlM6Ci0gKiAgVGhpcyB0ZXN0IHNob3VsZCBiZSBleGVjdXRlZCBieSAnbm9uLXN1cGVyLXVz
ZXInIG9ubHkuCisgKiBDb3B5cmlnaHQgKGMpIEludGVybmF0aW9uYWwgQnVzaW5lc3MgTWFjaGlu
ZXMgIENvcnAuLCAyMDAxCisgKiAgMDcvMjAwMSBQb3J0ZWQgYnkgV2F5bmUgQm95ZXIKKyAqICAw
NS8yMDE5IFBvcnRlZCB0byBuZXcgbGlicmFyeTogQ2hyaXN0aWFuIEFtYW5uIDxjYW1hbm5Ac3Vz
ZS5jb20+CisgKi8KKy8qCisgKiBUZXN0cyBkaWZmZXJlbnQgZXJyb3Igc2NlbmFyaW9zOgogICoK
KyAqIDEpIENhbGxzIGZzdGF0KCkgd2l0aCBjbG9zZWQgZmlsZSBkZXNjcmlwdG9yCisgKiAgICAt
PiBFQkFERgorICogMikgQ2FsbHMgZnN0YXQoKSB3aXRoIGFuIGludmFsaWQgYWRkcmVzcyBmb3Ig
c3RhdCBzdHJ1Y3R1cmUKKyAqICAgIC0+IEVGQVVMVAogICovCiAKLSNpbmNsdWRlIDxzdGRpby5o
PgotI2luY2x1ZGUgPHN0ZGxpYi5oPgotI2luY2x1ZGUgPHVuaXN0ZC5oPgotI2luY2x1ZGUgPGZj
bnRsLmg+CiAjaW5jbHVkZSA8ZXJybm8uaD4KLSNpbmNsdWRlIDxzdHJpbmcuaD4KLSNpbmNsdWRl
IDxzaWduYWwuaD4KLSNpbmNsdWRlIDxzeXMvdHlwZXMuaD4KLSNpbmNsdWRlIDxzeXMvc3RhdC5o
PgorI2luY2x1ZGUgInRzdF90ZXN0LmgiCisjaW5jbHVkZSAidHN0X3NhZmVfbWFjcm9zLmgiCisj
aW5jbHVkZSAiZnN0YXQuaCIKIAotI2luY2x1ZGUgInRlc3QuaCIKLSNpbmNsdWRlICJzYWZlX21h
Y3Jvcy5oIgotCi0jZGVmaW5lIEZJTEVfTU9ERQlTX0lSVVNSIHwgU19JV1VTUiB8IFNfSVJHUlAg
fCBTX0lST1RICiAjZGVmaW5lIFRFU1RfRklMRQkidGVzdGZpbGUiCiAKLWNoYXIgKlRDSUQgPSAi
ZnN0YXQwMyI7Ci1pbnQgVFNUX1RPVEFMID0gMTsKLQotaW50IGZpbGRlczsJCQkvKiB0ZXN0Zmls
ZSBkZXNjcmlwdG9yICovCitzdGF0aWMgaW50IGZkX29rOworc3RhdGljIGludCBmZF9lYmFkZjsK
K3N0YXRpYyBzdHJ1Y3Qgc3RhdCBzdGF0X2J1ZjsKIAotdm9pZCBzZXR1cCgpOwkJCS8qIE1haW4g
c2V0dXAgZnVuY3Rpb24gZm9yIHRoZSB0ZXN0cyAqLwotdm9pZCBjbGVhbnVwKCk7CQkJLyogY2xl
YW51cCBmdW5jdGlvbiBmb3IgdGhlIHRlc3QgKi8KK3N0YXRpYyBzdHJ1Y3QgdGNhc2V7CisJaW50
ICpmZDsKKwlzdHJ1Y3Qgc3RhdCAqc3RhdF9idWY7CisJaW50IGV4cF9lcnI7Cit9IHRjYXNlc1td
ID0geworCXsmZmRfZWJhZGYsICZzdGF0X2J1ZiwgRUJBREZ9LAorCXsmZmRfb2ssIE5VTEwsIEVG
QVVMVH0sCit9OwogCi1pbnQgbWFpbihpbnQgYWMsIGNoYXIgKiphdikKK3N0YXRpYyB2b2lkIHJ1
bih1bnNpZ25lZCBpbnQgbikKIHsKLQlzdHJ1Y3Qgc3RhdCBzdGF0X2J1ZjsJLyogc3RhdCBzdHJ1
Y3R1cmUgYnVmZmVyICovCi0JaW50IGxjOwotCi0JdHN0X3BhcnNlX29wdHMoYWMsIGF2LCBOVUxM
LCBOVUxMKTsKLQotCS8qCi0JICogSW52b2tlIHNldHVwIGZ1bmN0aW9uIHRvIGNyZWF0ZSBhIHRl
c3RmaWxlIHVuZGVyIHRlbXBvcmFyeQotCSAqIGRpcmVjdG9yeS4KLQkgKi8KLQlzZXR1cCgpOwot
Ci0JZm9yIChsYyA9IDA7IFRFU1RfTE9PUElORyhsYyk7IGxjKyspIHsKLQotCQl0c3RfY291bnQg
PSAwOwotCQkvKgotCQkgKiBDYWxsIGZzdGF0KDIpIHRvIGdldCB0aGUgc3RhdHVzIGluZm9ybWF0
aW9uCi0JCSAqIG9mIGEgY2xvc2VkIHRlc3RmaWxlIHBvaW50ZWQgdG8gYnkgJ2ZkJy4KLQkJICog
dmVyaWZ5IHRoYXQgZnN0YXQgZmFpbHMgd2l0aCAtMSByZXR1cm4gdmFsdWUgYW5kCi0JCSAqIHNl
dHMgYXBwcm9wcmlhdGUgZXJybm8uCi0JCSAqLwotCQlURVNUKGZzdGF0KGZpbGRlcywgJnN0YXRf
YnVmKSk7Ci0KLQkJLyogQ2hlY2sgcmV0dXJuIGNvZGUgZnJvbSBmc3RhdCgyKSAqLwotCQlpZiAo
VEVTVF9SRVRVUk4gPT0gLTEpIHsKLQkJCWlmIChURVNUX0VSUk5PID09IEVCQURGKSB7Ci0JCQkJ
dHN0X3Jlc20oVFBBU1MsCi0JCQkJCSAiZnN0YXQoKSBmYWlscyB3aXRoIGV4cGVjdGVkIGVycm9y
IEVCQURGIik7Ci0JCQl9IGVsc2UgewotCQkJCXRzdF9yZXNtKFRGQUlMIHwgVFRFUlJOTywKLQkJ
CQkJICJmc3RhdCgpIGRpZCBub3QgZmFpbCB3aXRoIEVCQURGIik7Ci0JCQl9CisJc3RydWN0IHRj
YXNlICp0YyA9ICZ0Y2FzZXNbbl07CisKKwlURVNUKHRzdF9mc3RhdCgqdGMtPmZkLCB0Yy0+c3Rh
dF9idWYpKTsKKwlpZiAoVFNUX1JFVCA9PSAtMSkgeworCQlpZiAodGMtPmV4cF9lcnIgPT0gVFNU
X0VSUikgeworCQkJdHN0X3JlcyhUUEFTUywKKwkJCQkgImZzdGF0KCkgZmFpbHMgd2l0aCBleHBl
Y3RlZCBlcnJvciAlcyIsCisJCQkJIHRzdF9zdHJlcnJubyh0Yy0+ZXhwX2VycikpOwogCQl9IGVs
c2UgewotCQkJdHN0X3Jlc20oVEZBSUwsICJmc3RhdCgpIHJldHVybmVkICVsZCwgZXhwZWN0ZWQg
LTEiLAotCQkJCSBURVNUX1JFVFVSTik7CisJCQl0c3RfcmVzKFRGQUlMIHwgVFRFUlJOTywKKwkJ
CQkgImZzdGF0KCkgZGlkIG5vdCBmYWlsIHdpdGggJXMsIGJ1dCB3aXRoIiwKKwkJCQkgdHN0X3N0
cmVycm5vKHRjLT5leHBfZXJyKSk7CiAJCX0KLQl9Ci0KLQkvKgotCSAqIEludm9rZSBjbGVhbnVw
KCkgdG8gZGVsZXRlIHRoZSB0ZXN0IGRpcmVjdG9yeS9maWxlKHMpIGNyZWF0ZWQKLQkgKiBpbiB0
aGUgc2V0dXAoKS4KLQkgKi8KLQljbGVhbnVwKCk7Ci0KLQl0c3RfZXhpdCgpOworCX0gZWxzZQor
CQl0c3RfcmVzKFRGQUlMLCAiZnN0YXQoKSByZXR1cm5lZCAlbGQsIGV4cGVjdGVkIC0xIiwKKwkJ
CSBUU1RfUkVUKTsKIH0KIAotLyoKLSAqIHZvaWQKLSAqIHNldHVwKHZvaWQpIC0gcGVyZm9ybXMg
YWxsIE9ORSBUSU1FIHNldHVwIGZvciB0aGlzIHRlc3QuCi0gKglFeGl0IHRoZSB0ZXN0IHByb2dy
YW0gb24gcmVjZWlwdCBvZiB1bmV4cGVjdGVkIHNpZ25hbHMuCi0gKglDcmVhdGUgYSB0ZW1wb3Jh
cnkgZGlyZWN0b3J5IGFuZCBjaGFuZ2UgZGlyZWN0b3J5IHRvIGl0LgotICogICAgICBDcmVhdGUg
YSB0ZXN0ZmlsZSB1bmRlciB0ZW1wb3JhcnkgZGlyZWN0b3J5LgotICogICAgICBDbG9zZSB0aGUg
dGVzdGZpbGUuCi0gKi8KLXZvaWQgc2V0dXAodm9pZCkKK3N0YXRpYyB2b2lkIHNldHVwKHZvaWQp
CiB7Ci0JLyogQ2FwdHVyZSB1bmV4cGVjdGVkIHNpZ25hbHMgKi8KLQl0c3Rfc2lnKE5PRk9SSywg
REVGX0hBTkRMRVIsIGNsZWFudXApOwotCi0JVEVTVF9QQVVTRTsKKwlzeXNjYWxsX2luZm8oKTsK
IAotCS8qIE1ha2UgYSB0ZW1wIGRpciBhbmQgY2QgdG8gaXQgKi8KLQl0c3RfdG1wZGlyKCk7Ci0K
LQkvKiBDcmVhdGUgYSB0ZXN0ZmlsZSB1bmRlciB0ZW1wb3JhcnkgZGlyZWN0b3J5ICovCi0JZmls
ZGVzID0gU0FGRV9PUEVOKGNsZWFudXAsIFRFU1RfRklMRSwgT19SRFdSIHwgT19DUkVBVCwgMDY2
Nik7Ci0KLQlTQUZFX0NMT1NFKGNsZWFudXAsIGZpbGRlcyk7CisJZmRfZWJhZGYgPSBTQUZFX09Q
RU4oVEVTVEZJTEUsIE9fUkRXUiB8IE9fQ1JFQVQsIDA2NDQpOworCVNBRkVfQ0xPU0UoZmRfZWJh
ZGYpOworCWZkX29rID0gU0FGRV9PUEVOKFRFU1RGSUxFLCBPX1JEV1IgfCBPX0NSRUFULCAwNjQ0
KTsKIH0KIAotLyoKLSAqIHZvaWQKLSAqIGNsZWFudXAoKSAtIFBlcmZvcm1zIGFsbCBPTkUgVElN
RSBjbGVhbnVwIGZvciB0aGlzIHRlc3QgYXQKLSAqICAgICAgICAgICAgIGNvbXBsZXRpb24gb3Ig
cHJlbWF0dXJlIGV4aXQuCi0gKglQcmludCB0ZXN0IHRpbWluZyBzdGF0cyBhbmQgZXJybm8gbG9n
IGlmIHRlc3QgZXhlY3V0ZWQgd2l0aCBvcHRpb25zLgotICoJQ2xvc2UgdGhlIHRlc3RmaWxlIGlm
IHN0aWxsIG9wZW5lZC4KLSAqCVJlbW92ZSB0ZW1wb3JhcnkgZGlyZWN0b3J5IGFuZCBzdWItZGly
ZWN0b3JpZXMvZmlsZXMgdW5kZXIgaXQKLSAqCWNyZWF0ZWQgZHVyaW5nIHNldHVwKCkuCi0gKglF
eGl0IHRoZSB0ZXN0IHByb2dyYW0gd2l0aCBub3JtYWwgZXhpdCBjb2RlLgotICovCi12b2lkIGNs
ZWFudXAodm9pZCkKK3N0YXRpYyB2b2lkIGNsZWFudXAodm9pZCkKIHsKLQotCXRzdF9ybWRpcigp
OwotCisJaWYgKGZkX2ViYWRmID4gMCkKKwkJU0FGRV9DTE9TRShmZF9lYmFkZik7CisJaWYgKGZk
X29rID4gMCkKKwkJU0FGRV9DTE9TRShmZF9vayk7CiB9CisKK3N0YXRpYyBzdHJ1Y3QgdHN0X3Rl
c3QgdGVzdCA9IHsKKwkudGVzdCA9IHJ1biwKKwkudGNudCA9IEFSUkFZX1NJWkUodGNhc2VzKSwK
KwkudGVzdF92YXJpYW50cyA9IFRFU1RfVkFSSUFOVFMsCisJLnNldHVwID0gc2V0dXAsCisJLmNs
ZWFudXAgPSBjbGVhbnVwLAorCS5uZWVkc190bXBkaXIgPSAxLAorfTsKZGlmZiAtLWdpdCBhL3Rl
c3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvZnN0YXQvZnN0YXQwNS5jIGIvdGVzdGNhc2VzL2tlcm5l
bC9zeXNjYWxscy9mc3RhdC9mc3RhdDA1LmMKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4
IDIwMGRlNDEzMC4uMDAwMDAwMDAwCi0tLSBhL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvZnN0
YXQvZnN0YXQwNS5jCisrKyAvZGV2L251bGwKQEAgLTEsMjQ0ICswLDAgQEAKLS8qCi0gKgotICog
ICBDb3B5cmlnaHQgKEMpIEJ1bGwgUy5BLiAyMDAxCi0gKiAgIENvcHlyaWdodCAoYykgSW50ZXJu
YXRpb25hbCBCdXNpbmVzcyBNYWNoaW5lcyAgQ29ycC4sIDIwMDEKLSAqCi0gKiAgIFRoaXMgcHJv
Z3JhbSBpcyBmcmVlIHNvZnR3YXJlOyAgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1v
ZGlmeQotICogICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBM
aWNlbnNlIGFzIHB1Ymxpc2hlZCBieQotICogICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9u
OyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcgotICogICAoYXQgeW91ciBvcHRp
b24pIGFueSBsYXRlciB2ZXJzaW9uLgotICoKLSAqICAgVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1
dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCi0gKiAgIGJ1dCBXSVRIT1VU
IEFOWSBXQVJSQU5UWTsgIHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgotICog
ICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBT
ZWUKLSAqICAgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMu
Ci0gKgotICogICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2Vu
ZXJhbCBQdWJsaWMgTGljZW5zZQotICogICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbTsgIGlmIG5v
dCwgd3JpdGUgdG8gdGhlIEZyZWUgU29mdHdhcmUKLSAqICAgRm91bmRhdGlvbiwgSW5jLiwgNTEg
RnJhbmtsaW4gU3RyZWV0LCBGaWZ0aCBGbG9vciwgQm9zdG9uLCBNQSAwMjExMC0xMzAxIFVTQQot
ICovCi0KLS8qCi0gKiBUZXN0IE5hbWU6IGZzdGF0MDUKLSAqCi0gKiBUZXN0IERlc2NyaXB0aW9u
OgotICogICBWZXJpZnkgdGhhdCwKLSAqICAgaWYgYnVmZmVyIHBvaW50cyBvdXRzaWRlIHVzZXIn
cyBhY2Nlc3NpYmxlIGFkZHJlc3Mgc3BhY2UgZnN0YXQoMikKLSAqCWVpdGhlciByZXR1cm5zIC0x
IGFuZCBzZXRzIGVycm5vIHRvIEVGQVVMVAotICoJb3IgU0lHU0VHViBpcyByZXR1cm5lZCBpbnN0
ZWFkIG9mIEVGQVVMVAotICoKLSAqIEV4cGVjdGVkIFJlc3VsdDoKLSAqICAgZnN0YXQoKSBzaG91
bGQgZmFpbCB3aXRoIHJldHVybiB2YWx1ZSAtMSBhbmQgc2V0IGV4cGVjdGVkIGVycm5vLgotICog
ICAgb3IKLSAqICAgZnN0YXQoKSBzaG91bGQgZmFpbCB3aXRoIFNJR1NFR1YgcmV0dXJuZWQuCi0g
KiAgIEJvdGggcmVzdWx0cyBhcmUgY29uc2lkZXJlZCBhcyBhY2NlcHRhYmxlLgotICoKLSAqIEFs
Z29yaXRobToKLSAqICBTZXR1cDoKLSAqICAgU2V0dXAgc2lnbmFsIGhhbmRsaW5nIFNJR1NFR1Yg
aW5jbHVkZWQuCi0gKiAgIFN3aXRjaCB0byBub2JvZHkgdXNlci4KLSAqICAgUGF1c2UgZm9yIFNJ
R1VTUjEgaWYgb3B0aW9uIHNwZWNpZmllZC4KLSAqICAgQ3JlYXRlIHRlbXBvcmFyeSBkaXJlY3Rv
cnkuCi0gKiAgIENyZWF0ZSBhIHRlc3RmaWxlIHVuZGVyIHRlbXBvcmFyeSBkaXJlY3RvcnkuCi0g
KgotICogIFRlc3Q6Ci0gKiAgIEJ1ZmZlciBwb2ludHMgb3V0c2lkZSB1c2VyJ3MgYWNjZXNzaWJs
ZSBhZGRyZXNzIHNwYWNlLgotICogICBMb29wIGlmIHRoZSBwcm9wZXIgb3B0aW9ucyBhcmUgZ2l2
ZW4uCi0gKiAgIEV4ZWN1dGUgc3lzdGVtIGNhbGwKLSAqICAgQ2hlY2sgcmV0dXJuIGNvZGUsIGlm
IHN5c3RlbSBjYWxsIGZhaWxlZCAocmV0dXJuPS0xKQotICoJaWYgZXJybm8gc2V0ID09IGV4cGVj
dGVkIGVycm5vCi0gKgkJSXNzdWUgc3lzIGNhbGwgZmFpbHMgd2l0aCBleHBlY3RlZCByZXR1cm4g
dmFsdWUgYW5kIGVycm5vLgotICoJT3RoZXJ3aXNlLAotICoJCUlzc3VlIHN5cyBjYWxsIGZhaWxz
IHdpdGggdW5leHBlY3RlZCBlcnJuby4KLSAqICAgT3RoZXJ3aXNlLAotICoJSXNzdWUgc3lzIGNh
bGwgcmV0dXJucyB1bmV4cGVjdGVkIHZhbHVlLgotICoKLSAqICBTaWdoYW5kbGVyOgotICoJaWYg
c2lnbmFsID09IFNJR1NFR1YKLSAqCQlJc3N1ZSBzeXMgY2FsbCBmYWlscyB3aXRoIGV4cGVjdGVk
IHNpZ25hbAotICogICAgICBPdGhlcndpc2UsCi0gKiAgICAgICAgICAgICAgSXNzdWUgc3lzIGNh
bGwgZmFpbHMgd2l0aCB1bmV4cGVjdGVkIHNpZ25hbC4KLSAqCi0gKiAgQ2xlYW51cDoKLSAqICAg
UHJpbnQgZXJybm8gbG9nIGFuZC9vciB0aW1pbmcgc3RhdHMgaWYgb3B0aW9ucyBnaXZlbgotICog
ICBDbG9zZSB0aGUgdGVzdCBmaWxlCi0gKiAgIERlbGV0ZSB0aGUgdGVtcG9yYXJ5IGRpcmVjdG9y
eShzKS9maWxlKHMpIGNyZWF0ZWQuCi0gKgotICogVXNhZ2U6ICA8Zm9yIGNvbW1hbmQtbGluZT4K
LSAqICBmc3RhdDA1IFstYyBuXSBbLWVdIFstaSBuXSBbLUkgeF0gWy1wIHhdIFstdF0KLSAqCXdo
ZXJlLCAgLWMgbiA6IFJ1biBuIGNvcGllcyBjb25jdXJyZW50bHkuCi0gKgkJLWUgICA6IFR1cm4g
b24gZXJybm8gbG9nZ2luZy4KLSAqCQktaSBuIDogRXhlY3V0ZSB0ZXN0IG4gdGltZXMuCi0gKgkJ
LUkgeCA6IEV4ZWN1dGUgdGVzdCBmb3IgeCBzZWNvbmRzLgotICoJCS1QIHggOiBQYXVzZSBmb3Ig
eCBzZWNvbmRzIGJldHdlZW4gaXRlcmF0aW9ucy4KLSAqCQktdCAgIDogVHVybiBvbiBzeXNjYWxs
IHRpbWluZy4KLSAqCi0gKiBIaXN0b3J5Ci0gKgkwNS8yMDAyIEphY2t5IE1hbGNsZXMKLSAqCQkt
UG9ydGVkCi0gKgotICogUmVzdHJpY3Rpb25zOgotICogICAgICBUaGlzIHRlc3QgbXVzdCBiZSBy
dW4gYXMgcm9vdC4KLSAqLwotCi0jaW5jbHVkZSA8c3RkaW8uaD4KLSNpbmNsdWRlIDxzdGRsaWIu
aD4KLSNpbmNsdWRlIDx1bmlzdGQuaD4KLSNpbmNsdWRlIDxmY250bC5oPgotI2luY2x1ZGUgPGVy
cm5vLmg+Ci0jaW5jbHVkZSA8c3RyaW5nLmg+Ci0jaW5jbHVkZSA8c2lnbmFsLmg+Ci0jaW5jbHVk
ZSA8c3lzL3R5cGVzLmg+Ci0jaW5jbHVkZSA8c3lzL3N0YXQuaD4KLSNpbmNsdWRlIDxwd2QuaD4K
LQotI2luY2x1ZGUgInRlc3QuaCIKLSNpbmNsdWRlICJzYWZlX21hY3Jvcy5oIgotCi0jZGVmaW5l
IFRFU1RfRklMRSAgICAgICAidGVzdGZpbGUiCi0KLWNoYXIgbm9ib2R5X3VpZFtdID0gIm5vYm9k
eSI7Ci1zdHJ1Y3QgcGFzc3dkICpsdHB1c2VyOwotCi1jaGFyICpUQ0lEID0gImZzdGF0MDUiOwot
aW50IFRTVF9UT1RBTCA9IDE7Ci0KLWludCBmaWxkZXM7CQkJLyogdGVzdGZpbGUgZGVzY3JpcHRv
ciAqLwotCi12b2lkIHNldHVwKCk7CQkJLyogTWFpbiBzZXR1cCBmdW5jdGlvbiBmb3IgdGhlIHRl
c3RzICovCi12b2lkIGNsZWFudXAoKTsJCQkvKiBjbGVhbnVwIGZ1bmN0aW9uIGZvciB0aGUgdGVz
dCAqLwotdm9pZCBzaWdoYW5kbGVyKGludCBzaWcpOwkvKiBzaWduYWxzIGhhbmRsZXIgZnVuY3Rp
b24gZm9yIHRoZSB0ZXN0ICovCi0KLWludCBzaWdsaXN0W10gPSB7IFNJR0hVUCwgU0lHSU5ULCBT
SUdRVUlULCBTSUdJTEwsIFNJR1RSQVAsIFNJR0FCUlQsIFNJR0lPVCwKLQlTSUdCVVMsIFNJR0ZQ
RSwgU0lHVVNSMSwgU0lHU0VHViwgU0lHVVNSMiwgU0lHUElQRSwgU0lHQUxSTSwKLQlTSUdURVJN
LAotI2lmZGVmIFNJR1NUS0ZMVAotCVNJR1NUS0ZMVCwKLSNlbmRpZgotCVNJR0NITEQsIFNJR0NP
TlQsIFNJR1RTVFAsIFNJR1RUSU4sCi0JU0lHVFRPVSwgU0lHVVJHLCBTSUdYQ1BVLCBTSUdYRlNa
LCBTSUdWVEFMUk0sIFNJR1BST0YsCi0JU0lHV0lOQ0gsIFNJR0lPLCBTSUdQV1IsIFNJR1NZUywK
LSNpZmRlZiBTSUdVTlVTRUQKLQlTSUdVTlVTRUQKLSNlbmRpZgotfTsKLQotaW50IFNJR19TRUVO
ID0gc2l6ZW9mKHNpZ2xpc3QpIC8gc2l6ZW9mKGludCk7Ci0KLSNpZiAhZGVmaW5lZChVQ0xJTlVY
KQotCi1pbnQgbWFpbihpbnQgYWMsIGNoYXIgKiphdikKLXsKLQlzdHJ1Y3Qgc3RhdCAqcHRyX3N0
ciA9IHRzdF9nZXRfYmFkX2FkZHIoTlVMTCk7Ci0JaW50IGxjOwotCi0JdHN0X3BhcnNlX29wdHMo
YWMsIGF2LCBOVUxMLCBOVUxMKTsKLQotCS8qCi0JICogSW52b2tlIHNldHVwIGZ1bmN0aW9uCi0J
ICovCi0Jc2V0dXAoKTsKLQotCWZvciAobGMgPSAwOyBURVNUX0xPT1BJTkcobGMpOyBsYysrKSB7
Ci0KLQkJdHN0X2NvdW50ID0gMDsKLQotCQkvKgotCQkgKiBDYWxsIGZzdGF0KDIpLgotCQkgKiB2
ZXJpZnkgdGhhdCBpdCBmYWlscyB3aXRoIC0xIHJldHVybiB2YWx1ZSBhbmQKLQkJICogc2V0cyBh
cHByb3ByaWF0ZSBlcnJuby4KLQkJICovCi0JCVRFU1QoZnN0YXQoZmlsZGVzLCBwdHJfc3RyKSk7
Ci0KLQkJLyogQ2hlY2sgcmV0dXJuIGNvZGUgZnJvbSBmc3RhdCgyKSAqLwotCQlpZiAoVEVTVF9S
RVRVUk4gPT0gLTEpIHsKLQkJCWlmIChURVNUX0VSUk5PID09IEVGQVVMVCkKLQkJCQl0c3RfcmVz
bShUUEFTUywKLQkJCQkJICJmc3RhdCBmYWlsZWQgd2l0aCBFRkFVTFQgYXMgZXhwZWN0ZWQiKTsK
LQkJCWVsc2UKLQkJCQl0c3RfcmVzbShURkFJTCB8IFRURVJSTk8sCi0JCQkJCSAiZnN0YXQgZmFp
bGVkIHVuZXhwZWN0ZWRseSIpOwotCQl9IGVsc2UKLQkJCXRzdF9yZXNtKFRGQUlMLCAiZnN0YXQo
KSByZXR1cm5lZCAlbGQgYnV0IHdlIHdhbnRlZCAtMSIsCi0JCQkJIFRFU1RfUkVUVVJOKTsKLQot
CX0KLQotCS8qCi0JICogSW52b2tlIGNsZWFudXAoKSB0byBkZWxldGUgdGhlIHRlc3QgZGlyZWN0
b3J5L2ZpbGUocykgY3JlYXRlZAotCSAqIGluIHRoZSBzZXR1cCgpLgotCSAqLwotCWNsZWFudXAo
KTsKLQl0c3RfZXhpdCgpOwotfQotCi0jZWxzZQotCi1pbnQgbWFpbih2b2lkKQotewotCXRzdF9i
cmttKFRDT05GLCBOVUxMLCAidGVzdCBpcyBub3QgYXZhaWxhYmxlIG9uIHVDbGludXgiKTsKLX0K
LQotI2VuZGlmIC8qIGlmICFkZWZpbmVkKFVDTElOVVgpICovCi0KLS8qCi0gKiB2b2lkCi0gKiBz
ZXR1cCh2b2lkKSAtIHBlcmZvcm1zIGFsbCBPTkUgVElNRSBzZXR1cCBmb3IgdGhpcyB0ZXN0Lgot
ICoJRXhpdCB0aGUgdGVzdCBwcm9ncmFtIG9uIHJlY2VpcHQgb2YgdW5leHBlY3RlZCBzaWduYWxz
LgotICoJQ3JlYXRlIGEgdGVtcG9yYXJ5IGRpcmVjdG9yeSBhbmQgY2hhbmdlIGRpcmVjdG9yeSB0
byBpdC4KLSAqLwotdm9pZCBzZXR1cCh2b2lkKQotewotCWludCBpOwotCi0JdHN0X3JlcXVpcmVf
cm9vdCgpOwotCi0JLyoKLQkgKiBDYXB0dXJlIHVuZXhwZWN0ZWQgc2lnbmFscyBTSUdTRUdWIGlu
Y2x1ZGVkCi0JICogU0lHU0VHViBiZWluZyBjb25zaWRlcmVkIGFzIGFjY2VwdGFibGUgYXMgcmV0
dXJuZWQgdmFsdWUKLQkgKi8KLQlmb3IgKGkgPSAwOyBpIDwgU0lHX1NFRU47IGkrKykKLQkJc2ln
bmFsKHNpZ2xpc3RbaV0sICZzaWdoYW5kbGVyKTsKLQotCWx0cHVzZXIgPSBnZXRwd25hbShub2Jv
ZHlfdWlkKTsKLQlTQUZFX1NFVFVJRChOVUxMLCBsdHB1c2VyLT5wd191aWQpOwotCi0JdHN0X3Rt
cGRpcigpOwotCi0JLyogQ3JlYXRlIGEgdGVzdGZpbGUgdW5kZXIgdGVtcG9yYXJ5IGRpcmVjdG9y
eSAqLwotCWZpbGRlcyA9IFNBRkVfT1BFTihjbGVhbnVwLCBURVNUX0ZJTEUsIE9fUkRXUiB8IE9f
Q1JFQVQsIDA2NjYpOwotCi0JVEVTVF9QQVVTRTsKLX0KLQotLyoKLSAqIHZvaWQKLSAqIGNsZWFu
dXAoKSAtIFBlcmZvcm1zIGFsbCBPTkUgVElNRSBjbGVhbnVwIGZvciB0aGlzIHRlc3QgYXQKLSAq
ICAgICAgICAgICAgIGNvbXBsZXRpb24gb3IgcHJlbWF0dXJlIGV4aXQuCi0gKglQcmludCB0ZXN0
IHRpbWluZyBzdGF0cyBhbmQgZXJybm8gbG9nIGlmIHRlc3QgZXhlY3V0ZWQgd2l0aCBvcHRpb25z
LgotICoJUmVtb3ZlIHRlbXBvcmFyeSBkaXJlY3RvcnkgYW5kIHN1Yi1kaXJlY3Rvcmllcy9maWxl
cyB1bmRlciBpdAotICoJY3JlYXRlZCBkdXJpbmcgc2V0dXAoKS4KLSAqCUV4aXQgdGhlIHRlc3Qg
cHJvZ3JhbSB3aXRoIG5vcm1hbCBleGl0IGNvZGUuCi0gKi8KLXZvaWQgY2xlYW51cCh2b2lkKQot
ewotCi0JU0FGRV9DTE9TRShjbGVhbnVwLCBmaWxkZXMpOwotCi0JdHN0X3JtZGlyKCk7Ci0KLX0K
LQotLyoKLSAqIHNpZ2hhbmRsZXIoKSAtIGhhbmRsZSB0aGUgc2lnbmFscwotICovCi0KLXZvaWQg
c2lnaGFuZGxlcihpbnQgc2lnKQotewotCWlmIChzaWcgPT0gU0lHU0VHVikKLQkJdHN0X3Jlc20o
VFBBU1MsICJmc3RhdCBmYWlsZWQgYXMgZXhwZWN0ZWQgd2l0aCBTSUdTRUdWIik7Ci0JZWxzZQot
CQl0c3RfYnJrbShUQlJPSywgTlVMTCwgIlVuZXhwZWN0ZWQgc2lnbmFsICVkIHJlY2VpdmVkLiIs
IHNpZyk7Ci0JY2xlYW51cCgpOwotCXRzdF9leGl0KCk7Ci19Ci0tIAoyLjE2LjQKCgotLSAKTWFp
bGluZyBsaXN0IGluZm86IGh0dHBzOi8vbGlzdHMubGludXguaXQvbGlzdGluZm8vbHRwCg==
