Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [213.254.12.146])
	by mail.lfdr.de (Postfix) with ESMTPS id 28E4C1A305
	for <lists+linux-ltp@lfdr.de>; Fri, 10 May 2019 20:32:02 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id CF9A53EA25F
	for <lists+linux-ltp@lfdr.de>; Fri, 10 May 2019 20:31:59 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-4.smtp.seeweb.it (in-4.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::4])
 by picard.linux.it (Postfix) with ESMTP id AE3733EA20C
 for <ltp@lists.linux.it>; Fri, 10 May 2019 20:31:44 +0200 (CEST)
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by in-4.smtp.seeweb.it (Postfix) with ESMTPS id 9B1531000D49
 for <ltp@lists.linux.it>; Fri, 10 May 2019 20:31:40 +0200 (CEST)
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 2A128AEFE;
 Fri, 10 May 2019 18:31:43 +0000 (UTC)
From: Petr Vorel <pvorel@suse.cz>
To: ltp@lists.linux.it
Date: Fri, 10 May 2019 20:31:30 +0200
Message-Id: <20190510183132.31039-5-pvorel@suse.cz>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190510183132.31039-1-pvorel@suse.cz>
References: <20190510183132.31039-1-pvorel@suse.cz>
MIME-Version: 1.0
X-Virus-Scanned: clamav-milter 0.99.2 at in-4.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=-0.0 required=7.0 tests=SPF_PASS autolearn=disabled
 version=3.4.0
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on in-4.smtp.seeweb.it
Subject: [LTP] [RFC PATCH v2 4/6] tst_net.sh: Minor code and doc cleanup
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

KiBtYWtpbmcgT1BUSU5EIGxvY2FsIGluc3RlYWQgb2Ygc2V0dGluZyBpdCAwIGJlZm9yZSBhbmQg
YWZ0ZXIgdGVzdAoqIHJlbW92ZSAnPScgZHVyaW5nIHZhcmlhYmxlIGluaXRpYWxpemF0aW9uIHRv
IGVtcHR5IHZhbHVlCiogZGVjbGFyZSB2YXJpYWJsZXMgd2l0aCBsb2NhbCBvbiBzaW5nbGUgbGlu
ZSAodGhlcmUgc29tZSBpc3N1ZXMgd2l0aAogIGRhc2ggd2hlbiBpbml0aWFsaXplIG1vcmUgdmFy
aWFibGVzIHdpdGggZGVmYXVsdCB2YWx1ZXMgb24gc2luZ2xlIGxvY2FsLAogIGJ1dCBzaW1wbGUg
ZGVjbGFyYXRpb24gaXMgcGVyZmVjdGx5IHNhZmUKKiBkb2M6IHJlbW92ZSBkb3RzCgpTaWduZWQt
b2ZmLWJ5OiBQZXRyIFZvcmVsIDxwdm9yZWxAc3VzZS5jej4KLS0tCmNsZWFudXAgb2YgdHN0X25l
dC5zaCAobmV3IGNvbW1pdCwgdGhpcyBjYW4gYmUgZHJvcHBlZCkuCgogdGVzdGNhc2VzL2xpYi90
c3RfbmV0LnNoIHwgMTA5ICsrKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQog
MSBmaWxlIGNoYW5nZWQsIDQ0IGluc2VydGlvbnMoKyksIDY1IGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL3Rlc3RjYXNlcy9saWIvdHN0X25ldC5zaCBiL3Rlc3RjYXNlcy9saWIvdHN0X25ldC5z
aAppbmRleCBmYjhjNDk0NTkuLjhkYmQxN2ViMiAxMDA2NDQKLS0tIGEvdGVzdGNhc2VzL2xpYi90
c3RfbmV0LnNoCisrKyBiL3Rlc3RjYXNlcy9saWIvdHN0X25ldC5zaApAQCAtMTA3LDcgKzEwNyw3
IEBAIGluaXRfbHRwX25ldHNwYWNlKCkKIAl0c3RfdGVzdF9jbWRzIGlwCiAJdHN0X3JlcXVpcmVf
cm9vdF8KIAotCWxvY2FsIHBpZD0KKwlsb2NhbCBwaWQKIAogCWlmIFsgISAtZiAvdmFyL3J1bi9u
ZXRucy9sdHBfbnMgLWEgLXogIiRMVFBfTkVUTlMiIF07IHRoZW4KIAkJUk9EIGlwIGxpIGFkZCBu
YW1lIGx0cF9uc192ZXRoMSB0eXBlIHZldGggcGVlciBuYW1lIGx0cF9uc192ZXRoMgpAQCAtMTM0
LDcgKzEzNCw3IEBAIGluaXRfbHRwX25ldHNwYWNlKCkKIAl0c3RfcmVzdG9yZV9pcGFkZHIgcmhv
c3QKIH0KIAotIyBSdW4gY29tbWFuZCBvbiByZW1vdGUgaG9zdC4KKyMgUnVuIGNvbW1hbmQgb24g
cmVtb3RlIGhvc3QKICMgT3B0aW9uczoKICMgLWIgcnVuIGluIGJhY2tncm91bmQKICMgLUIgcnVu
IGluIGJhY2tncm91bmQgYW5kIHNhdmUgb3V0cHV0IHRvICRUU1RfVE1QRElSL2JnLmNtZApAQCAt
MTQzLDE2ICsxNDMsMTIgQEAgaW5pdF9sdHBfbmV0c3BhY2UoKQogIyBSRVRVUk46IDAgb24gc3Vj
Y2VzcywgMSBvbiBmYWlsdXJlCiB0c3Rfcmhvc3RfcnVuKCkKIHsKLQlsb2NhbCBwcmVfY21kPQog
CWxvY2FsIHBvc3RfY21kPScgfHwgZWNobyBSVEVSUicKLQlsb2NhbCBvdXQ9CiAJbG9jYWwgdXNl
cj0icm9vdCIKLQlsb2NhbCBjbWQ9Ci0JbG9jYWwgc2FmZT0wCi0JbG9jYWwgYmc9Ci0KLQlPUFRJ
TkQ9MAorCWxvY2FsIHJldD0wCisJbG9jYWwgYmcgY21kIG91dCBvdXRwdXQgcHJlX2NtZCBzYWZl
CiAKKwlsb2NhbCBPUFRJTkQKIAl3aGlsZSBnZXRvcHRzIDpiQnNjOnU6IG9wdDsgZG8KIAkJY2Fz
ZSAiJG9wdCIgaW4KIAkJYnxCKSBbICIkVFNUX1VTRV9ORVROUyIgXSAmJiBwcmVfY21kPSB8fCBw
cmVfY21kPSJub2h1cCIKQEAgLTE2NywxNyArMTYzLDEzIEBAIHRzdF9yaG9zdF9ydW4oKQogCQll
c2FjCiAJZG9uZQogCi0JT1BUSU5EPTAKLQogCWlmIFsgLXogIiRjbWQiIF07IHRoZW4KLQkJWyAi
JHNhZmUiIC1lcSAxIF0gJiYgXAorCQlbICIkc2FmZSIgPSAxIF0gJiYgXAogCQkJdHN0X2Jya18g
VEJST0sgInRzdF9yaG9zdF9ydW46IGNvbW1hbmQgbm90IGRlZmluZWQiCiAJCXRzdF9yZXNfIFRX
QVJOICJ0c3Rfcmhvc3RfcnVuOiBjb21tYW5kIG5vdCBkZWZpbmVkIgogCQlyZXR1cm4gMQogCWZp
CiAKLQlsb2NhbCBvdXRwdXQ9Ci0JbG9jYWwgcmV0PTAKIAlpZiBbIC1uICIke1RTVF9VU0VfU1NI
Oi19IiBdOyB0aGVuCiAJCW91dHB1dD1gc3NoIC1uIC1xICR1c2VyQCRSSE9TVCAic2ggLWMgXAog
CQkJJyRwcmVfY21kICRjbWQgJHBvc3RfY21kJyIgJG91dCAyPiYxIHx8IGVjaG8gJ1JURVJSJ2AK
QEAgLTE5MSw3ICsxODMsNyBAQCB0c3Rfcmhvc3RfcnVuKCkKIAllY2hvICIkb3V0cHV0IiB8IGdy
ZXAgLXEgJ1JURVJSJCcgJiYgcmV0PTEKIAlpZiBbICRyZXQgLWVxIDEgXTsgdGhlbgogCQlvdXRw
dXQ9JChlY2hvICIkb3V0cHV0IiB8IHNlZCAncy9SVEVSUi8vJykKLQkJWyAiJHNhZmUiIC1lcSAx
IF0gJiYgXAorCQlbICIkc2FmZSIgPSAxIF0gJiYgXAogCQkJdHN0X2Jya18gVEJST0sgIickY21k
JyBmYWlsZWQgb24gJyRSSE9TVCc6ICckb3V0cHV0JyIKIAlmaQogCkBAIC0yMDAsOCArMTkyLDgg
QEAgdHN0X3Job3N0X3J1bigpCiAJcmV0dXJuICRyZXQKIH0KIAotIyBSdW4gY29tbWFuZCBvbiBi
b3RoIGxob3N0IGFuZCByaG9zdC4KLSMgdHN0X25ldF9ydW4gWy1zXSBbLWwgTFBBUkFNXSBbLXIg
UlBBUkFNXSBbIC1xIF0gQ01EIFtBUkcgW0FSRzJdXQorIyBSdW4gY29tbWFuZCBvbiBib3RoIGxo
b3N0IGFuZCByaG9zdAorIyB0c3RfbmV0X3J1biBbLXNdIFstbCBMUEFSQU1dIFstciBSUEFSQU1d
IFstcV0gQ01EIFtBUkcgW0FSRzJdXQogIyBPcHRpb25zOgogIyAtbCBMUEFSQU06IHBhcmFtZXRl
ciBwYXNzZWQgdG8gQ01EIGluIGxob3N0CiAjIC1yIFJQQVJBTTogcGFyYW1ldGVyIHBhc3NlZCB0
byBDTUQgaW4gcmhvc3QKQEAgLTIxMSwxNCArMjAzLDcgQEAgdHN0X3Job3N0X3J1bigpCiAjIFJF
VFVSTjogMCBvbiBzdWNjZXNzLCAxIG9uIG1pc3NpbmcgQ01EIG9yIGV4aXQgY29kZSBvbiBsaG9z
dCBvciByaG9zdAogdHN0X25ldF9ydW4oKQogewotCWxvY2FsIGNtZAotCWxvY2FsIGxwYXJhbXMK
LQlsb2NhbCBycGFyYW1zCi0JbG9jYWwgbHNhZmUKLQlsb2NhbCByc2FmZQotCWxvY2FsIGxyZXQK
LQlsb2NhbCBycmV0Ci0JbG9jYWwgcXVpZXQKKwlsb2NhbCBjbWQgbHBhcmFtcyBscmV0IGxzYWZl
IHF1aWV0IHJwYXJhbXMgcnJldCByc2FmZQogCiAJbG9jYWwgT1BUSU5ECiAJd2hpbGUgZ2V0b3B0
cyBsOnFyOnMgb3B0OyBkbwpAQCAtMjc1LDkgKzI2MCw5IEBAIEVYUEVDVF9SSE9TVF9GQUlMKCkK
IAlmaQogfQogCi0jIEdldCB0ZXN0IGludGVyZmFjZSBuYW1lcyBmb3IgbG9jYWwvcmVtb3RlIGhv
c3QuCisjIEdldCB0ZXN0IGludGVyZmFjZSBuYW1lcyBmb3IgbG9jYWwvcmVtb3RlIGhvc3QKICMg
dHN0X2dldF9pZmFjZXMgW1RZUEVdCi0jIFRZUEU6IHsgbGhvc3QgfCByaG9zdCB9OyBEZWZhdWx0
IHZhbHVlIGlzICdsaG9zdCcuCisjIFRZUEU6IHsgbGhvc3QgfCByaG9zdCB9LCBkZWZhdWx0IHZh
bHVlIGlzICdsaG9zdCcKIHRzdF9nZXRfaWZhY2VzKCkKIHsKIAlsb2NhbCB0eXBlPSIkezE6LWxo
b3N0fSIKQEAgLTI4OCwxNCArMjczLDEzIEBAIHRzdF9nZXRfaWZhY2VzKCkKIAlmaQogfQogCi0j
IEdldCBIVyBhZGRyZXNzZXMgZnJvbSBkZWZpbmVkIHRlc3QgaW50ZXJmYWNlIG5hbWVzLgorIyBH
ZXQgSFcgYWRkcmVzc2VzIGZyb20gZGVmaW5lZCB0ZXN0IGludGVyZmFjZSBuYW1lcwogIyB0c3Rf
Z2V0X2h3YWRkcnMgW1RZUEVdCi0jIFRZUEU6IHsgbGhvc3QgfCByaG9zdCB9OyBEZWZhdWx0IHZh
bHVlIGlzICdsaG9zdCcuCisjIFRZUEU6IHsgbGhvc3QgfCByaG9zdCB9LCBkZWZhdWx0IHZhbHVl
IGlzICdsaG9zdCcKIHRzdF9nZXRfaHdhZGRycygpCiB7CiAJbG9jYWwgdHlwZT0iJHsxOi1saG9z
dH0iCi0JbG9jYWwgYWRkcj0KLQlsb2NhbCBsaXN0PQorCWxvY2FsIGFkZHIgbGlzdAogCiAJZm9y
IGV0aCBpbiAkKHRzdF9nZXRfaWZhY2VzICR0eXBlKTsgZG8KIApAQCAtMzExLDI2ICsyOTUsMjYg
QEAgdHN0X2dldF9od2FkZHJzKCkKIAllY2hvICIkbGlzdCIKIH0KIAotIyBHZXQgdGVzdCBIVyBh
ZGRyZXNzLgorIyBHZXQgdGVzdCBIVyBhZGRyZXNzCiAjIHRzdF9od2FkZHIgW1RZUEVdIFtMSU5L
XQotIyBUWVBFOiB7IGxob3N0IHwgcmhvc3QgfTsgRGVmYXVsdCB2YWx1ZSBpcyAnbGhvc3QnLgot
IyBMSU5LOiBsaW5rIG51bWJlciBzdGFydGluZyBmcm9tIDAuIERlZmF1bHQgdmFsdWUgaXMgJzAn
LgorIyBUWVBFOiB7IGxob3N0IHwgcmhvc3QgfSwgZGVmYXVsdCB2YWx1ZSBpcyAnbGhvc3QnCisj
IExJTks6IGxpbmsgbnVtYmVyIHN0YXJ0aW5nIGZyb20gMC4gRGVmYXVsdCB2YWx1ZSBpcyAnMCcK
IHRzdF9od2FkZHIoKQogewogCXRzdF90ZXN0X2NtZHMgYXdrCiAKIAlsb2NhbCB0eXBlPSIkezE6
LWxob3N0fSIKIAlsb2NhbCBsaW5rX251bT0iJHsyOi0wfSIKLQlsb2NhbCBod2FkZHJzPQorCWxv
Y2FsIGh3YWRkcnMKIAlsaW5rX251bT0kKCggJGxpbmtfbnVtICsgMSApKQogCVsgIiR0eXBlIiA9
ICJsaG9zdCIgXSAmJiBod2FkZHJzPSRMSE9TVF9IV0FERFJTIHx8IGh3YWRkcnM9JFJIT1NUX0hX
QUREUlMKIAllY2hvICIkaHdhZGRycyIgfCBhd2sgJ3sgcHJpbnQgJCciJGxpbmtfbnVtIicgfScK
IH0KIAotIyBHZXQgdGVzdCBpbnRlcmZhY2UgbmFtZS4KKyMgR2V0IHRlc3QgaW50ZXJmYWNlIG5h
bWUKICMgdHN0X2lmYWNlIFtUWVBFXSBbTElOS10KLSMgVFlQRTogeyBsaG9zdCB8IHJob3N0IH07
IERlZmF1bHQgdmFsdWUgaXMgJ2xob3N0Jy4KLSMgTElOSzogbGluayBudW1iZXIgc3RhcnRpbmcg
ZnJvbSAwLiBEZWZhdWx0IHZhbHVlIGlzICcwJy4KKyMgVFlQRTogeyBsaG9zdCB8IHJob3N0IH0s
IGRlZmF1bHQgdmFsdWUgaXMgJ2xob3N0JworIyBMSU5LOiBsaW5rIG51bWJlciBzdGFydGluZyBm
cm9tIDAsIGRlZmF1bHQgdmFsdWUgaXMgJzAnCiB0c3RfaWZhY2UoKQogewogCXRzdF90ZXN0X2Nt
ZHMgYXdrCkBAIC0zNDMsNyArMzI3LDcgQEAgdHN0X2lmYWNlKCkKIAogIyBHZXQgSVAgYWRkcmVz
cwogIyB0c3RfaXBhZGRyIFtUWVBFXQotIyBUWVBFOiB7IGxob3N0IHwgcmhvc3QgfTsgRGVmYXVs
dCB2YWx1ZSBpcyAnbGhvc3QnLgorIyBUWVBFOiB7IGxob3N0IHwgcmhvc3QgfSwgZGVmYXVsdCB2
YWx1ZSBpcyAnbGhvc3QnCiB0c3RfaXBhZGRyKCkKIHsKIAlsb2NhbCB0eXBlPSIkezE6LWxob3N0
fSIKQEAgLTM1NSwxMyArMzM5LDEzIEBAIHRzdF9pcGFkZHIoKQogfQogCiAjIEdldCBJUCBhZGRy
ZXNzIG9mIHVudXNlZCBuZXR3b3JrLCBzcGVjaWZpZWQgZWl0aGVyIGJ5IHR5cGUgYW5kIGNvdW50
ZXIKLSMgb3IgYnkgbmV0IGFuZCBob3N0LgorIyBvciBieSBuZXQgYW5kIGhvc3QKICMgdHN0X2lw
YWRkcl91biBbLWNDT1VOVEVSXSBbVFlQRV0KICMgdHN0X2lwYWRkcl91biBORVRfSUQgW0hPU1Rf
SURdCi0jIFRZUEU6IHsgbGhvc3QgfCByaG9zdCB9OyBEZWZhdWx0IHZhbHVlIGlzICdsaG9zdCcu
Ci0jIENPVU5URVI6IEludGVnZXIgdmFsdWUgZm9yIGNvdW50aW5nIEhPU1RfSUQgYW5kIE5FVF9J
RC4gRGVmYXVsdCBpcyAxLgorIyBUWVBFOiB7IGxob3N0IHwgcmhvc3QgfSwgZGVmYXVsdCB2YWx1
ZSBpcyAnbGhvc3QnCisjIENPVU5URVI6IEludGVnZXIgdmFsdWUgZm9yIGNvdW50aW5nIEhPU1Rf
SUQgYW5kIE5FVF9JRCwgZGVmYXVsdCBpcyAxCiAjIE5FVF9JRDogSW50ZWdlciBvciBoZXggdmFs
dWUgb2YgbmV0LiBGb3IgSVB2NCBpcyAzcmQgb2N0ZXQsIGZvciBJUHY2Ci0jIGlzIDNyZCBoZXh0
ZXQuCisjIGlzIDNyZCBoZXh0ZXQKICMgSE9TVF9JRDogSW50ZWdlciBvciBoZXggdmFsdWUgb2Yg
aG9zdC4gRm9yIElQdjQgaXMgNHRoIG9jdGV0LCBmb3IKICMgSVB2NiBpcyB0aGUgbGFzdCBoZXh0
ZXQuIERlZmF1bHQgdmFsdWUgaXMgMC4KIHRzdF9pcGFkZHJfdW4oKQpAQCAtNDE5LDggKzQwMyw4
IEBAIHRzdF9pcGFkZHJfdW4oKQogfQogCiAjIHRzdF9pbml0X2lmYWNlIFtUWVBFXSBbTElOS10K
LSMgVFlQRTogeyBsaG9zdCB8IHJob3N0IH07IERlZmF1bHQgdmFsdWUgaXMgJ2xob3N0Jy4KLSMg
TElOSzogbGluayBudW1iZXIgc3RhcnRpbmcgZnJvbSAwLiBEZWZhdWx0IHZhbHVlIGlzICcwJy4K
KyMgVFlQRTogeyBsaG9zdCB8IHJob3N0IH0sIGRlZmF1bHQgdmFsdWUgaXMgJ2xob3N0JworIyBM
SU5LOiBsaW5rIG51bWJlciBzdGFydGluZyBmcm9tIDAsIGRlZmF1bHQgdmFsdWUgaXMgJzAnCiB0
c3RfaW5pdF9pZmFjZSgpCiB7CiAJbG9jYWwgdHlwZT0iJHsxOi1saG9zdH0iCkBAIC00NTMsNiAr
NDM3LDcgQEAgdHN0X2luaXRfaWZhY2UoKQogIyAtYSBJUDogSVAgYWRkcmVzcyB0byBiZSBhZGRl
ZCwgZGVmYXVsdCB2YWx1ZSBpcwogIyAgICQodHN0X2lwYWRkcikvJElQVns0LDZ9X3tMLFJ9UFJF
RklYCiAjIC1zIHNhZmUgb3B0aW9uLCBpZiBzb21ldGhpbmcgZ29lcyB3cm9uZywgd2lsbCBleGl0
IHdpdGggVEJST0sKKyMgUkVUVVJOOiAwIG9uIHN1Y2Nlc3MsIDEgb24gZmFpbHVyZQogdHN0X2Fk
ZF9pcGFkZHIoKQogewogCWxvY2FsIGFkZHIgZGFkIGxzYWZlIG1hc2sgcnNhZmUKQEAgLTQ5Miw4
ICs0NzcsOCBAQCB0c3RfYWRkX2lwYWRkcigpCiAKICMgdHN0X3Jlc3RvcmVfaXBhZGRyIFtUWVBF
XSBbTElOS10KICMgUmVzdG9yZSBkZWZhdWx0IGlwIGFkZHJlc3NlcyBkZWZpbmVkIGluIG5ldHdv
cmsuc2gKLSMgVFlQRTogeyBsaG9zdCB8IHJob3N0IH07IERlZmF1bHQgdmFsdWUgaXMgJ2xob3N0
Jy4KLSMgTElOSzogbGluayBudW1iZXIgc3RhcnRpbmcgZnJvbSAwLiBEZWZhdWx0IHZhbHVlIGlz
ICcwJy4KKyMgVFlQRTogeyBsaG9zdCB8IHJob3N0IH0sIGRlZmF1bHQgdmFsdWUgaXMgJ2xob3N0
JworIyBMSU5LOiBsaW5rIG51bWJlciBzdGFydGluZyBmcm9tIDAsIGRlZmF1bHQgdmFsdWUgaXMg
JzAnCiB0c3RfcmVzdG9yZV9pcGFkZHIoKQogewogCXRzdF90ZXN0X2NtZHMgaXAKQEAgLTUxNywx
MCArNTAyLDkgQEAgdHN0X3Jlc3RvcmVfaXBhZGRyKCkKICMgd2FpdCBmb3IgSVB2NiBEQUQgY29t
cGxldGlvbgogdHN0X3dhaXRfaXB2Nl9kYWQoKQogewotCWxvY2FsIHJldD0KLQlsb2NhbCBpPQog
CWxvY2FsIGlmYWNlX2xvYz0kezE6LSQodHN0X2lmYWNlKX0KIAlsb2NhbCBpZmFjZV9ybXQ9JHsy
Oi0kKHRzdF9pZmFjZSByaG9zdCl9CisJbG9jYWwgaSByZXQKIAogCWZvciBpIGluICQoc2VxIDEg
NTApOyBkbwogCQlpcCBhIHNoICRpZmFjZV9sb2MgfCBncmVwIC1xIHRlbnRhdGl2ZQpAQCAtNTQ5
LDI0ICs1MzMsMjQgQEAgdHN0X25ldGxvYWQoKQogCWxvY2FsIGV4cGVjdF9yZXM9InBhc3MiCiAJ
bG9jYWwgcmV0PTAKIAlsb2NhbCB0eXBlPSJ0Y3AiCi0JbG9jYWwgaG9zdG9wdD0KLQlsb2NhbCBz
ZXR1cF9zcmNob3N0PTAKKwlsb2NhbCBob3N0b3B0CisJbG9jYWwgc2V0dXBfc3JjaG9zdAogCSMg
Y29tbW9uIG9wdGlvbnMgZm9yIGNsaWVudCBhbmQgc2VydmVyCi0JbG9jYWwgY3Nfb3B0cz0KKwls
b2NhbCBjc19vcHRzCiAKIAlsb2NhbCBjX251bT0iJFRTVF9ORVRMT0FEX0NMTl9OVU1CRVIiCiAJ
bG9jYWwgY19yZXF1ZXN0cz0iJFRTVF9ORVRMT0FEX0NMTl9SRVFVRVNUUyIKLQlsb2NhbCBjX29w
dHM9CisJbG9jYWwgY19vcHRzCiAKIAkjIG51bWJlciBvZiBzZXJ2ZXIgcmVwbGllcyBhZnRlciB3
aGljaCBUQ1AgY29ubmVjdGlvbiBpcyBjbG9zZWQKIAlsb2NhbCBzX3JlcGxpZXM9IiR7VFNUX05F
VExPQURfTUFYX1NSVl9SRVBMSUVTOi01MDAwMDB9IgotCWxvY2FsIHNfb3B0cz0KKwlsb2NhbCBz
X29wdHMKIAogCWlmIFsgISAiJFRTVF9ORUVEU19UTVBESVIiID0gMSBdOyB0aGVuCiAJCXRzdF9i
cmtfIFRCUk9LICJVc2luZyB0c3RfbmV0bG9hZCByZXF1aXJlcyBzZXR0aW5nIFRTVF9ORUVEU19U
TVBESVI9MSIKIAlmaQogCi0JT1BUSU5EPTAKKwlsb2NhbCBPUFRJTkQKIAl3aGlsZSBnZXRvcHRz
IDphOkg6ZDpuOk46cjpSOlM6Yjp0OlQ6ZkZlOm06QTpEOiBvcHQ7IGRvCiAJCWNhc2UgIiRvcHQi
IGluCiAJCWEpIGNfbnVtPSIkT1BUQVJHIiA7OwpAQCAtNTkyLDcgKzU3Niw2IEBAIHRzdF9uZXRs
b2FkKCkKIAkJKikgdHN0X2Jya18gVEJST0sgInRzdF9uZXRsb2FkOiB1bmtub3duIG9wdGlvbjog
JE9QVEFSRyIgOzsKIAkJZXNhYwogCWRvbmUKLQlPUFRJTkQ9MAogCiAJWyAiJHNldHVwX3NyY2hv
c3QiID0gMSBdICYmIHNfb3B0cz0iJHtzX29wdHN9LVMgJGhvc3RvcHQgIgogCkBAIC02OTAsMTEg
KzY3MywxMCBAQCB0c3RfaWNtcCgpCiB7CiAJbG9jYWwgdGltZW91dD0xCiAJbG9jYWwgbXNnX3Np
emVzPTU2Ci0JbG9jYWwgb3B0cz0KLQlsb2NhbCBudW09CiAJbG9jYWwgcmV0PTAKKwlsb2NhbCBu
dW0gb3B0cwogCi0JT1BUSU5EPTAKKwlsb2NhbCBPUFRJTkQKIAl3aGlsZSBnZXRvcHRzIDp0OnM6
IG9wdDsgZG8KIAkJY2FzZSAiJG9wdCIgaW4KIAkJdCkgdGltZW91dD0iJE9QVEFSRyIgOzsKQEAg
LTcwMiw3ICs2ODQsNiBAQCB0c3RfaWNtcCgpCiAJCSopIG9wdHM9Ii0kT1BUQVJHICRvcHRzIiA7
OwogCQllc2FjCiAJZG9uZQotCU9QVElORD0wCiAKIAlsb2NhbCBudW09JChlY2hvICIkbXNnX3Np
emVzIiB8IHdjIC13KQogCXRpbWVvdXQ9IiQoKCR0aW1lb3V0IC8gJG51bSkpIgpAQCAtNzI1LDE1
ICs3MDYsMTMgQEAgdHN0X2ljbXAoKQogfQogCiAjIHRzdF9zZXRfc3lzY3RsIE5BTUUgVkFMVUUg
W3NhZmVdCi0jIEl0IGNhbiBoYW5kbGUgbmV0bnMgY2FzZSB3aGVuIHN5c2N0bCBub3QgbmFtZXNw
YWNlaWZpZWQuCisjIEl0IGNhbiBoYW5kbGUgbmV0bnMgY2FzZSB3aGVuIHN5c2N0bCBub3QgbmFt
ZXNwYWNlaWZpZWQKIHRzdF9zZXRfc3lzY3RsKCkKIHsKIAlsb2NhbCBuYW1lPSIkMSIKIAlsb2Nh
bCB2YWx1ZT0iJDIiCi0JbG9jYWwgc2FmZT0KKwlsb2NhbCBycGFyYW0gc2FmZQogCVsgIiQzIiA9
ICJzYWZlIiBdICYmIHNhZmU9Ii1zIgotCi0JbG9jYWwgcnBhcmFtPQogCVsgIiRUU1RfVVNFX05F
VE5TIiA9ICJ5ZXMiIF0gJiYgcnBhcmFtPSItciAnLWUnIgogCiAJdHN0X25ldF9ydW4gJHNhZmUg
JHJwYXJhbSAic3lzY3RsIC1xIC13ICRuYW1lPSR2YWx1ZSIKQEAgLTc1NSw3ICs3MzQsNyBAQCB0
c3RfZGVmYXVsdF9tYXhfcGt0KCkKIFsgLXogIiRSSE9TVCIgXSAmJiBUU1RfVVNFX05FVE5TPSJ5
ZXMiCiBleHBvcnQgUkhPU1Q9IiRSSE9TVCIKIGV4cG9ydCBQQVNTV0Q9IiR7UEFTU1dEOi19Igot
IyBEb24ndCB1c2UgaXQgaW4gbmV3IHRlc3RzLCB1c2UgdHN0X3Job3N0X3J1bigpIGZyb20gdHN0
X25ldC5zaCBpbnN0ZWFkLgorIyBEb24ndCB1c2UgaXQgaW4gbmV3IHRlc3RzLCB1c2UgdHN0X3Jo
b3N0X3J1bigpIGZyb20gdHN0X25ldC5zaCBpbnN0ZWFkCiBleHBvcnQgTFRQX1JTSD0iJHtMVFBf
UlNIOi1yc2ggLW59IgogCiAjIFRlc3QgTGlua3MKLS0gCjIuMjEuMAoKCi0tIApNYWlsaW5nIGxp
c3QgaW5mbzogaHR0cHM6Ly9saXN0cy5saW51eC5pdC9saXN0aW5mby9sdHAK
