Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [213.254.12.146])
	by mail.lfdr.de (Postfix) with ESMTPS id 30B2A4E5DF
	for <lists+linux-ltp@lfdr.de>; Fri, 21 Jun 2019 12:26:55 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id 99D9B3EB051
	for <lists+linux-ltp@lfdr.de>; Fri, 21 Jun 2019 12:26:54 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-2.smtp.seeweb.it (in-2.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::2])
 by picard.linux.it (Postfix) with ESMTP id 8651A3EAFEA
 for <ltp@lists.linux.it>; Fri, 21 Jun 2019 12:26:44 +0200 (CEST)
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by in-2.smtp.seeweb.it (Postfix) with ESMTPS id E1BE0601D72
 for <ltp@lists.linux.it>; Fri, 21 Jun 2019 12:26:39 +0200 (CEST)
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 67D1186658
 for <ltp@lists.linux.it>; Fri, 21 Jun 2019 10:26:38 +0000 (UTC)
Received: from dhcp-3-207.nay.redhat.com (dhcp-3-207.nay.redhat.com
 [10.66.3.207])
 by smtp.corp.redhat.com (Postfix) with ESMTP id A05CD1001B18;
 Fri, 21 Jun 2019 10:26:36 +0000 (UTC)
From: Li Wang <liwang@redhat.com>
To: ltp@lists.linux.it
Date: Fri, 21 Jun 2019 18:26:27 +0800
Message-Id: <20190621102628.4800-3-liwang@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.26]); Fri, 21 Jun 2019 10:26:38 +0000 (UTC)
X-Virus-Scanned: clamav-milter 0.99.2 at in-2.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=-0.0 required=7.0 tests=SPF_HELO_PASS,SPF_PASS
 autolearn=disabled version=3.4.0
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on in-2.smtp.seeweb.it
Subject: [LTP] [PATCH v2 2/3] pkey: add test for memory protection keys
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

TWVtb3J5IFByb3RlY3Rpb24gS2V5cyBmb3IgVXNlcnNwYWNlIChQS1UgYWthIFBLRVlzKSBpcyBh
IFNreWxha2UtU1AKc2VydmVyIGZlYXR1cmUgdGhhdCBwcm92aWRlcyBhIG1lY2hhbmlzbSBmb3Ig
ZW5mb3JjaW5nIHBhZ2UtYmFzZWQKcHJvdGVjdGlvbnMsIGJ1dCB3aXRob3V0IHJlcXVpcmluZyBt
b2RpZmljYXRpb24gb2YgdGhlIHBhZ2UgdGFibGVzCndoZW4gYW4gYXBwbGljYXRpb24gY2hhbmdl
cyBwcm90ZWN0aW9uIGRvbWFpbnMuIEl0IHdvcmtzIGJ5IGRlZGljYXRpbmcKNCBwcmV2aW91c2x5
IGlnbm9yZWQgYml0cyBpbiBlYWNoIHBhZ2UgdGFibGUgZW50cnkgdG8gYSAicHJvdGVjdGlvbiBr
ZXkiLApnaXZpbmcgMTYgcG9zc2libGUga2V5cy4KClRlc3QgZm9yIE1lbW9yeSBQcm90ZWN0aW9u
IEtleXM6CjEuIHRlc3QgYWxsb2NhdGVzIGEgcGtleShlLmcuIFBLRVlfRElTQUJMRV9BQ0NFU1Mp
IHZpYSBwa2V5X2FsbG9jKCkKMi4gcGtleV9tcHJvdGVjdCgpIGFwcGx5IHRoaXMgcGtleSB0byBh
IHBpZWNlIG9mIHNoYXJlZCBtZW1vcnkoYnVmZmVyKQozLiBjaGVjayBpZiB0aGUgYWNjZXNzIHJp
Z2h0IG9mIGJ1ZmZlciBoYXMgYmVlbiBjaGFuZ2VkIGFuZCB0YWtlIGVmZmVjdAo0LiByZW1vdmUg
dGhlIGFjY2VzcyByaWdodChwa2V5KSBmcm9tIHRoaXMgYnVmZmVyIHZpYSBwa2V5X21wcm90ZWN0
KCkKNS4gY2hlY2sgaWYgYnVmZmVyIGFyZWEgY2FuIGJlIHJlYWQgb3Igd3JpdGUgYWZ0ZXIgcmVt
b3ZpbmcgcGtleQo2LiBwa2V5X2ZyZWUoKSByZWxlYXNlcyB0aGUgcGtleSBhZnRlciB1c2luZyBp
dAoKU2lnbmVkLW9mZi1ieTogTGkgV2FuZyA8bGl3YW5nQHJlZGhhdC5jb20+Ci0tLQogY29uZmln
dXJlLmFjICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAxICsKIHJ1bnRlc3Qvc3lz
Y2FsbHMgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgMiArCiB0ZXN0Y2FzZXMva2VybmVs
L3N5c2NhbGxzL3BrZXlzLy5naXRpZ25vcmUgfCAgIDEgKwogdGVzdGNhc2VzL2tlcm5lbC9zeXNj
YWxscy9wa2V5cy9NYWtlZmlsZSAgIHwgICA4ICsrCiB0ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxz
L3BrZXlzL3BrZXkuaCAgICAgfCAgNTAgKysrKysrKysKIHRlc3RjYXNlcy9rZXJuZWwvc3lzY2Fs
bHMvcGtleXMvcGtleTAxLmMgICB8IDEyNiArKysrKysrKysrKysrKysrKysrKysKIDYgZmlsZXMg
Y2hhbmdlZCwgMTg4IGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0ZXN0Y2FzZXMv
a2VybmVsL3N5c2NhbGxzL3BrZXlzLy5naXRpZ25vcmUKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0ZXN0
Y2FzZXMva2VybmVsL3N5c2NhbGxzL3BrZXlzL01ha2VmaWxlCiBjcmVhdGUgbW9kZSAxMDA2NDQg
dGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9wa2V5cy9wa2V5LmgKIGNyZWF0ZSBtb2RlIDEwMDY0
NCB0ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL3BrZXlzL3BrZXkwMS5jCgpkaWZmIC0tZ2l0IGEv
Y29uZmlndXJlLmFjIGIvY29uZmlndXJlLmFjCmluZGV4IDY1ZmMyYTIzMi4uNWE5Yjc0YjBhIDEw
MDY0NAotLS0gYS9jb25maWd1cmUuYWMKKysrIGIvY29uZmlndXJlLmFjCkBAIC03NCw2ICs3NCw3
IEBAIEFDX0NIRUNLX0ZVTkNTKFsgXAogICAgIHBpZGZkX3NlbmRfc2lnbmFsIFwKICAgICBwcmVh
ZHYgXAogICAgIHByZWFkdjIgXAorICAgIHBrZXlfbXByb3RlY3QgXAogICAgIHByb2ZpbCBcCiAg
ICAgcHdyaXRldiBcCiAgICAgcHdyaXRldjIgXApkaWZmIC0tZ2l0IGEvcnVudGVzdC9zeXNjYWxs
cyBiL3J1bnRlc3Qvc3lzY2FsbHMKaW5kZXggYzZhMDY0NDgxLi42ZWE5OTFmMTIgMTAwNjQ0Ci0t
LSBhL3J1bnRlc3Qvc3lzY2FsbHMKKysrIGIvcnVudGVzdC9zeXNjYWxscwpAQCAtNzIxLDYgKzcy
MSw4IEBAIG1wcm90ZWN0MDIgbXByb3RlY3QwMgogbXByb3RlY3QwMyBtcHJvdGVjdDAzCiBtcHJv
dGVjdDA0IG1wcm90ZWN0MDQKIAorcGtleTAxIHBrZXkwMQorCiBtcV9ub3RpZnkwMSBtcV9ub3Rp
ZnkwMQogbXFfbm90aWZ5MDIgbXFfbm90aWZ5MDIKIG1xX29wZW4wMSBtcV9vcGVuMDEKZGlmZiAt
LWdpdCBhL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvcGtleXMvLmdpdGlnbm9yZSBiL3Rlc3Rj
YXNlcy9rZXJuZWwvc3lzY2FsbHMvcGtleXMvLmdpdGlnbm9yZQpuZXcgZmlsZSBtb2RlIDEwMDY0
NAppbmRleCAwMDAwMDAwMDAuLjZmZDVhZGRiOAotLS0gL2Rldi9udWxsCisrKyBiL3Rlc3RjYXNl
cy9rZXJuZWwvc3lzY2FsbHMvcGtleXMvLmdpdGlnbm9yZQpAQCAtMCwwICsxIEBACisvcGtleTAx
CmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL3BrZXlzL01ha2VmaWxlIGIv
dGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9wa2V5cy9NYWtlZmlsZQpuZXcgZmlsZSBtb2RlIDEw
MDY0NAppbmRleCAwMDAwMDAwMDAuLjllZTJjMmVhNQotLS0gL2Rldi9udWxsCisrKyBiL3Rlc3Rj
YXNlcy9rZXJuZWwvc3lzY2FsbHMvcGtleXMvTWFrZWZpbGUKQEAgLTAsMCArMSw4IEBACisjIFNQ
RFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9yLWxhdGVyCisjIENvcHlyaWdodCAoYykg
MjAxOSBSZWQgSGF0LCBJbmMuCisKK3RvcF9zcmNkaXIJCT89IC4uLy4uLy4uLy4uCisKK2luY2x1
ZGUgJCh0b3Bfc3JjZGlyKS9pbmNsdWRlL21rL3Rlc3RjYXNlcy5taworCitpbmNsdWRlICQodG9w
X3NyY2RpcikvaW5jbHVkZS9tay9nZW5lcmljX2xlYWZfdGFyZ2V0Lm1rCmRpZmYgLS1naXQgYS90
ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL3BrZXlzL3BrZXkuaCBiL3Rlc3RjYXNlcy9rZXJuZWwv
c3lzY2FsbHMvcGtleXMvcGtleS5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAw
MC4uY2NiYjVmZjNjCi0tLSAvZGV2L251bGwKKysrIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxs
cy9wa2V5cy9wa2V5LmgKQEAgLTAsMCArMSw1MCBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZp
ZXI6IEdQTC0yLjAtb3ItbGF0ZXIKKy8qCisgKiBDb3B5cmlnaHQgKGMpIDIwMTkgUmVkIEhhdCwg
SW5jLgorICovCisKKyNpZm5kZWYgUEtFWVNfSAorI2RlZmluZSBQS0VZU19ICisKKyNpbmNsdWRl
ICJ0c3RfdGVzdC5oIgorI2luY2x1ZGUgImxhcGkvc3lzY2FsbHMuaCIKKworI2lmbmRlZiBQS0VZ
X0RJU0FCTEVfQUNDRVNTCisjIGRlZmluZSBQS0VZX0RJU0FCTEVfQUNDRVNTIDB4MQorIyBkZWZp
bmUgUEtFWV9ESVNBQkxFX1dSSVRFICAweDIKKyNlbmRpZgorCisjaWZuZGVmIEhBVkVfUEtFWV9N
UFJPVEVDVAorc3RhdGljIGlubGluZSBpbnQgcGtleV9tcHJvdGVjdCh2b2lkICphZGRyLCBzaXpl
X3QgbGVuLCBpbnQgcHJvdCwgaW50IHBrZXkpCit7CisJcmV0dXJuIHRzdF9zeXNjYWxsKFNZU19w
a2V5X21wcm90ZWN0LCBhZGRyLCBsZW4sIHByb3QsIHBrZXkpOworfQorCitzdGF0aWMgaW5saW5l
IGludCBwa2V5X2FsbG9jKHVuc2lnbmVkIGludCBmbGFncywgdW5zaWduZWQgaW50IGFjY2Vzc19y
aWdodHMpCit7CisJcmV0dXJuIHRzdF9zeXNjYWxsKFNZU19wa2V5X2FsbG9jLCBmbGFncywgYWNj
ZXNzX3JpZ2h0cyk7Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IHBrZXlfZnJlZShpbnQgcGtleSkK
K3sKKwlyZXR1cm4gdHN0X3N5c2NhbGwoU1lTX3BrZXlfZnJlZSwgcGtleSk7Cit9CisjZW5kaWYg
LyogSEFWRV9QS0VZX01QUk9URUNUICovCisKK3N0YXRpYyBpbmxpbmUgdm9pZCBjaGVja19wa2V5
X3N1cHBvcnQodm9pZCkKK3sKKwlpbnQgcGtleSA9IHBrZXlfYWxsb2MoMCwgMCk7CisKKwlpZiAo
cGtleSA9PSAtMSkgeworCQlpZiAoZXJybm8gPT0gRU5PU1lTKQorCQkJdHN0X2JyayhUQ09ORiwg
InBrZXlfYWxsb2MgaXMgbm90IGltcGxlbWVudGVkIik7CisJCWlmIChlcnJubyA9PSBFSU5WQUwp
CisJCQl0c3RfYnJrKFRDT05GLCAicGt1IGlzIG5vdCBzdXBwb3J0ZWQgb24gdGhpcyBDUFUiKTsK
KwkJaWYgKGVycm5vID09IEVOT1NQQykKKwkJCXRzdF9icmsoVENPTkYsICJwa2V5cyBhcmUgbm90
IGF2YWlsYWJsZSBmb3IgdGVzdCIpOworCX0KKworCXBrZXlfZnJlZShwa2V5KTsKK30KKworI2Vu
ZGlmIC8qIFBLRVlTX0ggKi8KZGlmZiAtLWdpdCBhL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMv
cGtleXMvcGtleTAxLmMgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL3BrZXlzL3BrZXkwMS5j
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMC4uZGZjZjkyYTZiCi0tLSAvZGV2
L251bGwKKysrIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9wa2V5cy9wa2V5MDEuYwpAQCAt
MCwwICsxLDEyNiBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0
ZXIKKy8qCisgKiBDb3B5cmlnaHQgKGMpIDIwMTkgUmVkIEhhdCwgSW5jLgorICoKKyAqIE1lbW9y
eSBQcm90ZWN0aW9uIEtleXMgZm9yIFVzZXJzcGFjZSAoUEtVIGFrYSBQS0VZcykgaXMgYSBTa3ls
YWtlLVNQCisgKiBzZXJ2ZXIgZmVhdHVyZSB0aGF0IHByb3ZpZGVzIGEgbWVjaGFuaXNtIGZvciBl
bmZvcmNpbmcgcGFnZS1iYXNlZAorICogcHJvdGVjdGlvbnMsIGJ1dCB3aXRob3V0IHJlcXVpcmlu
ZyBtb2RpZmljYXRpb24gb2YgdGhlIHBhZ2UgdGFibGVzCisgKiB3aGVuIGFuIGFwcGxpY2F0aW9u
IGNoYW5nZXMgcHJvdGVjdGlvbiBkb21haW5zLiBJdCB3b3JrcyBieSBkZWRpY2F0aW5nCisgKiA0
IHByZXZpb3VzbHkgaWdub3JlZCBiaXRzIGluIGVhY2ggcGFnZSB0YWJsZSBlbnRyeSB0byBhICJw
cm90ZWN0aW9uIGtleSIsCisgKiBnaXZpbmcgMTYgcG9zc2libGUga2V5cy4KKyAqCisgKiBUZXN0
IGZvciBNZW1vcnkgUHJvdGVjdGlvbiBLZXlzOgorICogICAgMS4gdGVzdCBhbGxvY2F0ZXMgYSBw
a2V5KGUuZy4gUEtFWV9ESVNBQkxFX0FDQ0VTUykgdmlhIHBrZXlfYWxsb2MoKQorICogICAgMi4g
cGtleV9tcHJvdGVjdCgpIGFwcGx5IHRoaXMgcGtleSB0byBhIHBpZWNlIG9mIHNoYXJlZCBtZW1v
cnkoYnVmZmVyKQorICogICAgMy4gY2hlY2sgaWYgYWNjZXNzIHJpZ2h0IG9mIHRoZSBidWZmZXIg
aGFzIGJlZW4gY2hhbmdlZCBhbmQgdGFrZSBlZmZlY3QKKyAqICAgIDQuIHJlbW92ZSB0aGUgYWNj
ZXNzIHJpZ2h0KHBrZXkpIGZyb20gdGhpcyBidWZmZXIgdmlhIHBrZXlfbXByb3RlY3QoKQorICog
ICAgNS4gY2hlY2sgaWYgYnVmZmVyIGFyZWEgY2FuIGJlIHJlYWQgb3Igd3JpdGUgYWZ0ZXIgcmVt
b3ZpbmcgcGtleQorICogICAgNi4gcGtleV9mcmVlKCkgcmVsZWFzZXMgdGhlIHBrZXkgYWZ0ZXIg
dXNpbmcgaXQKKyAqCisgKiBSZWZlcmVuY2U6IGh0dHBzOi8vbHduLm5ldC9BcnRpY2xlcy82ODkz
OTUvCisgKi8KKworI2RlZmluZSBfR05VX1NPVVJDRQorI2luY2x1ZGUgPHN0ZGlvLmg+CisjaW5j
bHVkZSA8dW5pc3RkLmg+CisjaW5jbHVkZSA8ZXJybm8uaD4KKyNpbmNsdWRlIDxzdGRsaWIuaD4K
KyNpbmNsdWRlIDxzeXMvc3lzY2FsbC5oPgorI2luY2x1ZGUgPHN5cy9tbWFuLmg+CisjaW5jbHVk
ZSA8c3lzL3dhaXQuaD4KKworI2luY2x1ZGUgInBrZXkuaCIKKworc3RhdGljIGludCBwc2l6ZTsK
K3N0YXRpYyBjaGFyICpidWZmZXI7CisKK3N0YXRpYyBzdHJ1Y3QgdGNhc2UgeworCXVuc2lnbmVk
IGxvbmcgZmxhZ3M7CisJdW5zaWduZWQgbG9uZyBhY2Nlc3NfcmlnaHRzOworCWNoYXIgKm5hbWU7
Cit9IHRjYXNlc1tdID0geworCXswLCBQS0VZX0RJU0FCTEVfQUNDRVNTLCAiUEtFWV9ESVNBQkxF
X0FDQ0VTUyJ9LAorCXswLCBQS0VZX0RJU0FCTEVfV1JJVEUsICJQS0VZX0RJU0FCTEVfV1JJVEUi
fSwKK307CisKK3N0YXRpYyB2b2lkIHNldHVwKHZvaWQpCit7CisJY2hlY2tfcGtleV9zdXBwb3J0
KCk7CisKKwlwc2l6ZSA9IGdldHBhZ2VzaXplKCk7CisJYnVmZmVyID0gU0FGRV9NTUFQKE5VTEws
IHBzaXplLCBQUk9UX1JFQUQgfCBQUk9UX1dSSVRFLAorCQkJTUFQX0FOT05ZTU9VUyB8IE1BUF9T
SEFSRUQsIC0xLCAwKTsKKwltZW1zZXQoYnVmZmVyLCAnYScsIHBzaXplKTsKK30KKworc3RhdGlj
IHZvaWQgdmVyaWZ5X3BrZXkodW5zaWduZWQgaW50IGkpCit7CisJaW50IHBrZXksIHN0YXR1czsK
KwlwaWRfdCBwaWQ7CisKKwlzdHJ1Y3QgdGNhc2UgKnRjID0gJnRjYXNlc1tpXTsKKworCXBrZXkg
PSBwa2V5X2FsbG9jKHRjLT5mbGFncywgdGMtPmFjY2Vzc19yaWdodHMpOworCWlmIChwa2V5ID09
IC0xKQorCQl0c3RfYnJrKFRCUk9LLCAicGtleV9hbGxvYyBmYWlsZWQiKTsKKworCXRzdF9yZXMo
VElORk8sICJTZXQgJXMgb24gYnVmZmVyIiwgdGMtPm5hbWUpOworCWlmIChwa2V5X21wcm90ZWN0
KGJ1ZmZlciwgcHNpemUsIFBST1RfUkVBRCB8IFBST1RfV1JJVEUsIHBrZXkpID09IC0xKQorCQl0
c3RfYnJrKFRCUk9LLCAicGtleV9tcHJvdGVjdCBmYWlsZWQiKTsKKworCXBpZCA9IFNBRkVfRk9S
SygpOworCWlmIChwaWQgPT0gMCkgeworCQkvKiBDaGlsZHJlbiBjcmFzaCBhcmUgZXhwZWN0ZWQs
IGF2b2lkIGR1bXBpbmcgY29yZWZpbGUgKi8KKwkJc3RydWN0IHJsaW1pdCByOworCisJCXIucmxp
bV9jdXIgPSAxOworCQlyLnJsaW1fbWF4ID0gMTsKKwkJU0FGRV9TRVRSTElNSVQoUkxJTUlUX0NP
UkUsICZyKTsKKworCQlzd2l0Y2ggKHRjLT5hY2Nlc3NfcmlnaHRzKSB7CisJCWNhc2UgUEtFWV9E
SVNBQkxFX0FDQ0VTUzoKKwkJCXRzdF9yZXMoVEZBSUwsICJSZWFkIGJ1ZmZlciBzdWNjZXNzLCBi
dWZmZXJbMF0gPSAlZCIsICpidWZmZXIpOworCQlicmVhazsKKwkJY2FzZSBQS0VZX0RJU0FCTEVf
V1JJVEU6CisJCQkqYnVmZmVyID0gJ2InOworCQlicmVhazsKKwkJfQorCQlleGl0KDApOworCX0K
KworCVNBRkVfV0FJVFBJRChwaWQsICZzdGF0dXMsIDApOworCWlmIChXSUZTSUdOQUxFRChzdGF0
dXMpKSB7CisJCWlmIChXVEVSTVNJRyhzdGF0dXMpID09IFNJR1NFR1YpIHsKKwkJCXRzdF9yZXMo
VFBBU1MsICJDaGlsZCBlbmRlZCBieSAlcyBhcyBleHBlY3RlZCIsCisJCQkJdHN0X3N0cnNpZyhT
SUdTRUdWKSk7CisJCX0gZWxzZSB7CisJCQl0c3RfcmVzKFRGQUlMLCAiQ2hpbGQgZW5kZWQgYnkg
JXMgdW5leHBlY3RlZCIgLAorCQkJCXRzdF9zdHJzaWcoV1RFUk1TSUcoc3RhdHVzKSkpOworCQl9
CisJfSBlbHNlIHsKKwkJdHN0X3JlcyhURkFJTCwgIkNoaWxkIHVuZXhwZWN0ZWRseSBlbmRlZCIp
OworCX0KKworCXRzdF9yZXMoVElORk8sICJSZW1vdmUgJXMgZnJvbSBidWZmZXIiLCB0Yy0+bmFt
ZSk7CisJaWYgKHBrZXlfbXByb3RlY3QoYnVmZmVyLCBwc2l6ZSwgUFJPVF9SRUFEIHwgUFJPVF9X
UklURSwgMHgwKSA9PSAtMSkKKwkJdHN0X2JyayhUQlJPSywgInBrZXlfbXByb3RlY3QgZmFpbGVk
Iik7CisJKmJ1ZmZlciA9IGk7CisJdHN0X3JlcyhUUEFTUywgIldyaXRlIGJ1ZmZlciBzdWNjZXNz
LCBidWZmZXJbMF0gPSAlZCIsICpidWZmZXIpOworCisJaWYgKHBrZXlfZnJlZShwa2V5KSA9PSAt
MSkKKwkJdHN0X2JyayhUQlJPSywgInBrZXlfZnJlZSBmYWlsZWQiKTsKK30KKworc3RhdGljIHZv
aWQgY2xlYW51cCh2b2lkKQoreworCWlmIChidWZmZXIpCisJCVNBRkVfTVVOTUFQKGJ1ZmZlciwg
cHNpemUpOworfQorCitzdGF0aWMgc3RydWN0IHRzdF90ZXN0IHRlc3QgPSB7CisJLnRjbnQgPSBB
UlJBWV9TSVpFKHRjYXNlcyksCisJLmZvcmtzX2NoaWxkID0gMSwKKwkudGVzdCA9IHZlcmlmeV9w
a2V5LAorCS5zZXR1cCA9IHNldHVwLAorCS5jbGVhbnVwID0gY2xlYW51cCwKK307Ci0tIAoyLjIw
LjEKCgotLSAKTWFpbGluZyBsaXN0IGluZm86IGh0dHBzOi8vbGlzdHMubGludXguaXQvbGlzdGlu
Zm8vbHRwCg==
