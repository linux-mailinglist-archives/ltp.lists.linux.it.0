Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [IPv6:2001:1418:10:5::2])
	by mail.lfdr.de (Postfix) with ESMTPS id 1383D7D69C9
	for <lists+linux-ltp@lfdr.de>; Wed, 25 Oct 2023 13:09:02 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id AF6953CEC5C
	for <lists+linux-ltp@lfdr.de>; Wed, 25 Oct 2023 13:09:01 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-4.smtp.seeweb.it (in-4.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::4])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-384))
 (No client certificate requested)
 by picard.linux.it (Postfix) with ESMTPS id 27E743CCBC2
 for <ltp@lists.linux.it>; Wed, 25 Oct 2023 13:08:38 +0200 (CEST)
Received: from smtp-out2.suse.de (smtp-out2.suse.de [195.135.220.29])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256)
 (No client certificate requested)
 by in-4.smtp.seeweb.it (Postfix) with ESMTPS id E5F6110007AC
 for <ltp@lists.linux.it>; Wed, 25 Oct 2023 13:08:37 +0200 (CEST)
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by smtp-out2.suse.de (Postfix) with ESMTPS id 366BC1FF55;
 Wed, 25 Oct 2023 11:08:37 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
 t=1698232117; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=LPOYLVlFUjhySqlBHACn9Dvo4JiOvPdq9PFlIsAd4HI=;
 b=BebR7NLpeeWd3VppEN7UfitBFsdGPeK0J85La46gcfJs74tfOrDfLTTX0+VBnajABtm+xV
 P9hzu00EbrtKLAc5QRUQIOas4F3UsLD0uaHE/RL8Z8kRSSlkZe9iYfW868P89mHk1Fa99A
 +zNp+1YRLUlHQzATQF7yseBUHme/+DE=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
 s=susede2_ed25519; t=1698232117;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=LPOYLVlFUjhySqlBHACn9Dvo4JiOvPdq9PFlIsAd4HI=;
 b=phmnj9vZJhmISr6w2cCqw+2LO1SE0NokfvMcnKBTkFSrIJVm/QNwTIxMZHfrndGB/RF5t8
 2nOI74/xDuDGffBA==
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by imap2.suse-dmz.suse.de (Postfix) with ESMTPS id 2193213A82;
 Wed, 25 Oct 2023 11:08:37 +0000 (UTC)
Received: from dovecot-director2.suse.de ([192.168.254.65])
 by imap2.suse-dmz.suse.de with ESMTPSA id EOgeBzX3OGUVUgAAMHmgww
 (envelope-from <mkittler@suse.de>); Wed, 25 Oct 2023 11:08:37 +0000
From: Marius Kittler <mkittler@suse.de>
To: ltp@lists.linux.it
Date: Wed, 25 Oct 2023 13:08:32 +0200
Message-ID: <20231025110835.28832-2-mkittler@suse.de>
X-Mailer: git-send-email 2.42.0
In-Reply-To: <20231025110835.28832-1-mkittler@suse.de>
References: <20231025110835.28832-1-mkittler@suse.de>
MIME-Version: 1.0
X-Virus-Scanned: clamav-milter 1.0.1 at in-4.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=0.1 required=7.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,DKIM_VALID_EF,SPF_HELO_NONE,SPF_PASS shortcircuit=no
 autolearn=disabled version=4.0.0
X-Spam-Checker-Version: SpamAssassin 4.0.0 (2022-12-13) on in-4.smtp.seeweb.it
Subject: [LTP] [PATCH v8 1/4] Refactor ioctl02.c to use the new test API
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

KiBVc2UgY2hlY2twb2ludCBBUEkgaW5zdGVhZCBvZiBzaWduYWxzCiogVXNlIFNBRkVf4oCmLW1h
Y3JvcyBpbnN0ZWFkIG9mIG1hbnVhbCBlcnJvciBoYW5kbGluZwoqIFNlZSBodHRwczovL2dpdGh1
Yi5jb20vbGludXgtdGVzdC1wcm9qZWN0L2x0cC9pc3N1ZXMvNjM3CiAgZm9yIHJlbGF0ZWQgZGlz
Y3Vzc2lvbi4KClNpZ25lZC1vZmYtYnk6IE1hcml1cyBLaXR0bGVyIDxta2l0dGxlckBzdXNlLmRl
PgotLS0KIHRlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvaW9jdGwvaW9jdGwwMi5jIHwgNDE0ICsr
KysrLS0tLS0tLS0tLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA4OSBpbnNlcnRpb25zKCspLCAz
MjUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9p
b2N0bC9pb2N0bDAyLmMgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lvY3RsL2lvY3RsMDIu
YwppbmRleCBiNGQ0YTM1OTQuLjIzYTUyMTUxYiAxMDA2NDQKLS0tIGEvdGVzdGNhc2VzL2tlcm5l
bC9zeXNjYWxscy9pb2N0bC9pb2N0bDAyLmMKKysrIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxs
cy9pb2N0bC9pb2N0bDAyLmMKQEAgLTEsMjI4ICsxLDg3IEBACisvLyBTUERYLUxpY2Vuc2UtSWRl
bnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgogLyoKLSAqICAgQ29weXJpZ2h0IChjKSBJbnRlcm5h
dGlvbmFsIEJ1c2luZXNzIE1hY2hpbmVzICBDb3JwLiwgMjAwMQotICogICBDb3B5cmlnaHQgKGMp
IDIwMjAgUGV0ciBWb3JlbCA8cHZvcmVsQHN1c2UuY3o+Ci0gKgotICogICBUaGlzIHByb2dyYW0g
aXMgZnJlZSBzb2Z0d2FyZTsgIHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkK
LSAqICAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5z
ZSBhcyBwdWJsaXNoZWQgYnkKLSAqICAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0
aGVyIHZlcnNpb24gMiBvZiB0aGUgTGljZW5zZSwgb3IKLSAqICAgKGF0IHlvdXIgb3B0aW9uKSBh
bnkgbGF0ZXIgdmVyc2lvbi4KLSAqCi0gKiAgIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBp
biB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAotICogICBidXQgV0lUSE9VVCBBTlkg
V0FSUkFOVFk7ICB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKLSAqICAgTUVS
Q0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlCi0g
KiAgIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgotICoK
LSAqICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwg
UHVibGljIExpY2Vuc2UKLSAqICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW07ICBpZiBub3QsIHdy
aXRlIHRvIHRoZSBGcmVlIFNvZnR3YXJlCi0gKiAgIEZvdW5kYXRpb24sIEluYy4sIDUxIEZyYW5r
bGluIFN0cmVldCwgRmlmdGggRmxvb3IsIEJvc3RvbiwgTUEgMDIxMTAtMTMwMSBVU0EKKyAqIENv
cHlyaWdodCAoYykgSW50ZXJuYXRpb25hbCBCdXNpbmVzcyBNYWNoaW5lcyAgQ29ycC4sIDIwMDEK
KyAqIENvcHlyaWdodCAoYykgMjAyMCBQZXRyIFZvcmVsIDxwdm9yZWxAc3VzZS5jej4KKyAqIENv
cHlyaWdodCAoYykgMjAyMyBNYXJpdXMgS2l0dGxlciA8bWtpdHRsZXJAc3VzZS5kZT4KICAqLwog
Ci0vKgotICogTkFNRQotICoJaW9jdGwwMi5jCi0gKgotICogREVTQ1JJUFRJT04KLSAqCVRlc3Rj
YXNlIHRvIHRlc3QgdGhlIFRDR0VUQSwgYW5kIFRDU0VUQSBpb2N0bCBpbXBsZW1lbnRhdGlvbnMg
Zm9yCi0gKgl0aGUgdHR5IGRyaXZlcgotICoKLSAqIEFMR09SSVRITQotICoJSW4gdGhpcyB0ZXN0
LCB0aGUgcGFyZW50IGFuZCBjaGlsZCBvcGVuIHRoZSBwYXJlbnR0eSBhbmQgdGhlIGNoaWxkdHR5
Ci0gKglyZXNwZWN0aXZlbHkuICBBZnRlciBvcGVuaW5nIHRoZSBjaGlsZHR0eSB0aGUgY2hpbGQg
Zmx1c2hlcyB0aGUgc3RyZWFtCi0gKglhbmQgc2VuZHMgYSBTSUdVU1IxIHRvIHRoZSBwYXJlbnQg
KHRoZXJlYnkgYXNraW5nIGl0IHRvIGNvbnRpbnVlIGl0cwotICoJdGVzdGluZykuIFRoZSBwYXJl
bnQsIHdoaWNoIHdhcyB3YWl0aW5nIGZvciB0aGlzIHNpZ25hbCB0byBhcnJpdmUsIG5vdwotICoJ
c3RhcnRzIHRoZSB0ZXN0aW5nLiBJdCBpc3N1ZXMgYSBUQ0dFVEEgaW9jdGwgdG8gZ2V0IGFsbCB0
aGUgdHR5Ci0gKglwYXJhbWV0ZXJzLiBJdCB0aGVuIGNoYW5nZXMgdGhlbSB0byBrbm93biB2YWx1
ZXMgYnkgaXNzdWluZyBhIFRDU0VUQQotICoJaW9jdGwuICBUaGVuIHRoZSBwYXJlbnQgaXNzdWVz
IGEgVENHRVRBIGlvY3RsIGFnYWluIGFuZCBjb21wYXJlcyB0aGUKLSAqCXJlY2VpdmVkIHZhbHVl
cyB3aXRoIHdoYXQgaXQgaGFkIHNldCBlYXJsaWVyLiBUaGUgdGVzdCBmYWlscyBpZiBUQ0dFVEEK
LSAqCW9yIFRDU0VUQSBmYWlscywgb3IgaWYgdGhlIHJlY2VpdmVkIHZhbHVlcyBkb24ndCBtYXRj
aCB0aG9zZSB0aGF0IHdlcmUKLSAqCXNldC4gVGhlIHBhcmVudCBkb2VzIGFsbCB0aGUgdGVzdGlu
ZywgdGhlIHJlcXVpcmVtZW50IG9mIHRoZSBjaGlsZAotICoJcHJvY2VzcyBpcyB0byBtb25pdGVy
IHRoZSB0ZXN0aW5nIGRvbmUgYnkgdGhlIHBhcmVudCwgYW5kIGhlbmNlIHRoZQotICoJY2hpbGQg
anVzdCB3YWl0cyBmb3IgdGhlIHBhcmVudC4KKy8qXAorICogW0Rlc2NyaXB0aW9uXQogICoKLSAq
IFVTQUdFOiAgPGZvciBjb21tYW5kLWxpbmU+Ci0gKiAgaW9jdGwwMiAtRCAvZGV2L3R0eVswLTld
IFstYyBuXSBbLWZdIFstaSBuXSBbLUkgeF0gWy1QIHhdIFstdF0KLSAqICAgICB3aGVyZSwgIC1j
IG4gOiBSdW4gbiBjb3BpZXMgY29uY3VycmVudGx5LgotICogICAgICAgICAgICAgLWYgICA6IFR1
cm4gb2ZmIGZ1bmN0aW9uYWxpdHkgVGVzdGluZy4KLSAqICAgICAgICAgICAgIC1pIG4gOiBFeGVj
dXRlIHRlc3QgbiB0aW1lcy4KLSAqICAgICAgICAgICAgIC1JIHggOiBFeGVjdXRlIHRlc3QgZm9y
IHggc2Vjb25kcy4KLSAqICAgICAgICAgICAgIC1QIHggOiBQYXVzZSBmb3IgeCBzZWNvbmRzIGJl
dHdlZW4gaXRlcmF0aW9ucy4KLSAqICAgICAgICAgICAgIC10ICAgOiBUdXJuIG9uIHN5c2NhbGwg
dGltaW5nLgorICogVGVzdGNhc2UgdG8gdGVzdCB0aGUgVENHRVRBLCBhbmQgVENTRVRBIGlvY3Rs
IGltcGxlbWVudGF0aW9ucyBmb3IKKyAqIHRoZSB0dHkgZHJpdmVyCiAgKgotICogSElTVE9SWQot
ICoJMDcvMjAwMSBQb3J0ZWQgYnkgV2F5bmUgQm95ZXIKLSAqCi0gKiBSRVNUUklDVElPTlMKLSAq
CXRlc3QgbXVzdCBiZSBydW4gd2l0aCB0aGUgLUQgb3B0aW9uCi0gKgl0ZXN0IG1heSBoYXZlIHRv
IGJlIHJ1biBhcyByb290IGRlcGVuZGluZyBvbiB0aGUgdHR5IHBlcm1pc3Npb25zCisgKiBJbiB0
aGlzIHRlc3QsIHRoZSBwYXJlbnQgYW5kIGNoaWxkIG9wZW4gdGhlIHBhcmVudHR5IGFuZCB0aGUg
Y2hpbGR0dHkKKyAqIHJlc3BlY3RpdmVseS4gIEFmdGVyIG9wZW5pbmcgdGhlIGNoaWxkdHR5IHRo
ZSBjaGlsZCBmbHVzaGVzIHRoZSBzdHJlYW0KKyAqIGFuZCB3YWtlcyB0aGUgcGFyZW50ICh0aGVy
ZWJ5IGFza2luZyBpdCB0byBjb250aW51ZSBpdHMgdGVzdGluZykuIFRoZQorICogcGFyZW50LCB0
aGVuIHN0YXJ0cyB0aGUgdGVzdGluZy4gSXQgaXNzdWVzIGEgVENHRVRBIGlvY3RsIHRvIGdldCBh
bGwKKyAqIHRoZSB0dHkgcGFyYW1ldGVycy4gSXQgdGhlbiBjaGFuZ2VzIHRoZW0gdG8ga25vd24g
dmFsdWVzIGJ5IGlzc3VpbmcgYQorICogVENTRVRBIGlvY3RsLiBUaGVuIHRoZSBwYXJlbnQgaXNz
dWVzIGEgVENHRVRBIGlvY3RsIGFnYWluIGFuZCBjb21wYXJlcworICogdGhlIHJlY2VpdmVkIHZh
bHVlcyB3aXRoIHdoYXQgaXQgaGFkIHNldCBlYXJsaWVyLiBUaGUgdGVzdCBmYWlscyBpZgorICog
VENHRVRBIG9yIFRDU0VUQSBmYWlscywgb3IgaWYgdGhlIHJlY2VpdmVkIHZhbHVlcyBkb24ndCBt
YXRjaCB0aG9zZQorICogdGhhdCB3ZXJlIHNldC4gVGhlIHBhcmVudCBkb2VzIGFsbCB0aGUgdGVz
dGluZywgdGhlIHJlcXVpcmVtZW50IG9mIHRoZQorICogY2hpbGQgcHJvY2VzcyBpcyB0byBtb25p
dGVyIHRoZSB0ZXN0aW5nIGRvbmUgYnkgdGhlIHBhcmVudCwgYW5kIGhlbmNlCisgKiB0aGUgY2hp
bGQganVzdCB3YWl0cyBmb3IgdGhlIHBhcmVudC4KICAqLwogCiAjaW5jbHVkZSA8c3RkaW8uaD4K
KyNpbmNsdWRlIDxzdGRsaWIuaD4KICNpbmNsdWRlIDxmY250bC5oPgotI2luY2x1ZGUgPHNpZ25h
bC5oPgogI2luY2x1ZGUgPGVycm5vLmg+CiAjaW5jbHVkZSA8c3lzL3dhaXQuaD4KICNpbmNsdWRl
IDxzeXMvdHlwZXMuaD4KICNpbmNsdWRlIDxzeXMvc3RhdC5oPgogI2luY2x1ZGUgPHRlcm1pb3Mu
aD4KLSNpbmNsdWRlICJ0ZXN0LmgiCi0jaW5jbHVkZSAic2FmZV9tYWNyb3MuaCIKLSNpbmNsdWRl
ICJsYXBpL2lvY3RsLmgiCiAKLSNkZWZpbmUJQ05VTAkwCisjaW5jbHVkZSAibGFwaS9pb2N0bC5o
IgogCi1jaGFyICpUQ0lEID0gImlvY3RsMDIiOwotaW50IFRTVF9UT1RBTCA9IDE7CisjaW5jbHVk
ZSAidHN0X2NoZWNrcG9pbnQuaCIKKyNpbmNsdWRlICJ0c3RfdGVzdC5oIgorI2luY2x1ZGUgInRz
dF9zYWZlX21hY3Jvcy5oIgogCiBzdGF0aWMgc3RydWN0IHRlcm1pbyB0ZXJtaW8sIHNhdmVfaW87
CiAKIHN0YXRpYyBjaGFyICpwYXJlbnR0dHksICpjaGlsZHR0eTsKLXN0YXRpYyBpbnQgcGFyZW50
ZmQsIGNoaWxkZmQ7CitzdGF0aWMgaW50IHBhcmVudGZkID0gLTE7CiBzdGF0aWMgaW50IHBhcmVu
dHBpZCwgY2hpbGRwaWQ7Ci1zdGF0aWMgdm9sYXRpbGUgaW50IHNpZ3Rlcm0sIHNpZ3VzcjEsIHNp
Z3VzcjI7Ci1zdGF0aWMgaW50IGNsb3NlZCA9IDE7Ci0KLXN0YXRpYyBpbnQgZG9fY2hpbGRfc2V0
dXAodm9pZCk7Ci1zdGF0aWMgaW50IGRvX3BhcmVudF9zZXR1cCh2b2lkKTsKLXN0YXRpYyBpbnQg
cnVuX3B0ZXN0KHZvaWQpOwotc3RhdGljIGludCBydW5fY3Rlc3Qodm9pZCk7Ci1zdGF0aWMgaW50
IGNoa190dHlfcGFybXMoKTsKKworc3RhdGljIHZvaWQgZG9fY2hpbGQodm9pZCk7CitzdGF0aWMg
dm9pZCBydW5fcHRlc3Qodm9pZCk7CitzdGF0aWMgdm9pZCBjaGtfdHR5X3Bhcm1zKHZvaWQpOwog
c3RhdGljIHZvaWQgc2V0dXAodm9pZCk7CiBzdGF0aWMgdm9pZCBjbGVhbnVwKHZvaWQpOwotc3Rh
dGljIHZvaWQgaGVscCh2b2lkKTsKLXN0YXRpYyB2b2lkIGRvX2NoaWxkKHZvaWQpOwotdm9pZCBk
b19jaGlsZF91Y2xpbnV4KHZvaWQpOwotc3RhdGljIHZvaWQgc2lndGVybV9oYW5kbGVyKHZvaWQp
OwogCi1zdGF0aWMgaW50IERldmZsYWc7Ci1zdGF0aWMgY2hhciAqZGV2bmFtZTsKK3N0YXRpYyBj
aGFyICpkZXZpY2U7CiAKLXN0YXRpYyBvcHRpb25fdCBvcHRpb25zW10gPSB7Ci0JeyJEOiIsICZE
ZXZmbGFnLCAmZGV2bmFtZX0sCi0Je05VTEwsIE5VTEwsIE5VTEx9Ci19OwotCi1pbnQgbWFpbihp
bnQgYWMsIGNoYXIgKiphdikKK3N0YXRpYyB2b2lkIHZlcmlmeV9pb2N0bCh2b2lkKQogewotCWlu
dCBsYzsKLQlpbnQgcnZhbDsKLQotCXRzdF9wYXJzZV9vcHRzKGFjLCBhdiwgb3B0aW9ucywgJmhl
bHApOwotCi0jaWZkZWYgVUNMSU5VWAotCW1heWJlX3J1bl9jaGlsZCgmZG9fY2hpbGRfdWNsaW51
eCwgImRTIiwgJnBhcmVudHBpZCwgJmNoaWxkdHR5KTsKLSNlbmRpZgotCi0JaWYgKCFEZXZmbGFn
KQotCQl0c3RfYnJrbShUQlJPSywgTlVMTCwgIllvdSBtdXN0IHNwZWNpZnkgYSB0dHkgZGV2aWNl
IHdpdGggIgotCQkJICJ0aGUgLUQgb3B0aW9uLiIpOwotCi0JdHN0X3JlcXVpcmVfcm9vdCgpOwot
Ci0Jc2V0dXAoKTsKLQotCWZvciAobGMgPSAwOyBURVNUX0xPT1BJTkcobGMpOyBsYysrKSB7Ci0K
LQkJdHN0X2NvdW50ID0gMDsKLQotCQlwYXJlbnR0dHkgPSBkZXZuYW1lOwotCQljaGlsZHR0eSA9
IGRldm5hbWU7Ci0KLQkJcGFyZW50cGlkID0gZ2V0cGlkKCk7Ci0KLQkJY2hpbGRwaWQgPSBGT1JL
X09SX1ZGT1JLKCk7Ci0JCWlmIChjaGlsZHBpZCA8IDApCi0JCQl0c3RfYnJrbShUQlJPSywgY2xl
YW51cCwgImZvcmsgZmFpbGVkIik7Ci0KLQkJaWYgKGNoaWxkcGlkID09IDApIHsJLyogY2hpbGQg
Ki8KLSNpZmRlZiBVQ0xJTlVYCi0JCQlpZiAoc2VsZl9leGVjKGF2WzBdLCAiZFMiLCBwYXJlbnRw
aWQsIGNoaWxkdHR5KSA8IDApCi0JCQkJdHN0X2Jya20oVEJST0ssIGNsZWFudXAsICJzZWxmX2V4
ZWMgZmFpbGVkIik7Ci0jZWxzZQotCQkJZG9fY2hpbGQoKTsKLSNlbmRpZgotCQl9Ci0KLQkJd2hp
bGUgKCFzaWd1c3IxKQotCQkJc2xlZXAoMSk7Ci0KLQkJc2lndXNyMSA9IDA7Ci0KLQkJcGFyZW50
ZmQgPSBkb19wYXJlbnRfc2V0dXAoKTsKLQkJaWYgKHBhcmVudGZkIDwgMCkgewotCQkJa2lsbChj
aGlsZHBpZCwgU0lHVEVSTSk7Ci0JCQl3YWl0cGlkKGNoaWxkcGlkLCBOVUxMLCAwKTsKLQkJCWNs
ZWFudXAoKTsKLQkJfQotCi0JCS8qIHJ1biB0aGUgcGFyZW50IHRlc3QgKi8KLQkJcnZhbCA9IHJ1
bl9wdGVzdCgpOwotCQlpZiAocnZhbCA9PSAtMSkgewotCQkJLyoKLQkJCSAqIFBhcmVudCBjYW5u
b3Qgc2V0L2dldCBpb2N0bCBwYXJhbWV0ZXJzLgotCQkJICogU0lHVEVSTSB0aGUgY2hpbGQgYW5k
IGNsZWFudXAuCi0JCQkgKi8KLQkJCWtpbGwoY2hpbGRwaWQsIFNJR1RFUk0pOwotCQkJd2FpdHBp
ZChjaGlsZHBpZCwgTlVMTCwgMCk7Ci0JCQljbGVhbnVwKCk7Ci0JCX0KLQotCQlpZiAocnZhbCAh
PSAwKQotCQkJdHN0X3Jlc20oVEZBSUwsICJUQ0dFVEEvVENTRVRBIHRlc3RzIEZBSUxFRCB3aXRo
ICIKLQkJCQkgIiVkICVzIiwgcnZhbCwgcnZhbCA+IDEgPyAiZXJyb3JzIiA6ICJlcnJvciIpOwot
CQllbHNlCi0JCQl0c3RfcmVzbShUUEFTUywgIlRDR0VUQS9UQ1NFVEEgdGVzdHMgU1VDQ0VFREVE
Iik7Ci0KLQkJLyogRklYTUU6IGNoZWNrIHJldHVybiBjb2Rlcy4gKi8KLQkJKHZvaWQpa2lsbChj
aGlsZHBpZCwgU0lHVEVSTSk7Ci0JCSh2b2lkKXdhaXRwaWQoY2hpbGRwaWQsIE5VTEwsIDApOwot
Ci0JCS8qCi0JCSAqIENsZWFuIHVwIHRoaW5ncyBmcm9tIHRoZSBwYXJlbnQgYnkgcmVzdG9yaW5n
IHRoZQotCQkgKiB0dHkgZGV2aWNlIGluZm9ybWF0aW9uIHRoYXQgd2FzIHNhdmVkIGluIHNldHVw
KCkKLQkJICogYW5kIGNsb3NpbmcgdGhlIHR0eSBmaWxlIGRlc2NyaXB0b3IuCi0JCSAqLwotCQlp
ZiAoaW9jdGwocGFyZW50ZmQsIFRDU0VUQSwgJnNhdmVfaW8pID09IC0xKQotCQkJdHN0X3Jlc20o
VElORk8sICJpb2N0bCByZXN0b3JlIGZhaWxlZCBpbiBtYWluIik7Ci0JCVNBRkVfQ0xPU0UoY2xl
YW51cCwgcGFyZW50ZmQpOwotCi0JCWNsb3NlZCA9IDE7CisJcGFyZW50dHR5ID0gZGV2aWNlOwor
CWNoaWxkdHR5ID0gZGV2aWNlOworCisJcGFyZW50cGlkID0gZ2V0cGlkKCk7CisJY2hpbGRwaWQg
PSBTQUZFX0ZPUksoKTsKKwlpZiAoIWNoaWxkcGlkKSB7CisJCWRvX2NoaWxkKCk7CisJCWV4aXQo
RVhJVF9TVUNDRVNTKTsKIAl9Ci0JY2xlYW51cCgpOwogCi0JdHN0X2V4aXQoKTsKLX0KLQotc3Rh
dGljIHZvaWQgZG9fY2hpbGQodm9pZCkKLXsKLQljaGlsZGZkID0gZG9fY2hpbGRfc2V0dXAoKTsK
LQlpZiAoY2hpbGRmZCA8IDApCi0JCV9leGl0KDEpOwotCXJ1bl9jdGVzdCgpOwotCV9leGl0KDAp
OwotfQorCVRTVF9DSEVDS1BPSU5UX1dBSVQoMCk7CiAKLXZvaWQgZG9fY2hpbGRfdWNsaW51eCh2
b2lkKQotewotCXN0cnVjdCBzaWdhY3Rpb24gYWN0OworCXBhcmVudGZkID0gU0FGRV9PUEVOKHBh
cmVudHR0eSwgT19SRFdSLCAwNzc3KTsKKwkvKiBmbHVzaCB0dHkgcXVldWVzIHRvIHJlbW92ZSBv
bGQgb3V0cHV0ICovCisJU0FGRV9JT0NUTChwYXJlbnRmZCwgVENGTFNILCAyKTsKIAotCS8qIFNl
dCB1cCB0aGUgc2lnbmFsIGhhbmRsZXJzIGFnYWluICovCi0JYWN0LnNhX2hhbmRsZXIgPSAodm9p
ZCAqKXNpZ3Rlcm1faGFuZGxlcjsKLQlhY3Quc2FfZmxhZ3MgPSAwOwotCXNpZ2VtcHR5c2V0KCZh
Y3Quc2FfbWFzayk7Ci0JKHZvaWQpc2lnYWN0aW9uKFNJR1RFUk0sICZhY3QsIDApOworCXJ1bl9w
dGVzdCgpOwogCi0JLyogUnVuIHRoZSBub3JtYWwgY2hpbGQgKi8KLQlkb19jaGlsZCgpOworCVRT
VF9DSEVDS1BPSU5UX1dBS0UoMCk7CiB9CiAKIC8qCiAgKiBydW5fcHRlc3QoKSAtIHNldHVwIHRo
ZSB2YXJpb3VzIHRlcm1pbyBzdHJ1Y3R1cmUgdmFsdWVzIGFuZCBpc3N1ZQogICoJCSB0aGUgVENT
RVRBIGlvY3RsIGNhbGwgd2l0aCB0aGUgVEVTVCBtYWNyby4KICAqLwotc3RhdGljIGludCBydW5f
cHRlc3Qodm9pZCkKK3N0YXRpYyB2b2lkIHJ1bl9wdGVzdCh2b2lkKQogewotCWludCBpLCBydmFs
OwotCiAJLyogVXNlICJvbGQiIGxpbmUgZGlzY2lwbGluZSAqLwogCXRlcm1pby5jX2xpbmUgPSAw
OwogCkBAIC0yMzAsNyArODksNyBAQCBzdGF0aWMgaW50IHJ1bl9wdGVzdCh2b2lkKQogCXRlcm1p
by5jX2NmbGFnID0gQjUwIHwgQ1M3IHwgQ1JFQUQgfCBQQVJFTkIgfCBQQVJPREQgfCBDTE9DQUw7
CiAKIAkvKiBTZXQgY29udHJvbCBjaGFycy4gKi8KLQlmb3IgKGkgPSAwOyBpIDwgTkNDOyBpKysp
IHsKKwlmb3IgKGludCBpID0gMDsgaSA8IE5DQzsgaSsrKSB7CiAJCWlmIChpID09IFZFT0wyKQog
CQkJY29udGludWU7CiAJCXRlcm1pby5jX2NjW2ldID0gQ1NUQVJUOwpAQCAtMjQ4LDQ3ICsxMDcs
MTkgQEAgc3RhdGljIGludCBydW5fcHRlc3Qodm9pZCkKIAkvKiBTZXQgb3V0cHV0IG1vZGVzLiAq
LwogCXRlcm1pby5jX29mbGFnID0gT1BPU1QgfCBPTENVQyB8IE9OTENSIHwgT05PQ1I7CiAKLQlU
RVNUKGlvY3RsKHBhcmVudGZkLCBUQ1NFVEEsICZ0ZXJtaW8pKTsKLQotCWlmIChURVNUX1JFVFVS
TiA8IDApIHsKLQkJdHN0X3Jlc20oVEZBSUwsICJpb2N0bCBUQ1NFVEEgZmFpbGVkIDogIgotCQkJ
ICJlcnJubyA9ICVkIiwgVEVTVF9FUlJOTyk7Ci0JCXJldHVybiAtMTsKLQl9CisJU0FGRV9JT0NU
TChwYXJlbnRmZCwgVENTRVRBLCAmdGVybWlvKTsKIAogCS8qIEdldCB0ZXJtaW8gYW5kIHNlZSBp
ZiBhbGwgcGFyYW1ldGVycyBhY3R1YWxseSBnb3Qgc2V0ICovCi0JcnZhbCA9IGlvY3RsKHBhcmVu
dGZkLCBUQ0dFVEEsICZ0ZXJtaW8pOwotCWlmIChydmFsIDwgMCkgewotCQl0c3RfcmVzbShURkFJ
TCwgImlvY3RsIFRDR0VUQSBmYWlsZWQuICBFbmRpbmcgdGVzdC4iKTsKLQkJcmV0dXJuIC0xOwot
CX0KLQotCXJldHVybiBjaGtfdHR5X3Bhcm1zKCk7CisJU0FGRV9JT0NUTChwYXJlbnRmZCwgVENH
RVRBLCAmdGVybWlvKTsKKwljaGtfdHR5X3Bhcm1zKCk7CiB9CiAKLXN0YXRpYyBpbnQgcnVuX2N0
ZXN0KHZvaWQpCi17Ci0JLyoKLQkgKiBXYWl0IHRpbGwgdGhlIHBhcmVudCBoYXMgZmluaXNoZWQg
dGVzdGluZy4KLQkgKi8KLQl3aGlsZSAoIXNpZ3Rlcm0pCi0JCXNsZWVwKDEpOwotCi0Jc2lndGVy
bSA9IDA7Ci0KLQl0c3RfcmVzbShUSU5GTywgImNoaWxkOiBHb3QgU0lHVEVSTSBmcm9tIHBhcmVu
dC4iKTsKLQotCWlmIChjbG9zZShjaGlsZGZkKSA9PSAtMSkKLQkJdHN0X3Jlc20oVElORk8sICJj
bG9zZSgpIGluIHJ1bl9jdGVzdCgpIGZhaWxlZCIpOwotCXJldHVybiAwOwotfQotCi1zdGF0aWMg
aW50IGNoa190dHlfcGFybXModm9pZCkKK3N0YXRpYyB2b2lkIGNoa190dHlfcGFybXModm9pZCkK
IHsKIAlpbnQgaSwgZmxhZyA9IDA7CiAKIAlpZiAodGVybWlvLmNfbGluZSAhPSAwKSB7Ci0JCXRz
dF9yZXNtKFRJTkZPLCAibGluZSBkaXNjaXBsaW5lIGhhcyBpbmNvcnJlY3QgdmFsdWUgJW8iLAor
CQl0c3RfcmVzKFRGQUlMLCAibGluZSBkaXNjaXBsaW5lIGhhcyBpbmNvcnJlY3QgdmFsdWUgJW8i
LAogCQkJIHRlcm1pby5jX2xpbmUpOwogCQlmbGFnKys7CiAJfQpAQCAtMzAxLDcgKzEzMiw3IEBA
IHN0YXRpYyBpbnQgY2hrX3R0eV9wYXJtcyh2b2lkKQogCSAqLwogI2lmIDAKIAlpZiAodGVybWlv
LmNfY2ZsYWcgIT0gKEI1MCB8IENTNyB8IENSRUFEIHwgUEFSRU5CIHwgUEFST0REIHwgQ0xPQ0FM
KSkgewotCQl0c3RfcmVzbShUSU5GTywgImNmbGFnIGhhcyBpbmNvcnJlY3QgdmFsdWUuICVvIiwK
KwkJdHN0X3JlcyhURkFJTCwgImNmbGFnIGhhcyBpbmNvcnJlY3QgdmFsdWUuICVvIiwKIAkJCSB0
ZXJtaW8uY19jZmxhZyk7CiAJCWZsYWcrKzsKIAl9CkBAIC0zMDksMTkgKzE0MCwxOCBAQCBzdGF0
aWMgaW50IGNoa190dHlfcGFybXModm9pZCkKIAogCWZvciAoaSA9IDA7IGkgPCBOQ0M7IGkrKykg
ewogCQlpZiAoaSA9PSBWRU9MMikgewotCQkJaWYgKHRlcm1pby5jX2NjW1ZFT0wyXSA9PSBDTlVM
KSB7CisJCQlpZiAoIXRlcm1pby5jX2NjW2ldKSB7CiAJCQkJY29udGludWU7CiAJCQl9IGVsc2Ug
ewotCQkJCXRzdF9yZXNtKFRJTkZPLCAiY29udHJvbCBjaGFyICVkIGhhcyAiCi0JCQkJCSAiaW5j
b3JyZWN0IHZhbHVlICVkICVkIiwgaSwKLQkJCQkJIHRlcm1pby5jX2NjW2ldLCBDTlVMKTsKKwkJ
CQl0c3RfcmVzKFRGQUlMLCAiY29udHJvbCBjaGFyICVkIGhhcyAiCisJCQkJCSAiaW5jb3JyZWN0
IHZhbHVlICVkIiwgaSwgdGVybWlvLmNfY2NbaV0pOwogCQkJCWZsYWcrKzsKIAkJCQljb250aW51
ZTsKIAkJCX0KIAkJfQogCiAJCWlmICh0ZXJtaW8uY19jY1tpXSAhPSBDU1RBUlQpIHsKLQkJCXRz
dF9yZXNtKFRJTkZPLCAiY29udHJvbCBjaGFyICVkIGhhcyBpbmNvcnJlY3QgIgorCQkJdHN0X3Jl
cyhURkFJTCwgImNvbnRyb2wgY2hhciAlZCBoYXMgaW5jb3JyZWN0ICIKIAkJCQkgInZhbHVlICVk
LiIsIGksIHRlcm1pby5jX2NjW2ldKTsKIAkJCWZsYWcrKzsKIAkJfQpAQCAtMzMwLDcgKzE2MCw3
IEBAIHN0YXRpYyBpbnQgY2hrX3R0eV9wYXJtcyh2b2lkKQogCWlmICghCiAJICAgICh0ZXJtaW8u
Y19sZmxhZwogCSAgICAgJiYgKElTSUcgfCBJQ0FOT04gfCBYQ0FTRSB8IEVDSE8gfCBFQ0hPRSB8
IE5PRkxTSCkpKSB7Ci0JCXRzdF9yZXNtKFRJTkZPLCAibGZsYWcgaGFzIGluY29ycmVjdCB2YWx1
ZS4gJW8iLAorCQl0c3RfcmVzKFRGQUlMLCAibGZsYWcgaGFzIGluY29ycmVjdCB2YWx1ZS4gJW8i
LAogCQkJIHRlcm1pby5jX2xmbGFnKTsKIAkJZmxhZysrOwogCX0KQEAgLTMzOSwxMzAgKzE2OSw2
NCBAQCBzdGF0aWMgaW50IGNoa190dHlfcGFybXModm9pZCkKIAkgICAgKHRlcm1pby5jX2lmbGFn
CiAJICAgICAmJiAoQlJLSU5UIHwgSUdOUEFSIHwgSU5QQ0sgfCBJU1RSSVAgfCBJQ1JOTCB8IElV
Q0xDIHwgSVhPTiB8IElYQU5ZCiAJCSB8IElYT0ZGKSkpIHsKLQkJdHN0X3Jlc20oVElORk8sICJp
ZmxhZyBoYXMgaW5jb3JyZWN0IHZhbHVlLiAlbyIsCisJCXRzdF9yZXMoVEZBSUwsICJpZmxhZyBo
YXMgaW5jb3JyZWN0IHZhbHVlLiAlbyIsCiAJCQkgdGVybWlvLmNfaWZsYWcpOwogCQlmbGFnKys7
CiAJfQogCiAJaWYgKCEodGVybWlvLmNfb2ZsYWcgJiYgKE9QT1NUIHwgT0xDVUMgfCBPTkxDUiB8
IE9OT0NSKSkpIHsKLQkJdHN0X3Jlc20oVElORk8sICJvZmxhZyBoYXMgaW5jb3JyZWN0IHZhbHVl
LiAlbyIsCisJCXRzdF9yZXMoVEZBSUwsICJvZmxhZyBoYXMgaW5jb3JyZWN0IHZhbHVlLiAlbyIs
CiAJCQkgdGVybWlvLmNfb2ZsYWcpOwogCQlmbGFnKys7CiAJfQogCiAJaWYgKCFmbGFnKQotCQl0
c3RfcmVzbShUSU5GTywgInRlcm1pbyB2YWx1ZXMgYXJlIHNldCBhcyBleHBlY3RlZCIpOwotCi0J
cmV0dXJuIGZsYWc7CisJCXRzdF9yZXMoVFBBU1MsICJUQ0dFVEEvVENTRVRBIHRlc3RzIik7CiB9
CiAKLXN0YXRpYyBpbnQgZG9fcGFyZW50X3NldHVwKHZvaWQpCi17Ci0JaW50IHBmZDsKLQotCXBm
ZCA9IFNBRkVfT1BFTihjbGVhbnVwLCBwYXJlbnR0dHksIE9fUkRXUiwgMDc3Nyk7Ci0KLQkvKiB1
bnNldCB0aGUgY2xvc2VkIGZsYWcgKi8KLQljbG9zZWQgPSAwOwotCi0JLyogZmx1c2ggdHR5IHF1
ZXVlcyB0byByZW1vdmUgb2xkIG91dHB1dCAqLwotCVNBRkVfSU9DVEwoY2xlYW51cCwgcGZkLCBU
Q0ZMU0gsIDIpOwotCXJldHVybiBwZmQ7Ci19Ci0KLXN0YXRpYyBpbnQgZG9fY2hpbGRfc2V0dXAo
dm9pZCkKK3N0YXRpYyB2b2lkIGRvX2NoaWxkKHZvaWQpCiB7Ci0JaW50IGNmZDsKLQotCWNmZCA9
IG9wZW4oY2hpbGR0dHksIE9fUkRXUiwgMDc3Nyk7Ci0JaWYgKGNmZCA8IDApIHsKLQkJdHN0X3Jl
c20oVElORk8sICJDb3VsZCBub3Qgb3BlbiAlcyBpbiBkb19jaGlsZF9zZXR1cCgpLCBlcnJubyAi
Ci0JCQkgIj0gJWQiLCBjaGlsZHR0eSwgZXJybm8pOwotCQkvKiBzaWduYWwgdGhlIHBhcmVudCBz
byB3ZSBkb24ndCBoYW5nIHRoZSB0ZXN0ICovCi0JCWtpbGwocGFyZW50cGlkLCBTSUdVU1IxKTsK
LQkJcmV0dXJuIC0xOwotCX0KKwlpbnQgY2ZkID0gU0FGRV9PUEVOKGNoaWxkdHR5LCBPX1JEV1Is
IDA3NzcpOwogCiAJLyogZmx1c2ggdHR5IHF1ZXVlcyB0byByZW1vdmUgb2xkIG91dHB1dCAqLwot
CWlmIChpb2N0bChjZmQsIFRDRkxTSCwgMikgPCAwKSB7Ci0JCXRzdF9yZXNtKFRJTkZPLCAiaW9j
dGwgVENGTFNIIGZhaWxlZC4gOiBlcnJubyA9ICVkIiwgZXJybm8pOwotCQkvKiBzaWduYWwgdGhl
IHBhcmVudCBzbyB3ZSBkb24ndCBoYW5nIHRoZSB0ZXN0ICovCi0JCWtpbGwocGFyZW50cGlkLCBT
SUdVU1IxKTsKLQkJcmV0dXJuIC0xOwotCX0KKwlTQUZFX0lPQ1RMKGNmZCwgVENGTFNILCAyKTsK
IAogCS8qIHRlbGwgdGhlIHBhcmVudCB0aGF0IHdlJ3JlIGRvbmUgKi8KLQlraWxsKHBhcmVudHBp
ZCwgU0lHVVNSMSk7Ci0KLQlyZXR1cm4gY2ZkOwotfQotCi0vKgotICogRGVmaW5lIHRoZSBzaWdu
YWxzIGhhbmRsZXJzIGhlcmUuCi0gKi8KLXN0YXRpYyB2b2lkIHNpZ3Rlcm1faGFuZGxlcih2b2lk
KQotewotCXNpZ3Rlcm0gPSAxOwotfQotCi1zdGF0aWMgdm9pZCBzaWd1c3IxX2hhbmRsZXIodm9p
ZCkKLXsKLQlzaWd1c3IxID0gMTsKLX0KLQotc3RhdGljIHZvaWQgc2lndXNyMl9oYW5kbGVyKHZv
aWQpCi17Ci0Jc2lndXNyMiA9IDE7Ci19CisJVFNUX0NIRUNLUE9JTlRfV0FLRSgwKTsKIAotc3Rh
dGljIHZvaWQgaGVscCh2b2lkKQotewotCXByaW50ZigiICAtRCA8dHR5IGRldmljZT4gOiBmb3Ig
ZXhhbXBsZSwgL2Rldi90dHlbMC05XVxuIik7CisJVFNUX0NIRUNLUE9JTlRfV0FJVCgwKTsKKwl0
c3RfcmVzKFRJTkZPLCAiY2hpbGQ6IHBhcmVudCBoYXMgZmluaXNoZWQgdGVzdGluZyIpOworCVNB
RkVfQ0xPU0UoY2ZkKTsKIH0KIAogc3RhdGljIHZvaWQgc2V0dXAodm9pZCkKIHsKLQlpbnQgZmQ7
Ci0Jc3RydWN0IHNpZ2FjdGlvbiBhY3Q7Ci0KLQkvKiBYWFg6IFRFUlJOTyByZXF1aXJlZCBhbGwg
b3ZlciB0aGUgcGxhY2UgKi8KLQlmZCA9IFNBRkVfT1BFTihOVUxMLCBkZXZuYW1lLCBPX1JEV1Is
IDA3NzcpOwotCi0JLyogU2F2ZSB0aGUgY3VycmVudCBkZXZpY2UgaW5mb3JtYXRpb24gLSB0byBi
ZSByZXN0b3JlZCBpbiBjbGVhbnVwKCkgKi8KLQlTQUZFX0lPQ1RMKGNsZWFudXAsIGZkLCBUQ0dF
VEEsICZzYXZlX2lvKTsKLQotCS8qIENsb3NlIHRoZSBkZXZpY2UgKi8KLQlTQUZFX0NMT1NFKGNs
ZWFudXAsIGZkKTsKLQotCS8qIFNldCB1cCB0aGUgc2lnbmFsIGhhbmRsZXJzICovCi0JYWN0LnNh
X2hhbmRsZXIgPSAodm9pZCAqKXNpZ3Rlcm1faGFuZGxlcjsKLQlhY3Quc2FfZmxhZ3MgPSAwOwot
CXNpZ2VtcHR5c2V0KCZhY3Quc2FfbWFzayk7Ci0JKHZvaWQpc2lnYWN0aW9uKFNJR1RFUk0sICZh
Y3QsIDApOworCWlmICghZGV2aWNlKQorCQl0c3RfYnJrKFRCUk9LLCAiWW91IG11c3Qgc3BlY2lm
eSBhIHR0eSBkZXZpY2Ugd2l0aCAtRCBvcHRpb24iKTsKIAotCWFjdC5zYV9oYW5kbGVyID0gKHZv
aWQgKilzaWd1c3IxX2hhbmRsZXI7Ci0JYWN0LnNhX2ZsYWdzID0gMDsKLQkodm9pZClzaWdhY3Rp
b24oU0lHVVNSMSwgJmFjdCwgMCk7CisJaW50IGZkID0gU0FGRV9PUEVOKGRldmljZSwgT19SRFdS
LCAwNzc3KTsKIAotCWFjdC5zYV9oYW5kbGVyID0gKHZvaWQgKilzaWd1c3IyX2hhbmRsZXI7Ci0J
YWN0LnNhX2ZsYWdzID0gMDsKLQkodm9pZClzaWdhY3Rpb24oU0lHVVNSMiwgJmFjdCwgMCk7Ci0K
LQlhY3Quc2FfaGFuZGxlciA9IFNJR19JR047Ci0JYWN0LnNhX2ZsYWdzID0gMDsKLQkodm9pZClz
aWdhY3Rpb24oU0lHVFRPVSwgJmFjdCwgMCk7Ci0KLQlzaWd0ZXJtID0gc2lndXNyMSA9IHNpZ3Vz
cjIgPSAwOwotCi0JVEVTVF9QQVVTRTsKKwlTQUZFX0lPQ1RMKGZkLCBUQ0dFVEEsICZzYXZlX2lv
KTsKKwlTQUZFX0NMT1NFKGZkKTsKIH0KIAogc3RhdGljIHZvaWQgY2xlYW51cCh2b2lkKQogewot
CWlmICghY2xvc2VkKSB7Ci0JCWlmIChpb2N0bChwYXJlbnRmZCwgVENTRVRBLCAmc2F2ZV9pbykg
PT0gLTEpCi0JCQl0c3RfcmVzbShUSU5GTywgImlvY3RsIHJlc3RvcmUgZmFpbGVkIGluIGNsZWFu
dXAoKSIpOwotCQlpZiAoY2xvc2UocGFyZW50ZmQpID09IC0xKQotCQkJdHN0X3Jlc20oVElORk8s
ICJjbG9zZSgpIGZhaWxlZCBpbiBjbGVhbnVwKCkiKTsKKwlpZiAocGFyZW50ZmQgPj0gMCkgewor
CQlTQUZFX0lPQ1RMKHBhcmVudGZkLCBUQ1NFVEEsICZzYXZlX2lvKTsKKwkJU0FGRV9DTE9TRShw
YXJlbnRmZCk7CiAJfQogfQorCitzdGF0aWMgc3RydWN0IHRzdF90ZXN0IHRlc3QgPSB7CisJLm5l
ZWRzX3Jvb3QgPSAxLAorCS5uZWVkc19jaGVja3BvaW50cyA9IDEsCisJLmZvcmtzX2NoaWxkID0g
MSwKKwkuc2V0dXAgPSBzZXR1cCwKKwkuY2xlYW51cCA9IGNsZWFudXAsCisJLnRlc3RfYWxsID0g
dmVyaWZ5X2lvY3RsLAorCS5vcHRpb25zID0gKHN0cnVjdCB0c3Rfb3B0aW9uW10pIHsKKwkJeyJE
OiIsICZkZXZpY2UsICJUdHkgZGV2aWNlLiBGb3IgZXhhbXBsZSwgL2Rldi90dHlbMC05XSJ9LAor
CQl7fQorCX0KK307ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQotLSAKMi40Mi4wCgoKLS0g
Ck1haWxpbmcgbGlzdCBpbmZvOiBodHRwczovL2xpc3RzLmxpbnV4Lml0L2xpc3RpbmZvL2x0cAo=
