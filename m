Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [213.254.12.146])
	by mail.lfdr.de (Postfix) with ESMTPS id 9E16B1A304
	for <lists+linux-ltp@lfdr.de>; Fri, 10 May 2019 20:31:55 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id 97E963EA27F
	for <lists+linux-ltp@lfdr.de>; Fri, 10 May 2019 20:31:54 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-4.smtp.seeweb.it (in-4.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::4])
 by picard.linux.it (Postfix) with ESMTP id 12FCF3EA16D
 for <ltp@lists.linux.it>; Fri, 10 May 2019 20:31:43 +0200 (CEST)
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by in-4.smtp.seeweb.it (Postfix) with ESMTPS id 780FD1000D49
 for <ltp@lists.linux.it>; Fri, 10 May 2019 20:31:39 +0200 (CEST)
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id A629DAEEE;
 Fri, 10 May 2019 18:31:41 +0000 (UTC)
From: Petr Vorel <pvorel@suse.cz>
To: ltp@lists.linux.it
Date: Fri, 10 May 2019 20:31:28 +0200
Message-Id: <20190510183132.31039-3-pvorel@suse.cz>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190510183132.31039-1-pvorel@suse.cz>
References: <20190510183132.31039-1-pvorel@suse.cz>
MIME-Version: 1.0
X-Virus-Scanned: clamav-milter 0.99.2 at in-4.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=-0.0 required=7.0 tests=SPF_PASS autolearn=disabled
 version=3.4.0
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on in-4.smtp.seeweb.it
Subject: [LTP] [RFC PATCH v2 2/6] net: Introduce TST_GET_UNUSED_PORT() macro
	into C API
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

aW50byBib3RoIG5ldyBhbmQgbGVnYWN5IEFQSS4KVGhlcmVmb3JlIHRzdF9nZXRfdW51c2VkX3Bv
cnQoKSB3YXMgcG9ydGVkIGludG8gbmV3IEMgQVBJLgoKQWRkaW5nIFRTVF9HRVRfVU5VU0VEX1BP
UlQoKSB3YXMgbmVlZGVkIHRvIGFkZCBzdXBwb3J0IGZvciBwcmludGluZwpmaWxlIGFuZCBsaW5l
IGluIGVycm9yIG1lc3NhZ2VzIHBhc3NlZCB0c3RfYnJrbSgpLgoKKyBkZWxldGVkIGxpYi90c3Rf
bmV0LmMgKG5ldCBmdW5jdGlvbnMgZm9yIGxlZ2FjeSBDIEFQSSkuCisgbW92ZSB0c3RfKiBmdW5j
dGlvbiBwcm90b3R5cGVzIGluIGhlYWRlcnMgdG8gdGhlIGVuZAoocGFydGx5IHNvcnQgYWxwaGFi
ZXRpY2FsbHkpLgoKU2lnbmVkLW9mZi1ieTogUGV0ciBWb3JlbCA8cHZvcmVsQHN1c2UuY3o+Ci0t
LQoKVFNUX0dFVF9VTlVTRURfUE9SVCgpIGlzIHVzZWQgaW4gcm91dGUgY29kZSwgYnV0IHRoYXQn
cyBub3QgbmVjZXNzYXJ5CigiMCIgd291bGQgd29yayBhcyB3ZWxsKS4KCiBpbmNsdWRlL29sZC9v
bGRfc2FmZV9uZXQuaCAgICAgICAgICAgICAgICAgICAgfCAgMyArCiBpbmNsdWRlL29sZC90ZXN0
LmggICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgNyAtLQogaW5jbHVkZS9zYWZlX25ldF9m
bi5oICAgICAgICAgICAgICAgICAgICAgICAgIHwgMTMgKy0tCiBpbmNsdWRlL3RzdF9zYWZlX25l
dC5oICAgICAgICAgICAgICAgICAgICAgICAgfCAgOSArLQogbGliL3NhZmVfbmV0LmMgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHwgNjYgKysrKysrKysrKysrKysKIGxpYi90c3RfbmV0
LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDg5IC0tLS0tLS0tLS0tLS0tLS0t
LS0KIHRlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvYmluZC9iaW5kMDEuYyAgICAgICB8ICAyICst
CiB0ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2Nvbm5lY3QvY29ubmVjdDAxLmMgfCAgMiArLQog
dGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9zZW5kbXNnL3NlbmRtc2cwMS5jIHwgIDIgKy0KIHRv
b2xzL2FwaWNtZHMvbHRwYXBpY21kLmMgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiAxMCBm
aWxlcyBjaGFuZ2VkLCA4NyBpbnNlcnRpb25zKCspLCAxMDggZGVsZXRpb25zKC0pCiBkZWxldGUg
bW9kZSAxMDA2NDQgbGliL3RzdF9uZXQuYwoKZGlmZiAtLWdpdCBhL2luY2x1ZGUvb2xkL29sZF9z
YWZlX25ldC5oIGIvaW5jbHVkZS9vbGQvb2xkX3NhZmVfbmV0LmgKaW5kZXggNjA5Nzg3YjMyLi42
MzkwOTRhOTQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvb2xkL29sZF9zYWZlX25ldC5oCisrKyBiL2lu
Y2x1ZGUvb2xkL29sZF9zYWZlX25ldC5oCkBAIC00NCw0ICs0NCw3IEBACiAJc2FmZV9nZXRzb2Nr
bmFtZShfX0ZJTEVfXywgX19MSU5FX18sIChjbGVhbnVwX2ZuKSwgc29ja2ZkLCBhZGRyLCBcCiAJ
CQkgYWRkcmxlbikKIAorI2RlZmluZSBUU1RfR0VUX1VOVVNFRF9QT1JUKGNsZWFudXBfZm4sIGZh
bWlseSwgdHlwZSkgXAorCXRzdF9nZXRfdW51c2VkX3BvcnQoX19GSUxFX18sIF9fTElORV9fLCAo
Y2xlYW51cF9mbiksIGZhbWlseSwgdHlwZSkKKwogI2VuZGlmIC8qIE9MRF9TQUZFX05FVF9IX18g
Ki8KZGlmZiAtLWdpdCBhL2luY2x1ZGUvb2xkL3Rlc3QuaCBiL2luY2x1ZGUvb2xkL3Rlc3QuaApp
bmRleCAwNzM4MjM3ZTkuLjYwNDI1NGVlYSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9vbGQvdGVzdC5o
CisrKyBiL2luY2x1ZGUvb2xkL3Rlc3QuaApAQCAtMTk1LDEzICsxOTUsNiBAQCB2b2lkIHRzdF9t
a2ZzXyhjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLCB2b2lkIChjbGVhbnVwX2Zu
KSh2b2lkKSwKIAkgICAgICAgY29uc3QgY2hhciAqZGV2LCBjb25zdCBjaGFyICpmc190eXBlLAog
CSAgICAgICBjb25zdCBjaGFyICpjb25zdCBmc19vcHRzW10sIGNvbnN0IGNoYXIgKmNvbnN0IGV4
dHJhX29wdHNbXSk7CiAKLS8qIGxpYi90c3RfbmV0LmMKLSAqCi0gKiBSZXR1cm4gdW51c2VkIHBv
cnQKLSAqLwotdW5zaWduZWQgc2hvcnQgdHN0X2dldF91bnVzZWRfcG9ydCh2b2lkIChjbGVhbnVw
X2ZuKSh2b2lkKSwKLQl1bnNpZ25lZCBzaG9ydCBmYW1pbHksIGludCB0eXBlKTsKLQogLyogbGli
L3RzdF9yZXMuYwogICogdHN0X3N0cnNpZyBjb252ZXJ0cyBzaWduYWwncyB2YWx1ZSB0byBjb3Jy
ZXNwb25kaW5nIHN0cmluZy4KICAqIHRzdF9zdHJlcnJubyBjb252ZXJ0cyBlcnJubyB0byBjb3Jy
ZXNwb25kaW5nIHN0cmluZy4KZGlmZiAtLWdpdCBhL2luY2x1ZGUvc2FmZV9uZXRfZm4uaCBiL2lu
Y2x1ZGUvc2FmZV9uZXRfZm4uaAppbmRleCAzMTgzYjJhMWMuLmZkYmIzNzkxYyAxMDA2NDQKLS0t
IGEvaW5jbHVkZS9zYWZlX25ldF9mbi5oCisrKyBiL2luY2x1ZGUvc2FmZV9uZXRfZm4uaApAQCAt
MjUsMTEgKzI1LDYgQEAKICNpbmNsdWRlIDxhcnBhL2luZXQuaD4KICNpbmNsdWRlIDxzeXMvdW4u
aD4KIAotY2hhciAqdHN0X3NvY2tfYWRkcihjb25zdCBzdHJ1Y3Qgc29ja2FkZHIgKnNhLCBzb2Nr
bGVuX3Qgc2FsZW4sIGNoYXIgKnJlcywKLQkJICAgIHNpemVfdCBsZW4pOwotCi1pbnQgdHN0X2dl
dHNvY2twb3J0KGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sIGludCBzb2NrZmQp
OwotCiBpbnQgc2FmZV9zb2NrZXQoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywg
dm9pZCAoY2xlYW51cF9mbikodm9pZCksCiAJCWludCBkb21haW4sIGludCB0eXBlLCBpbnQgcHJv
dG9jb2wpOwogCkBAIC03Miw0ICs2NywxMiBAQCBpbnQgc2FmZV9nZXRzb2NrbmFtZShjb25zdCBj
aGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAogaW50IHNhZmVfZ2V0aG9zdG5hbWUoY29uc3Qg
Y2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKIAkJICAgICBjaGFyICpuYW1lLCBzaXplX3Qg
c2l6ZSk7CiAKK2ludCB0c3RfZ2V0c29ja3BvcnQoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50
IGxpbmVubywgaW50IHNvY2tmZCk7CisKK3Vuc2lnbmVkIHNob3J0IHRzdF9nZXRfdW51c2VkX3Bv
cnQoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwkgICAgICB2b2lkIChjbGVh
bnVwX2ZuKSh2b2lkKSwgdW5zaWduZWQgc2hvcnQgZmFtaWx5LCBpbnQgdHlwZSk7CisKK2NoYXIg
KnRzdF9zb2NrX2FkZHIoY29uc3Qgc3RydWN0IHNvY2thZGRyICpzYSwgc29ja2xlbl90IHNhbGVu
LCBjaGFyICpyZXMsCisJCSAgICBzaXplX3QgbGVuKTsKKwogI2VuZGlmIC8qIFNBRkVfTkVUX0ZO
X0hfXyAqLwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS90c3Rfc2FmZV9uZXQuaCBiL2luY2x1ZGUvdHN0
X3NhZmVfbmV0LmgKaW5kZXggODNhMmYyN2JmLi5kNDlhMzYwNzMgMTAwNjQ0Ci0tLSBhL2luY2x1
ZGUvdHN0X3NhZmVfbmV0LmgKKysrIGIvaW5jbHVkZS90c3Rfc2FmZV9uZXQuaApAQCAtMjYsOSAr
MjYsNiBAQAogCiAjaW5jbHVkZSAic2FmZV9uZXRfZm4uaCIKIAotI2RlZmluZSBUU1RfR0VUU09D
S1BPUlQoc29ja2ZkKSBcCi0JdHN0X2dldHNvY2twb3J0KF9fRklMRV9fLCBfX0xJTkVfXywgc29j
a2ZkKQotCiAjZGVmaW5lIFNBRkVfU09DS0VUKGRvbWFpbiwgdHlwZSwgcHJvdG9jb2wpIFwKIAlz
YWZlX3NvY2tldChfX0ZJTEVfXywgX19MSU5FX18sIE5VTEwsIGRvbWFpbiwgdHlwZSwgcHJvdG9j
b2wpCiAKQEAgLTc3LDQgKzc0LDEwIEBACiAjZGVmaW5lIFNBRkVfR0VUSE9TVE5BTUUobmFtZSwg
c2l6ZSkgXAogCXNhZmVfZ2V0aG9zdG5hbWUoX19GSUxFX18sIF9fTElORV9fLCBuYW1lLCBzaXpl
KQogCisjZGVmaW5lIFRTVF9HRVRTT0NLUE9SVChzb2NrZmQpIFwKKwl0c3RfZ2V0c29ja3BvcnQo
X19GSUxFX18sIF9fTElORV9fLCBzb2NrZmQpCisKKyNkZWZpbmUgVFNUX0dFVF9VTlVTRURfUE9S
VChmYW1pbHksIHR5cGUpIFwKKwl0c3RfZ2V0X3VudXNlZF9wb3J0KF9fRklMRV9fLCBfX0xJTkVf
XywgTlVMTCwgZmFtaWx5LCB0eXBlKQorCiAjZW5kaWYgLyogVFNUX1NBRkVfTkVUX0hfXyAqLwpk
aWZmIC0tZ2l0IGEvbGliL3NhZmVfbmV0LmMgYi9saWIvc2FmZV9uZXQuYwppbmRleCBlODQ5ZDgx
N2EuLjk3MGEyYWJhMyAxMDA2NDQKLS0tIGEvbGliL3NhZmVfbmV0LmMKKysrIGIvbGliL3NhZmVf
bmV0LmMKQEAgLTM3MiwzICszNzIsNjkgQEAgaW50IHNhZmVfZ2V0aG9zdG5hbWUoY29uc3QgY2hh
ciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKIAogCXJldHVybiBydmFsOwogfQorCit1bnNpZ25l
ZCBzaG9ydCB0c3RfZ2V0X3VudXNlZF9wb3J0KGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBs
aW5lbm8sCisJICAgICAgdm9pZCAoY2xlYW51cF9mbikodm9pZCksIHVuc2lnbmVkIHNob3J0IGZh
bWlseSwgaW50IHR5cGUpCit7CisJaW50IHNvY2s7CisJc29ja2xlbl90IHNsZW47CisJc3RydWN0
IHNvY2thZGRyX3N0b3JhZ2UgX2FkZHI7CisJc3RydWN0IHNvY2thZGRyICphZGRyID0gKHN0cnVj
dCBzb2NrYWRkciAqKSZfYWRkcjsKKwlzdHJ1Y3Qgc29ja2FkZHJfaW4gKmFkZHI0ID0gKHN0cnVj
dCBzb2NrYWRkcl9pbiAqKWFkZHI7CisJc3RydWN0IHNvY2thZGRyX2luNiAqYWRkcjYgPSAoc3Ry
dWN0IHNvY2thZGRyX2luNiAqKWFkZHI7CisKKwlzd2l0Y2ggKGZhbWlseSkgeworCWNhc2UgQUZf
SU5FVDoKKwkJYWRkcjQtPnNpbl9mYW1pbHkgPSBBRl9JTkVUOworCQlhZGRyNC0+c2luX3BvcnQg
PSAwOworCQlhZGRyNC0+c2luX2FkZHIuc19hZGRyID0gSU5BRERSX0FOWTsKKwkJc2xlbiA9IHNp
emVvZigqYWRkcjQpOworCQlicmVhazsKKworCWNhc2UgQUZfSU5FVDY6CisJCWFkZHI2LT5zaW42
X2ZhbWlseSA9IEFGX0lORVQ2OworCQlhZGRyNi0+c2luNl9wb3J0ID0gMDsKKwkJYWRkcjYtPnNp
bjZfYWRkciA9IGluNmFkZHJfYW55OworCQlzbGVuID0gc2l6ZW9mKCphZGRyNik7CisJCWJyZWFr
OworCisJZGVmYXVsdDoKKwkJdHN0X2Jya20oVEJST0ssIGNsZWFudXBfZm4sCisJCQkiJXM6JWQ6
IHVua25vd24gZmFtaWx5IiwgZmlsZSwgbGluZW5vKTsKKwkJcmV0dXJuIC0xOworCX0KKworCXNv
Y2sgPSBzb2NrZXQoYWRkci0+c2FfZmFtaWx5LCB0eXBlLCAwKTsKKwlpZiAoc29jayA8IDApIHsK
KwkJdHN0X2Jya20oVEJST0sgfCBURVJSTk8sIGNsZWFudXBfZm4sCisJCQkgIiVzOiVkOiBzb2Nr
ZXQgZmFpbGVkIiwgZmlsZSwgbGluZW5vKTsKKwkJcmV0dXJuIC0xOworCX0KKworCWlmIChiaW5k
KHNvY2ssIGFkZHIsIHNsZW4pIDwgMCkgeworCQl0c3RfYnJrbShUQlJPSyB8IFRFUlJOTywgY2xl
YW51cF9mbiwKKwkJCSAiJXM6JWQ6IGJpbmQgZmFpbGVkIiwgZmlsZSwgbGluZW5vKTsKKwkJcmV0
dXJuIC0xOworCX0KKworCWlmIChnZXRzb2NrbmFtZShzb2NrLCBhZGRyLCAmc2xlbikgPT0gLTEp
IHsKKwkJdHN0X2Jya20oVEJST0sgfCBURVJSTk8sIGNsZWFudXBfZm4sCisJCQkgIiVzOiVkOiBn
ZXRzb2NrbmFtZSBmYWlsZWQiLCBmaWxlLCBsaW5lbm8pOworCQlyZXR1cm4gLTE7CisJfQorCisJ
aWYgKGNsb3NlKHNvY2spID09IC0xKSB7CisJCXRzdF9icmttKFRCUk9LIHwgVEVSUk5PLCBjbGVh
bnVwX2ZuLAorCQkJICIlczolZDogY2xvc2UgZmFpbGVkIiwgZmlsZSwgbGluZW5vKTsKKwkJcmV0
dXJuIC0xOworCX0KKworCXN3aXRjaCAoZmFtaWx5KSB7CisJY2FzZSBBRl9JTkVUOgorCQlyZXR1
cm4gYWRkcjQtPnNpbl9wb3J0OworCWNhc2UgQUZfSU5FVDY6CisJCXJldHVybiBhZGRyNi0+c2lu
Nl9wb3J0OworCWRlZmF1bHQ6CisJCXJldHVybiAtMTsKKwl9Cit9CmRpZmYgLS1naXQgYS9saWIv
dHN0X25ldC5jIGIvbGliL3RzdF9uZXQuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXgg
Zjg0MmU5NGE2Li4wMDAwMDAwMDAKLS0tIGEvbGliL3RzdF9uZXQuYworKysgL2Rldi9udWxsCkBA
IC0xLDg5ICswLDAgQEAKLS8qCi0gKiBDb3B5cmlnaHQgKEMpIDIwMTQgTGludXggVGVzdCBQcm9q
ZWN0LCBJbmMuCi0gKgotICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4g
cmVkaXN0cmlidXRlIGl0IGFuZC9vcgotICogbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB2
ZXJzaW9uIDIgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYwotICogTGljZW5zZSBhcyBwdWJsaXNo
ZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbi4KLSAqCi0gKiBUaGlzIHByb2dyYW0g
aXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3b3VsZCBiZSB1c2VmdWwsCi0gKiBi
dXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50
eSBvZgotICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQ
T1NFLgotICoKLSAqIEZ1cnRoZXIsIHRoaXMgc29mdHdhcmUgaXMgZGlzdHJpYnV0ZWQgd2l0aG91
dCBhbnkgd2FycmFudHkgdGhhdCBpdAotICogaXMgZnJlZSBvZiB0aGUgcmlnaHRmdWwgY2xhaW0g
b2YgYW55IHRoaXJkIHBlcnNvbiByZWdhcmRpbmcKLSAqIGluZnJpbmdlbWVudCBvciB0aGUgbGlr
ZS4gIEFueSBsaWNlbnNlIHByb3ZpZGVkIGhlcmVpbiwgd2hldGhlcgotICogaW1wbGllZCBvciBv
dGhlcndpc2UsIGFwcGxpZXMgb25seSB0byB0aGlzIHNvZnR3YXJlIGZpbGUuICBQYXRlbnQKLSAq
IGxpY2Vuc2VzLCBpZiBhbnksIHByb3ZpZGVkIGhlcmVpbiBkbyBub3QgYXBwbHkgdG8gY29tYmlu
YXRpb25zIG9mCi0gKiB0aGlzIHByb2dyYW0gd2l0aCBvdGhlciBzb2Z0d2FyZSwgb3IgYW55IG90
aGVyIHByb2R1Y3Qgd2hhdHNvZXZlci4KLSAqCi0gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQg
YSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQotICogYWxvbmcgd2l0aCB0
aGlzIHByb2dyYW07IGlmIG5vdCwgd3JpdGUgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwg
SW5jLgotICovCi0KLSNpbmNsdWRlIDxzeXMvdHlwZXMuaD4KLSNpbmNsdWRlIDxzeXMvc29ja2V0
Lmg+Ci0jaW5jbHVkZSA8bmV0aW5ldC9pbi5oPgotCi0jaW5jbHVkZSAidGVzdC5oIgotCi11bnNp
Z25lZCBzaG9ydCB0c3RfZ2V0X3VudXNlZF9wb3J0KHZvaWQgKGNsZWFudXBfZm4pKHZvaWQpLAot
CXVuc2lnbmVkIHNob3J0IGZhbWlseSwgaW50IHR5cGUpCi17Ci0JaW50IHNvY2s7Ci0Jc29ja2xl
bl90IHNsZW47Ci0Jc3RydWN0IHNvY2thZGRyX3N0b3JhZ2UgX2FkZHI7Ci0Jc3RydWN0IHNvY2th
ZGRyICphZGRyID0gKHN0cnVjdCBzb2NrYWRkciAqKSZfYWRkcjsKLQlzdHJ1Y3Qgc29ja2FkZHJf
aW4gKmFkZHI0ID0gKHN0cnVjdCBzb2NrYWRkcl9pbiAqKWFkZHI7Ci0Jc3RydWN0IHNvY2thZGRy
X2luNiAqYWRkcjYgPSAoc3RydWN0IHNvY2thZGRyX2luNiAqKWFkZHI7Ci0KLQlzd2l0Y2ggKGZh
bWlseSkgewotCWNhc2UgQUZfSU5FVDoKLQkJYWRkcjQtPnNpbl9mYW1pbHkgPSBBRl9JTkVUOwot
CQlhZGRyNC0+c2luX3BvcnQgPSAwOwotCQlhZGRyNC0+c2luX2FkZHIuc19hZGRyID0gSU5BRERS
X0FOWTsKLQkJc2xlbiA9IHNpemVvZigqYWRkcjQpOwotCQlicmVhazsKLQotCWNhc2UgQUZfSU5F
VDY6Ci0JCWFkZHI2LT5zaW42X2ZhbWlseSA9IEFGX0lORVQ2OwotCQlhZGRyNi0+c2luNl9wb3J0
ID0gMDsKLQkJYWRkcjYtPnNpbjZfYWRkciA9IGluNmFkZHJfYW55OwotCQlzbGVuID0gc2l6ZW9m
KCphZGRyNik7Ci0JCWJyZWFrOwotCi0JZGVmYXVsdDoKLQkJdHN0X2Jya20oVEJST0ssIGNsZWFu
dXBfZm4sCi0JCQkidHN0X2dldF91bnVzZWRfcG9ydCB1bmtub3duIGZhbWlseSIpOwotCQlyZXR1
cm4gLTE7Ci0JfQotCi0Jc29jayA9IHNvY2tldChhZGRyLT5zYV9mYW1pbHksIHR5cGUsIDApOwot
CWlmIChzb2NrIDwgMCkgewotCQl0c3RfYnJrbShUQlJPSyB8IFRFUlJOTywgY2xlYW51cF9mbiwg
InNvY2tldCBmYWlsZWQiKTsKLQkJcmV0dXJuIC0xOwotCX0KLQotCWlmIChiaW5kKHNvY2ssIGFk
ZHIsIHNsZW4pIDwgMCkgewotCQl0c3RfYnJrbShUQlJPSyB8IFRFUlJOTywgY2xlYW51cF9mbiwg
ImJpbmQgZmFpbGVkIik7Ci0JCXJldHVybiAtMTsKLQl9Ci0KLQlpZiAoZ2V0c29ja25hbWUoc29j
aywgYWRkciwgJnNsZW4pID09IC0xKSB7Ci0JCXRzdF9icmttKFRCUk9LIHwgVEVSUk5PLCBjbGVh
bnVwX2ZuLCAiZ2V0c29ja25hbWUgZmFpbGVkIik7Ci0JCXJldHVybiAtMTsKLQl9Ci0KLQlpZiAo
Y2xvc2Uoc29jaykgPT0gLTEpIHsKLQkJdHN0X2Jya20oVEJST0sgfCBURVJSTk8sIGNsZWFudXBf
Zm4sICJjbG9zZSBmYWlsZWQiKTsKLQkJcmV0dXJuIC0xOwotCX0KLQotCXN3aXRjaCAoZmFtaWx5
KSB7Ci0JY2FzZSBBRl9JTkVUOgotCQlyZXR1cm4gYWRkcjQtPnNpbl9wb3J0OwotCWNhc2UgQUZf
SU5FVDY6Ci0JCXJldHVybiBhZGRyNi0+c2luNl9wb3J0OwotCWRlZmF1bHQ6Ci0JCXJldHVybiAt
MTsKLQl9Ci19CmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2JpbmQvYmlu
ZDAxLmMgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2JpbmQvYmluZDAxLmMKaW5kZXggODY4
NzQ5MzY4Li5kMmY1MGU4MDYgMTAwNjQ0Ci0tLSBhL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMv
YmluZC9iaW5kMDEuYworKysgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2JpbmQvYmluZDAx
LmMKQEAgLTE1Miw3ICsxNTIsNyBAQCB2b2lkIHNldHVwKHZvaWQpCiAJLyogaW5pdGlhbGl6ZSBz
b2NrYWRkcidzICovCiAJc2luMS5zaW5fZmFtaWx5ID0gQUZfSU5FVDsKIAkvKiB0aGlzIHBvcnQg
bXVzdCBiZSB1bnVzZWQhICovCi0Jc2luMS5zaW5fcG9ydCA9IHRzdF9nZXRfdW51c2VkX3BvcnQo
TlVMTCwgQUZfSU5FVCwgU09DS19TVFJFQU0pOworCXNpbjEuc2luX3BvcnQgPSBUU1RfR0VUX1VO
VVNFRF9QT1JUKE5VTEwsIEFGX0lORVQsIFNPQ0tfU1RSRUFNKTsKIAlzaW4xLnNpbl9hZGRyLnNf
YWRkciA9IElOQUREUl9BTlk7CiAKIAlzaW4yLnNpbl9mYW1pbHkgPSBBRl9JTkVUOwpkaWZmIC0t
Z2l0IGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9jb25uZWN0L2Nvbm5lY3QwMS5jIGIvdGVz
dGNhc2VzL2tlcm5lbC9zeXNjYWxscy9jb25uZWN0L2Nvbm5lY3QwMS5jCmluZGV4IDM0ZTI2MGY1
OS4uMGQ3ZDE1YTgzIDEwMDY0NAotLS0gYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2Nvbm5l
Y3QvY29ubmVjdDAxLmMKKysrIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9jb25uZWN0L2Nv
bm5lY3QwMS5jCkBAIC0xODQsNyArMTg0LDcgQEAgdm9pZCBzZXR1cCh2b2lkKQogCiAJc2luMi5z
aW5fZmFtaWx5ID0gQUZfSU5FVDsKIAkvKiB0aGlzIHBvcnQgbXVzdCBiZSB1bnVzZWQhICovCi0J
c2luMi5zaW5fcG9ydCA9IHRzdF9nZXRfdW51c2VkX3BvcnQoTlVMTCwgQUZfSU5FVCwgU09DS19T
VFJFQU0pOworCXNpbjIuc2luX3BvcnQgPSBUU1RfR0VUX1VOVVNFRF9QT1JUKE5VTEwsIEFGX0lO
RVQsIFNPQ0tfU1RSRUFNKTsKIAlzaW4yLnNpbl9hZGRyLnNfYWRkciA9IElOQUREUl9BTlk7CiAK
IAlzaW4zLnNpbl9mYW1pbHkgPSBBRl9JTkVUOwpkaWZmIC0tZ2l0IGEvdGVzdGNhc2VzL2tlcm5l
bC9zeXNjYWxscy9zZW5kbXNnL3NlbmRtc2cwMS5jIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxs
cy9zZW5kbXNnL3NlbmRtc2cwMS5jCmluZGV4IDM2ZjY5MTRmZi4uY2Y2ZTc0Mjg5IDEwMDY0NAot
LS0gYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL3NlbmRtc2cvc2VuZG1zZzAxLmMKKysrIGIv
dGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9zZW5kbXNnL3NlbmRtc2cwMS5jCkBAIC02NjIsNyAr
NjYyLDcgQEAgc3RhdGljIHZvaWQgc2V0dXA1KHZvaWQpCiAJICogNS10dXBsZSB0aGFuIGFscmVh
ZHkgY29ubmVjdGVkCiAJICovCiAJc2luMiA9IHNpbjE7Ci0Jc2luMi5zaW5fcG9ydCA9IHRzdF9n
ZXRfdW51c2VkX3BvcnQoY2xlYW51cCwgQUZfSU5FVCwgU09DS19TVFJFQU0pOworCXNpbjIuc2lu
X3BvcnQgPSBUU1RfR0VUX1VOVVNFRF9QT1JUKGNsZWFudXAsIEFGX0lORVQsIFNPQ0tfU1RSRUFN
KTsKIH0KIAogc3RhdGljIHZvaWQgc2V0dXA2KHZvaWQpCmRpZmYgLS1naXQgYS90b29scy9hcGlj
bWRzL2x0cGFwaWNtZC5jIGIvdG9vbHMvYXBpY21kcy9sdHBhcGljbWQuYwppbmRleCA0YjY2YzQy
MjYuLmQ5NDA2MTI0MiAxMDA2NDQKLS0tIGEvdG9vbHMvYXBpY21kcy9sdHBhcGljbWQuYworKysg
Yi90b29scy9hcGljbWRzL2x0cGFwaWNtZC5jCkBAIC0yMTMsNyArMjEzLDcgQEAgdW5zaWduZWQg
c2hvcnQgYXBpY21kX2dldF91bnVzZWRfcG9ydChpbnQgYXJnYywgY2hhciAqYXJndltdKQogCQlp
ZiAoIXBbaV0tPmNtZCkKIAkJCWdvdG8gZXJyOwogCX0KLQlyZXR1cm4gIHRzdF9nZXRfdW51c2Vk
X3BvcnQoTlVMTCwgcFswXS0+dmFsdWUsIHBbMV0tPnZhbHVlKTsKKwlyZXR1cm4gIFRTVF9HRVRf
VU5VU0VEX1BPUlQoTlVMTCwgcFswXS0+dmFsdWUsIHBbMV0tPnZhbHVlKTsKIAogZXJyOgogCWZw
cmludGYoc3RkZXJyLCAiVXNhZ2U6IHRzdF9nZXRfdW51c2VkX3BvcnQgRkFNSUxZIFRZUEVcbiIK
LS0gCjIuMjEuMAoKCi0tIApNYWlsaW5nIGxpc3QgaW5mbzogaHR0cHM6Ly9saXN0cy5saW51eC5p
dC9saXN0aW5mby9sdHAK
