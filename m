Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [IPv6:2001:1418:10:5::2])
	by mail.lfdr.de (Postfix) with ESMTPS id 2C8B62232C5
	for <lists+linux-ltp@lfdr.de>; Fri, 17 Jul 2020 07:10:09 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id EC53F3C290C
	for <lists+linux-ltp@lfdr.de>; Fri, 17 Jul 2020 07:10:08 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-6.smtp.seeweb.it (in-6.smtp.seeweb.it [217.194.8.6])
 by picard.linux.it (Postfix) with ESMTP id C5C5A3C26DF
 for <ltp@lists.linux.it>; Fri, 17 Jul 2020 07:10:07 +0200 (CEST)
Received: from heian.cn.fujitsu.com (mail.cn.fujitsu.com [183.91.158.132])
 by in-6.smtp.seeweb.it (Postfix) with ESMTP id 7850F1401B8D
 for <ltp@lists.linux.it>; Fri, 17 Jul 2020 07:10:03 +0200 (CEST)
X-IronPort-AV: E=Sophos;i="5.75,361,1589212800"; d="scan'208";a="96457864"
Received: from unknown (HELO cn.fujitsu.com) ([10.167.33.5])
 by heian.cn.fujitsu.com with ESMTP; 17 Jul 2020 13:10:02 +0800
Received: from G08CNEXMBPEKD04.g08.fujitsu.local (unknown [10.167.33.201])
 by cn.fujitsu.com (Postfix) with ESMTP id DB2FB4CE4B0A
 for <ltp@lists.linux.it>; Fri, 17 Jul 2020 13:09:59 +0800 (CST)
Received: from localhost.localdomain (10.167.220.84) by
 G08CNEXMBPEKD04.g08.fujitsu.local (10.167.33.201) with Microsoft SMTP Server
 (TLS) id 15.0.1497.2; Fri, 17 Jul 2020 13:10:00 +0800
From: Yang Xu <xuyang2018.jy@cn.fujitsu.com>
To: <ltp@lists.linux.it>
Date: Fri, 17 Jul 2020 13:10:18 +0800
Message-ID: <1594962618-26004-1-git-send-email-xuyang2018.jy@cn.fujitsu.com>
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: <1593001917-11075-1-git-send-email-xuyang2018.jy@cn.fujitsu.com>
References: <1593001917-11075-1-git-send-email-xuyang2018.jy@cn.fujitsu.com>
MIME-Version: 1.0
X-Originating-IP: [10.167.220.84]
X-ClientProxiedBy: G08CNEXCHPEKD06.g08.fujitsu.local (10.167.33.205) To
 G08CNEXMBPEKD04.g08.fujitsu.local (10.167.33.201)
X-yoursite-MailScanner-ID: DB2FB4CE4B0A.A598F
X-yoursite-MailScanner: Found to be clean
X-yoursite-MailScanner-From: xuyang2018.jy@cn.fujitsu.com
X-Spam-Status: No, score=0.0 required=7.0 tests=KHOP_HELO_FCRDNS, SPF_HELO_NONE,
 SPF_NONE autolearn=disabled version=3.4.0
X-Virus-Scanned: clamav-milter 0.99.2 at in-6.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on in-6.smtp.seeweb.it
Subject: [LTP] [PATCH v2] ipc/msgrcv0*: cleanup && convert to new API
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

MSkgVGhlIG1zZ3JjdjAzLDA0IHdhcyBtZXJnZWQgaW50byBtc2dyY3YwMgoyKSB0YWtlIHVzZSBv
ZiBJUEMgcmVsYXRlZCBtYWNyb3MKMykgdGVzdCBtc2dyY3YwOCBvbiA2NGJpdCBtYWNoaW5lCgpT
aWduZWQtb2ZmLWJ5OiBZYW5nIFh1IDx4dXlhbmcyMDE4Lmp5QGNuLmZ1aml0c3UuY29tPgotLS0K
djEtPnYyOgoxLiBtb2RpZnkgbXNncmN2MDIuYyBjb2RlIGFuZCBtb3ZlIG1zZ2dldCBpbiBkb190
ZXN0IHRvIGF2b2lkIAplcnJvciB3aGVuIHVzaW5nIC1pIHBhcmFtZXRlcnMKMi4gbW9kaWZ5IG1z
Z3JjdjA1LmMgY29kZSBhbmQgcmVtb3ZlIGR1cGxpY2F0ZWQgU0FGRV9TSUdOQUwoU0lHSFVQLApz
aWdoYW5kbGVyKSBmdW5jdGlvbgozLiByZW1vdmUgbXNncmN2MDMsMDQgdGFnIGluIHN5c2NhbGxz
LWlwYyAKIHJ1bnRlc3Qvc3lzY2FsbHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAg
MiAtCiBydW50ZXN0L3N5c2NhbGxzLWlwYyAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDIg
LQogLi4uL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2Ly5naXRpZ25vcmUgICAgIHwgICAyIC0K
IHRlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvaXBjL21zZ3Jjdi9NYWtlZmlsZSB8ICAgNSArLQog
Li4uL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2L21zZ3JjdjAxLmMgICAgIHwgMjMxICsrKy0t
LS0tLS0tLS0tLQogLi4uL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2L21zZ3JjdjAyLmMgICAg
IHwgMjY4ICsrKysrKy0tLS0tLS0tLS0tLQogLi4uL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2
L21zZ3JjdjAzLmMgICAgIHwgMTYyIC0tLS0tLS0tLS0tCiAuLi4va2VybmVsL3N5c2NhbGxzL2lw
Yy9tc2dyY3YvbXNncmN2MDQuYyAgICAgfCAxODEgLS0tLS0tLS0tLS0tCiAuLi4va2VybmVsL3N5
c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDUuYyAgICAgfCAyNDAgKysrKy0tLS0tLS0tLS0tLQog
Li4uL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2L21zZ3JjdjA2LmMgICAgIHwgMjQ4ICsrKyst
LS0tLS0tLS0tLS0KIC4uLi9rZXJuZWwvc3lzY2FsbHMvaXBjL21zZ3Jjdi9tc2dyY3YwNy5jICAg
ICB8IDIwOSArKysrKy0tLS0tLS0tLQogLi4uL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2L21z
Z3JjdjA4LmMgICAgIHwgMTE4ICsrKy0tLS0tCiAxMiBmaWxlcyBjaGFuZ2VkLCAzNDUgaW5zZXJ0
aW9ucygrKSwgMTMyMyBkZWxldGlvbnMoLSkKIGRlbGV0ZSBtb2RlIDEwMDY0NCB0ZXN0Y2FzZXMv
a2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDMuYwogZGVsZXRlIG1vZGUgMTAwNjQ0
IHRlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvaXBjL21zZ3Jjdi9tc2dyY3YwNC5jCgpkaWZmIC0t
Z2l0IGEvcnVudGVzdC9zeXNjYWxscyBiL3J1bnRlc3Qvc3lzY2FsbHMKaW5kZXggODE5ZThkOGVl
Li45ZDM4MDhkNjYgMTAwNjQ0Ci0tLSBhL3J1bnRlc3Qvc3lzY2FsbHMKKysrIGIvcnVudGVzdC9z
eXNjYWxscwpAQCAtODExLDggKzgxMSw2IEBAIG1zZ2dldDAzIG1zZ2dldDAzCiAKIG1zZ3JjdjAx
IG1zZ3JjdjAxCiBtc2dyY3YwMiBtc2dyY3YwMgotbXNncmN2MDMgbXNncmN2MDMKLW1zZ3JjdjA0
IG1zZ3JjdjA0CiBtc2dyY3YwNSBtc2dyY3YwNQogbXNncmN2MDYgbXNncmN2MDYKIG1zZ3JjdjA3
IG1zZ3JjdjA3CmRpZmYgLS1naXQgYS9ydW50ZXN0L3N5c2NhbGxzLWlwYyBiL3J1bnRlc3Qvc3lz
Y2FsbHMtaXBjCmluZGV4IGMzYTM1ODk2Yy4uNjE3NDNiZTAxIDEwMDY0NAotLS0gYS9ydW50ZXN0
L3N5c2NhbGxzLWlwYworKysgYi9ydW50ZXN0L3N5c2NhbGxzLWlwYwpAQCAtMTUsOCArMTUsNiBA
QCBtc2dnZXQwMyBtc2dnZXQwMwogCiBtc2dyY3YwMSBtc2dyY3YwMQogbXNncmN2MDIgbXNncmN2
MDIKLW1zZ3JjdjAzIG1zZ3JjdjAzCi1tc2dyY3YwNCBtc2dyY3YwNAogbXNncmN2MDUgbXNncmN2
MDUKIG1zZ3JjdjA2IG1zZ3JjdjA2CiBtc2dyY3YwNyBtc2dyY3YwNwpkaWZmIC0tZ2l0IGEvdGVz
dGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2Ly5naXRpZ25vcmUgYi90ZXN0Y2FzZXMv
a2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvLmdpdGlnbm9yZQppbmRleCAyMDM0NjRmNWYuLjA1
OTZlZTAwZiAxMDA2NDQKLS0tIGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2
Ly5naXRpZ25vcmUKKysrIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2Ly5n
aXRpZ25vcmUKQEAgLTEsNyArMSw1IEBACiAvbXNncmN2MDEKIC9tc2dyY3YwMgotL21zZ3JjdjAz
Ci0vbXNncmN2MDQKIC9tc2dyY3YwNQogL21zZ3JjdjA2CiAvbXNncmN2MDcKZGlmZiAtLWdpdCBh
L3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvaXBjL21zZ3Jjdi9NYWtlZmlsZSBiL3Rlc3RjYXNl
cy9rZXJuZWwvc3lzY2FsbHMvaXBjL21zZ3Jjdi9NYWtlZmlsZQppbmRleCBmNjJjZDFmNDguLjU2
Y2RiNjQxNyAxMDA2NDQKLS0tIGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2
L01ha2VmaWxlCisrKyBiL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvaXBjL21zZ3Jjdi9NYWtl
ZmlsZQpAQCAtMywxMCArMyw5IEBACiAKIHRvcF9zcmNkaXIgICAgICAgICAgICAgID89IC4uLy4u
Ly4uLy4uLy4uCiAKLUxUUExJQlMgPSBsdHBpcGMKK0xUUExJQlMgPSBsdHBuZXdpcGMKIAogaW5j
bHVkZSAkKHRvcF9zcmNkaXIpL2luY2x1ZGUvbWsvdGVzdGNhc2VzLm1rCi0KLUxETElCUyAgKz0g
LWxsdHBpcGMKK0xETElCUyArPSAtbGx0cG5ld2lwYwogCiBpbmNsdWRlICQodG9wX3NyY2Rpcikv
aW5jbHVkZS9tay9nZW5lcmljX2xlYWZfdGFyZ2V0Lm1rCmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMv
a2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDEuYyBiL3Rlc3RjYXNlcy9rZXJuZWwv
c3lzY2FsbHMvaXBjL21zZ3Jjdi9tc2dyY3YwMS5jCmluZGV4IDNlODlhN2Y5MC4uMjA0YmYwNTc1
IDEwMDY0NAotLS0gYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2
MDEuYworKysgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDEu
YwpAQCAtMSwyMTAgKzEsNTUgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4w
LW9yLWxhdGVyCiAvKgorICogQ29weXJpZ2h0IChjKSBJbnRlcm5hdGlvbmFsIEJ1c2luZXNzIE1h
Y2hpbmVzICBDb3JwLiwgMjAwMQogICoKLSAqICAgQ29weXJpZ2h0IChjKSBJbnRlcm5hdGlvbmFs
IEJ1c2luZXNzIE1hY2hpbmVzICBDb3JwLiwgMjAwMQotICoKLSAqICAgVGhpcyBwcm9ncmFtIGlz
IGZyZWUgc29mdHdhcmU7ICB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5Ci0g
KiAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2Ug
YXMgcHVibGlzaGVkIGJ5Ci0gKiAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhl
ciB2ZXJzaW9uIDIgb2YgdGhlIExpY2Vuc2UsIG9yCi0gKiAgIChhdCB5b3VyIG9wdGlvbikgYW55
IGxhdGVyIHZlcnNpb24uCi0gKgotICogICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4g
dGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKLSAqICAgYnV0IFdJVEhPVVQgQU5ZIFdB
UlJBTlRZOyAgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCi0gKiAgIE1FUkNI
QU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZQotICog
ICB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KLSAqCi0g
KiAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1
YmxpYyBMaWNlbnNlCi0gKiAgIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtOyAgaWYgbm90LCB3cml0
ZSB0byB0aGUgRnJlZSBTb2Z0d2FyZQotICogICBGb3VuZGF0aW9uLCBJbmMuLCA1MSBGcmFua2xp
biBTdHJlZXQsIEZpZnRoIEZsb29yLCBCb3N0b24sIE1BIDAyMTEwLTEzMDEgVVNBCi0gKi8KLQot
LyoKLSAqIE5BTUUKLSAqCW1zZ3JjdjAxLmMKLSAqCi0gKiBERVNDUklQVElPTgotICoJbXNncmN2
MDEgLSB0ZXN0IHRoYXQgbXNncmN2KCkgcmVjZWl2ZXMgdGhlIGV4cGVjdGVkIG1lc3NhZ2UKLSAq
Ci0gKiBBTEdPUklUSE0KLSAqCWNyZWF0ZSBhIG1lc3NhZ2UgcXVldWUKLSAqCWluaXRpYWxpemUg
YSBtZXNzYWdlIGJ1ZmZlciB3aXRoIGEga25vd24gbWVzc2FnZSBhbmQgdHlwZQotICoJbG9vcCBp
ZiB0aGF0IG9wdGlvbiB3YXMgc3BlY2lmaWVkCi0gKglmb3JrIGEgY2hpbGQgdG8gcmVjZWl2ZSB0
aGUgbWVzc2FnZQotICoJcGFyZW50IGVucXVldWVzIHRoZSBtZXNzYWdlIHRoZW4gZXhpdHMKLSAq
CWNoZWNrIHRoZSByZXR1cm4gY29kZQotICoJICBpZiBmYWlsdXJlLCBpc3N1ZSBhIEZBSUwgbWVz
c2FnZS4KLSAqCW90aGVyd2lzZSwKLSAqCSAgaWYgZG9pbmcgZnVuY3Rpb25hbGl0eSB0ZXN0aW5n
Ci0gKgkJYnVpbGQgYSBuZXcgbWVzc2FnZSBhbmQgY29tcGFyZSBpdCB0byB0aGUgb25lIHJlY2Vp
dmVkCi0gKgkgIAlpZiB0aGV5IGFyZSB0aGUgc2FtZSwKLSAqCQkJaXNzdWUgYSBQQVNTIG1lc3Nh
Z2UKLSAqCQlvdGhlcndpc2UKLSAqCQkJaXNzdWUgYSBGQUlMIG1lc3NhZ2UKLSAqCWNhbGwgY2xl
YW51cAotICoKLSAqIFVTQUdFOiAgPGZvciBjb21tYW5kLWxpbmU+Ci0gKiAgbXNncmN2MDEgWy1j
IG5dIFstZl0gWy1pIG5dIFstSSB4XSBbLVAgeF0gWy10XQotICogICAgIHdoZXJlLCAgLWMgbiA6
IFJ1biBuIGNvcGllcyBjb25jdXJyZW50bHkuCi0gKiAgICAgICAgICAgICAtZiAgIDogVHVybiBv
ZmYgZnVuY3Rpb25hbGl0eSBUZXN0aW5nLgotICoJICAgICAgIC1pIG4gOiBFeGVjdXRlIHRlc3Qg
biB0aW1lcy4KLSAqCSAgICAgICAtSSB4IDogRXhlY3V0ZSB0ZXN0IGZvciB4IHNlY29uZHMuCi0g
KgkgICAgICAgLVAgeCA6IFBhdXNlIGZvciB4IHNlY29uZHMgYmV0d2VlbiBpdGVyYXRpb25zLgot
ICoJICAgICAgIC10ICAgOiBUdXJuIG9uIHN5c2NhbGwgdGltaW5nLgotICoKLSAqIEhJU1RPUlkK
LSAqCTAzLzIwMDEgLSBXcml0dGVuIGJ5IFdheW5lIEJveWVyCi0gKgotICogUkVTVFJJQ1RJT05T
Ci0gKglub25lCisgKiBtc2dyY3YwMSAtIHRlc3QgdGhhdCBtc2dyY3YoKSByZWNlaXZlcyB0aGUg
ZXhwZWN0ZWQgbWVzc2FnZQogICovCiAKICNpbmNsdWRlIDxzdHJpbmcuaD4KICNpbmNsdWRlIDxz
eXMvd2FpdC5oPgotCi0jaW5jbHVkZSAidGVzdC5oIgotCi0jaW5jbHVkZSAiaXBjbXNnLmgiCi0K
LXZvaWQgY2xlYW51cCh2b2lkKTsKLXZvaWQgc2V0dXAodm9pZCk7Ci12b2lkIGRvX2NoaWxkKHZv
aWQpOwotCi1jaGFyICpUQ0lEID0gIm1zZ3JjdjAxIjsKLWludCBUU1RfVE9UQUwgPSAxOwotCi1p
bnQgbXNnX3FfMTsKLU1TR0JVRiBzbmRfYnVmLCByY3ZfYnVmLCBjbXBfYnVmOwotCi1waWRfdCBj
X3BpZDsKLQotaW50IG1haW4oaW50IGFjLCBjaGFyICoqYXYpCisjaW5jbHVkZSAidHN0X3Rlc3Qu
aCIKKyNpbmNsdWRlICJ0c3Rfc2FmZV9zeXN2X2lwYy5oIgorI2luY2x1ZGUgImxpYm5ld2lwYy5o
IgorCitzdGF0aWMga2V5X3QgbXNna2V5Oworc3RhdGljIGludCBxdWV1ZV9pZCA9IC0xOworc3Rh
dGljIHN0cnVjdCBidWYgeworCWxvbmcgdHlwZTsKKwljaGFyIG10ZXh0W01TR1NJWkVdOworfSBy
Y3ZfYnVmLCBzbmRfYnVmID0ge01TR1RZUEUsICJoZWxsbyJ9OworCitzdGF0aWMgdm9pZCB2ZXJp
ZnlfbXNncmN2KHZvaWQpCiB7Ci0JaW50IGxjOwotCXZvaWQgY2hlY2tfZnVuY3Rpb25hbGl0eSh2
b2lkKTsKLQlpbnQgc3RhdHVzLCBlX2NvZGU7Ci0KLQl0c3RfcGFyc2Vfb3B0cyhhYywgYXYsIE5V
TEwsIE5VTEwpOwotCi0jaWZkZWYgVUNMSU5VWAotCW1heWJlX3J1bl9jaGlsZCgmZG9fY2hpbGQs
ICJkIiwgJm1zZ19xXzEpOwotI2VuZGlmCi0KLQlzZXR1cCgpOwkJLyogZ2xvYmFsIHNldHVwICov
Ci0KLQkvKiBUaGUgZm9sbG93aW5nIGxvb3AgY2hlY2tzIGxvb3Bpbmcgc3RhdGUgaWYgLWkgb3B0
aW9uIGdpdmVuICovCi0KLQlmb3IgKGxjID0gMDsgVEVTVF9MT09QSU5HKGxjKTsgbGMrKykgewot
CQkvKiByZXNldCB0c3RfY291bnQgaW4gY2FzZSB3ZSBhcmUgbG9vcGluZyAqLwotCQl0c3RfY291
bnQgPSAwOwotCi0JCS8qCi0JCSAqIGZvcmsgYSBjaGlsZCB0byByZWFkIGZyb20gdGhlIHF1ZXVl
IHdoaWxlIHRoZSBwYXJlbnQKLQkJICogZW5xdWV1ZXMgdGhlIG1lc3NhZ2UgdG8gYmUgcmVhZC4K
LQkJICovCi0JCWlmICgoY19waWQgPSBGT1JLX09SX1ZGT1JLKCkpID09IC0xKSB7Ci0JCQl0c3Rf
YnJrbShUQlJPSywgY2xlYW51cCwgImNvdWxkIG5vdCBmb3JrIik7Ci0JCX0KLQotCQlpZiAoY19w
aWQgPT0gMCkgewkvKiBjaGlsZCAqLwotI2lmZGVmIFVDTElOVVgKLQkJCWlmIChzZWxmX2V4ZWMo
YXZbMF0sICJkIiwgbXNnX3FfMSkgPCAwKSB7Ci0JCQkJdHN0X2Jya20oVEJST0ssIGNsZWFudXAs
ICJjb3VsZCBub3Qgc2VsZl9leGVjIik7Ci0JCQl9Ci0jZWxzZQotCQkJZG9fY2hpbGQoKTsKLSNl
bmRpZgotCQl9IGVsc2UgewkvKiBwYXJlbnQgKi8KLQkJCS8qIHB1dCB0aGUgbWVzc2FnZSBvbiB0
aGUgcXVldWUgKi8KLQkJCWlmIChtc2dzbmQobXNnX3FfMSwgJnNuZF9idWYsIE1TR1NJWkUsIDAp
ID09IC0xKSB7Ci0JCQkJdHN0X2Jya20oVEJST0ssIGNsZWFudXAsCi0JCQkJCSAiQ291bGRuJ3Qg
ZW5xdWV1ZSIgIiBtZXNzYWdlIik7Ci0JCQl9Ci0JCQkvKiB3YWl0IGZvciB0aGUgY2hpbGQgdG8g
ZmluaXNoICovCi0JCQl3YWl0KCZzdGF0dXMpOwotCQkJLyogbWFrZSBzdXJlIHRoZSBjaGlsZCBy
ZXR1cm5lZCBhIGdvb2QgZXhpdCBzdGF0dXMgKi8KLQkJCWVfY29kZSA9IHN0YXR1cyA+PiA4Owot
CQkJaWYgKGVfY29kZSAhPSAwKSB7Ci0JCQkJdHN0X3Jlc20oVEZBSUwsICJGYWlsdXJlcyByZXBv
cnRlZCBhYm92ZSIpOwotCQkJfQorCVNBRkVfTVNHU05EKHF1ZXVlX2lkLCAmc25kX2J1ZiwgTVNH
U0laRSwgMCk7CiAKLQkJfQorCVRFU1QobXNncmN2KHF1ZXVlX2lkLCAmcmN2X2J1ZiwgTVNHU0la
RSwgMSwgMCkpOworCWlmIChUU1RfUkVUID09IC0xKSB7CisJCXRzdF9yZXMoVEZBSUwgfCBUVEVS
Uk5PLCAibXNncmN2IGZhaWxlZCIpOworCQlyZXR1cm47CiAJfQotCi0JY2xlYW51cCgpOwotCXRz
dF9leGl0KCk7Ci0KLSAgICAvKiogTk9UIFJFQUNIRUQgKiovCi0KKwlpZiAoc3RyY21wKHJjdl9i
dWYubXRleHQsIHNuZF9idWYubXRleHQpID09IDApCisJCXRzdF9yZXMoVFBBU1MsICJtZXNzYWdl
IHJlY2VpdmVkKCVzKSA9IG1lc3NhZ2Ugc2VudCglcykiLAorCQkJcmN2X2J1Zi5tdGV4dCwgc25k
X2J1Zi5tdGV4dCk7CisJZWxzZQorCQl0c3RfcmVzKFRGQUlMLCAibWVzc2FnZSByZWNlaXZlZCgl
cykgIT0gbWVzc2FnZSBzZW50KCVzKSIsCisJCQlyY3ZfYnVmLm10ZXh0LCBzbmRfYnVmLm10ZXh0
KTsKIH0KIAotLyoKLSAqIGRvX2NoaWxkKCkKLSAqLwotdm9pZCBkb19jaGlsZCh2b2lkKQorc3Rh
dGljIHZvaWQgc2V0dXAodm9pZCkKIHsKLQlpbnQgcmV0dmFsID0gMDsKLQotCVRFU1QobXNncmN2
KG1zZ19xXzEsICZyY3ZfYnVmLCBNU0dTSVpFLCAxLCAwKSk7Ci0KLQlpZiAoVEVTVF9SRVRVUk4g
PT0gLTEpIHsKLQkJcmV0dmFsID0gMTsKLQkJdHN0X3Jlc20oVEZBSUwsICIlcyBjYWxsIGZhaWxl
ZCAtIGVycm5vID0gJWQgOiAlcyIsCi0JCQkgVENJRCwgVEVTVF9FUlJOTywgc3RyZXJyb3IoVEVT
VF9FUlJOTykpOwotCX0gZWxzZSB7Ci0JCS8qCi0JCSAqIEJ1aWxkIGEgbmV3IG1lc3NhZ2UgYW5k
IGNvbXBhcmUgaXQKLQkJICogd2l0aCB0aGUgb25lIHJlY2VpdmVkLgotCQkgKi8KLQkJaW5pdF9i
dWYoJmNtcF9idWYsIE1TR1RZUEUsIE1TR1NJWkUpOwotCi0JCWlmIChzdHJjbXAocmN2X2J1Zi5t
dGV4dCwgY21wX2J1Zi5tdGV4dCkgPT0gMCkgewotCQkJdHN0X3Jlc20oVFBBU1MsCi0JCQkJICJt
ZXNzYWdlIHJlY2VpdmVkID0gIiAibWVzc2FnZSBzZW50Iik7Ci0JCX0gZWxzZSB7Ci0JCQlyZXR2
YWwgPSAxOwotCQkJdHN0X3Jlc20oVEZBSUwsCi0JCQkJICJtZXNzYWdlIHJlY2VpdmVkICE9ICIg
Im1lc3NhZ2Ugc2VudCIpOwotCQl9Ci0JfQotCWV4aXQocmV0dmFsKTsKKwltc2drZXkgPSBHRVRJ
UENLRVkoKTsKKwlxdWV1ZV9pZCA9IFNBRkVfTVNHR0VUKG1zZ2tleSwgSVBDX0NSRUFUIHwgSVBD
X0VYQ0wgfCBNU0dfUlcpOwogfQogCi0vKgotICogc2V0dXAoKSAtIHBlcmZvcm1zIGFsbCB0aGUg
T05FIFRJTUUgc2V0dXAgZm9yIHRoaXMgdGVzdC4KLSAqLwotdm9pZCBzZXR1cCh2b2lkKQorc3Rh
dGljIHZvaWQgY2xlYW51cCh2b2lkKQogewotCi0JdHN0X3NpZyhGT1JLLCBERUZfSEFORExFUiwg
Y2xlYW51cCk7Ci0KLQlURVNUX1BBVVNFOwotCi0JLyoKLQkgKiBDcmVhdGUgYSB0ZW1wb3Jhcnkg
ZGlyZWN0b3J5IGFuZCBjZCBpbnRvIGl0LgotCSAqIFRoaXMgaGVscHMgdG8gZW5zdXJlIHRoYXQg
YSB1bmlxdWUgbXNna2V5IGlzIGNyZWF0ZWQuCi0JICogU2VlIGxpYnMvbGlibHRwaXBjL2xpYmlw
Yy5jIGZvciBtb3JlIGluZm9ybWF0aW9uLgotCSAqLwotCXRzdF90bXBkaXIoKTsKLQotCW1zZ2tl
eSA9IGdldGlwY2tleSgpOwotCi0JLyogY3JlYXRlIGEgbWVzc2FnZSBxdWV1ZSB3aXRoIHJlYWQv
d3JpdGUgcGVybWlzc2lvbiAqLwotCWlmICgobXNnX3FfMSA9IG1zZ2dldChtc2drZXksIElQQ19D
UkVBVCB8IElQQ19FWENMIHwgTVNHX1JXKSkgPT0gLTEpIHsKLQkJdHN0X2Jya20oVEJST0ssIGNs
ZWFudXAsICJDYW4ndCBjcmVhdGUgbWVzc2FnZSBxdWV1ZSIpOwotCX0KLQotCS8qIGluaXRpYWxp
emUgdGhlIG1lc3NhZ2UgYnVmZmVyICovCi0JaW5pdF9idWYoJnNuZF9idWYsIE1TR1RZUEUsIE1T
R1NJWkUpOworCWlmIChxdWV1ZV9pZCAhPSAtMSkKKwkJU0FGRV9NU0dDVEwocXVldWVfaWQsIElQ
Q19STUlELCBOVUxMKTsKIH0KIAotLyoKLSAqIGNsZWFudXAoKSAtIHBlcmZvcm1zIGFsbCB0aGUg
T05FIFRJTUUgY2xlYW51cCBmb3IgdGhpcyB0ZXN0IGF0IGNvbXBsZXRpb24KLSAqIAkgICAgICAg
b3IgcHJlbWF0dXJlIGV4aXQuCi0gKi8KLXZvaWQgY2xlYW51cCh2b2lkKQotewotCS8qIGlmIGl0
IGV4aXN0cywgcmVtb3ZlIHRoZSBtZXNzYWdlIHF1ZXVlIHRoYXQgd2FzIGNyZWF0ZWQgKi8KLQly
bV9xdWV1ZShtc2dfcV8xKTsKLQotCXRzdF9ybWRpcigpOwotCi19CitzdGF0aWMgc3RydWN0IHRz
dF90ZXN0IHRlc3QgPSB7CisJLnNldHVwID0gc2V0dXAsCisJLmNsZWFudXAgPSBjbGVhbnVwLAor
CS50ZXN0X2FsbCA9IHZlcmlmeV9tc2dyY3YsCisJLm5lZWRzX3RtcGRpciA9IDEsCit9OwpkaWZm
IC0tZ2l0IGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2L21zZ3JjdjAyLmMg
Yi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDIuYwppbmRleCA1
MmNmZmVhZjQuLmFiNTYwNmM0MiAxMDA2NDQKLS0tIGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxs
cy9pcGMvbXNncmN2L21zZ3JjdjAyLmMKKysrIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9p
cGMvbXNncmN2L21zZ3JjdjAyLmMKQEAgLTEsMjA0ICsxLDExNCBAQAorLy8gU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKIC8qCisgKiBDb3B5cmlnaHQgKGMpIEludGVy
bmF0aW9uYWwgQnVzaW5lc3MgTWFjaGluZXMgIENvcnAuLCAyMDAxCiAgKgotICogICBDb3B5cmln
aHQgKGMpIEludGVybmF0aW9uYWwgQnVzaW5lc3MgTWFjaGluZXMgIENvcnAuLCAyMDAxCisgKiBC
YXNpYyBlcnJvciB0ZXN0IGZvciBtc2dyY3YoMikuCiAgKgotICogICBUaGlzIHByb2dyYW0gaXMg
ZnJlZSBzb2Z0d2FyZTsgIHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkKLSAq
ICAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBh
cyBwdWJsaXNoZWQgYnkKLSAqICAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVy
IHZlcnNpb24gMiBvZiB0aGUgTGljZW5zZSwgb3IKLSAqICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkg
bGF0ZXIgdmVyc2lvbi4KKyAqIDEpbXNncmN2KDIpIGZhaWxzIGFuZCBzZXRzIGVycm5vIHRvIEUy
QklHIGlmIHRoZSBtZXNzYWdlIHRleHQgbGVuZ3RoIGlzCisgKiAgICBncmVhdGVyIHRoYW4gbXNn
c3ogYW5kIE1TR19OT0VSUk9SIGlzbid0IHNwZWNpZmllZCBpbiBtc2dmbGcuCiAgKgotICogICBU
aGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVz
ZWZ1bCwKLSAqICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyAgd2l0aG91dCBldmVuIHRoZSBp
bXBsaWVkIHdhcnJhbnR5IG9mCi0gKiAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBB
IFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZQotICogICB0aGUgR05VIEdlbmVyYWwgUHVibGljIExp
Y2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KKyAqIDIpVGhlIGNhbGxpbmcgcHJvY2VzcyBkb2VzIG5v
dCBoYXZlIHJlYWQgcGVybWlzc2lvbiBvbiB0aGUgbWVzc2FnZQorICogICAgcXVldWUsIHNvIG1z
Z3JjdigyKSBmYWlscyBhbmQgc2V0cyBlcnJubyB0byBFQUNDRVMuCiAgKgotICogICBZb3Ugc2hv
dWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5z
ZQotICogICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbTsgIGlmIG5vdCwgd3JpdGUgdG8gdGhlIEZy
ZWUgU29mdHdhcmUKLSAqICAgRm91bmRhdGlvbiwgSW5jLiwgNTEgRnJhbmtsaW4gU3RyZWV0LCBG
aWZ0aCBGbG9vciwgQm9zdG9uLCBNQSAwMjExMC0xMzAxIFVTQQotICovCi0KLS8qCi0gKiBOQU1F
Ci0gKgltc2dyY3YwMi5jCisgKiAzKW1zZ3JjdigyKSBmYWlscyBhbmQgc2V0cyBlcnJubyB0byBF
RkFVTFQgaWYgdGhlIG1lc3NhZ2UgYnVmZmVyIGFkZHJlc3MKKyAqICAgIGlzbid0IGFjY2Vzc2li
bGUuCiAgKgotICogREVTQ1JJUFRJT04KLSAqCW1zZ3JjdjAyIC0gdGVzdCBmb3IgRUFDQ0VTIGFu
ZCBFRkFVTFQgZXJyb3JzCisgKiA0KW1zZ3JjdigyKSBmYWlscyBhbmQgc2V0cyBlcnJubyB0byBF
SU5WQUwgaWYgbXNxaWQgd2FzIGludmFsaWQoPDApLgogICoKLSAqIEFMR09SSVRITQotICoJY3Jl
YXRlIGEgbWVzc2FnZSBxdWV1ZSB3aXRoIHJlYWQvd3JpdGUgcGVybWlzc2lvbnMKLSAqCWluaXRp
YWxpemUgYSBtZXNzYWdlIGJ1ZmZlciB3aXRoIGEga25vd24gbWVzc2FnZSBhbmQgdHlwZQotICoJ
ZW5xdWV1ZSB0aGUgbWVzc2FnZQotICoJY3JlYXRlIGFub3RoZXIgbWVzc2FnZSBxdWV1ZSB3aXRo
b3V0IHJlYWQvd3JpdGUgcGVybWlzc2lvbnMKLSAqCWxvb3AgaWYgdGhhdCBvcHRpb24gd2FzIHNw
ZWNpZmllZAotICoJY2FsbCBtc2dyY3YoKSB1c2luZyB0d28gZGlmZmVyZW50IGludmFsaWQgY2Fz
ZXMKLSAqCWNoZWNrIHRoZSBlcnJubyB2YWx1ZQotICoJICBpc3N1ZSBhIFBBU1MgbWVzc2FnZSBp
ZiB3ZSBnZXQgRUFDQ0VTIG9yIEVGQVVMVAotICoJb3RoZXJ3aXNlLCB0aGUgdGVzdHMgZmFpbHMK
LSAqCSAgaXNzdWUgYSBGQUlMIG1lc3NhZ2UKLSAqCWNhbGwgY2xlYW51cAotICoKLSAqIFVTQUdF
OiAgPGZvciBjb21tYW5kLWxpbmU+Ci0gKiAgbXNncmN2MDIgWy1jIG5dIFstZV0gWy1pIG5dIFst
SSB4XSBbLVAgeF0gWy10XQotICogICAgIHdoZXJlLCAgLWMgbiA6IFJ1biBuIGNvcGllcyBjb25j
dXJyZW50bHkuCi0gKiAgICAgICAgICAgICAtZSAgIDogVHVybiBvbiBlcnJubyBsb2dnaW5nLgot
ICoJICAgICAgIC1pIG4gOiBFeGVjdXRlIHRlc3QgbiB0aW1lcy4KLSAqCSAgICAgICAtSSB4IDog
RXhlY3V0ZSB0ZXN0IGZvciB4IHNlY29uZHMuCi0gKgkgICAgICAgLVAgeCA6IFBhdXNlIGZvciB4
IHNlY29uZHMgYmV0d2VlbiBpdGVyYXRpb25zLgotICoJICAgICAgIC10ICAgOiBUdXJuIG9uIHN5
c2NhbGwgdGltaW5nLgotICoKLSAqIEhJU1RPUlkKLSAqCTAzLzIwMDEgLSBXcml0dGVuIGJ5IFdh
eW5lIEJveWVyCi0gKiAgICAgIDE0LzAzLzIwMDggTWF0dGhpZXUgRmVydHLDqSAoTWF0dGhpZXUu
RmVydHJlQGlyaXNhLmZyKQotICogICAgICAtIEZpeCBjb25jdXJyZW5jeSBpc3N1ZS4gVGhlIHNl
Y29uZCBrZXkgdXNlZCBmb3IgdGhpcyB0ZXN0IGNvdWxkCi0gKiAgICAgICAgY29uZmxpY3Qgd2l0
aCB0aGUga2V5IGZyb20gYW5vdGhlciB0YXNrLgotCisgKiA1KW1zZ3JjdigyKSBmYWlscyBhbmQg
c2V0cyBlcnJubyB0byBFSU5WQUwgaWYgbXNnc2l6ZSBpcyBsZXNzIHRoYW4gMC4KICAqCi0gKiBS
RVNUUklDVElPTlMKLSAqCW5vbmUKKyAqIDYpbXNncmN2KDIpIGZhaWxzIGFuZCBzZXRzIGVycm5v
IHRvIEVOT01TRyBpZiBJUENfTk9XQUlUIHdhcyBzcGVjaWZpZWQgaW4KKyAqICAgbXNnZmxnIGFu
ZCBubyBtZXNzYWdlIG9mIHRoZSByZXF1ZXN0ZWQgdHlwZSBleGlzdGVkIG9uIHRoZSBtZXNzYWdl
IHF1ZXVlLgogICovCiAKKyNpbmNsdWRlIDxzdHJpbmcuaD4KKyNpbmNsdWRlIDxzeXMvd2FpdC5o
PgorI2luY2x1ZGUgPHN5cy9tc2cuaD4KICNpbmNsdWRlIDxwd2QuaD4KLQotI2luY2x1ZGUgInRl
c3QuaCIKLQotI2luY2x1ZGUgImlwY21zZy5oIgotCi12b2lkIGNsZWFudXAodm9pZCk7Ci12b2lk
IHNldHVwKHZvaWQpOwotCi1jaGFyICpUQ0lEID0gIm1zZ3JjdjAyIjsKLWludCBUU1RfVE9UQUwg
PSAyOwotCi1jaGFyIG5vYm9keV91aWRbXSA9ICJub2JvZHkiOwotc3RydWN0IHBhc3N3ZCAqbHRw
dXNlcjsKLQotaW50IG1zZ19xXzEgPSAtMTsJCS8qIFRoZSBtZXNzYWdlIHF1ZXVlIElEIGNyZWF0
ZWQgaW4gc2V0dXAgKi8KLWludCBtc2dfcV8yID0gLTE7CQkvKiBBbm90aGVyIG1lc3NhZ2UgcXVl
dWUgSUQgY3JlYXRlZCBpbiBzZXR1cCAqLwotTVNHQlVGIHNuZF9idWYsIHJjdl9idWY7Ci0KLXN0
cnVjdCB0ZXN0X2Nhc2VfdCB7Ci0JaW50ICpxdWV1ZV9pZDsKLQlNU0dCVUYgKm1idWY7Ci0JaW50
IGVycm9yOwotfSBUQ1tdID0gewotCS8qIEVBQ0NFUyAtIHRoZSBxdWV1ZSBoYXMgbm8gcmVhZCBh
Y2Nlc3MgKi8KLQl7Ci0JJm1zZ19xXzIsICZyY3ZfYnVmLCBFQUNDRVN9LAotCSAgICAvKiBFRkFV
TFQgLSB0aGUgbWVzc2FnZSBidWZmZXIgYWRkcmVzcyBpcyBpbnZhbGlkICovCi0JewotCSZtc2df
cV8xLCAoTVNHQlVGICopIC0gMSwgRUZBVUxUfQorI2luY2x1ZGUgInRzdF90ZXN0LmgiCisjaW5j
bHVkZSAidHN0X3NhZmVfc3lzdl9pcGMuaCIKKyNpbmNsdWRlICJsaWJuZXdpcGMuaCIKKworc3Rh
dGljIGtleV90IG1zZ2tleTsKK3N0YXRpYyBpbnQgcXVldWVfaWQgPSAtMTsKK3N0YXRpYyBpbnQg
YmFkX2lkID0gLTE7CitzdHJ1Y3QgcGFzc3dkICpwdzsKKworc3RhdGljIHN0cnVjdCBidWYgewor
CWxvbmcgdHlwZTsKKwljaGFyIG10ZXh0W01TR1NJWkVdOworfSByY3ZfYnVmLCBzbmRfYnVmID0g
e01TR1RZUEUsICJoZWxsbyJ9OworCitzdGF0aWMgc3RydWN0IHRjYXNlIHsKKwlpbnQgKmlkOwor
CXN0cnVjdCBidWYgKmJ1ZmZlcjsKKwlpbnQgbXNnc3o7CisJbG9uZyBtc2d0eXA7CisJaW50IG1z
Z2ZsYWc7CisJaW50IGV4cF91c2VyOworCWludCBleHBfZXJyOworfSB0Y2FzZXNbXSA9IHsKKwl7
JnF1ZXVlX2lkLCAmcmN2X2J1ZiwgNCwgMSwgMCwgMCwgRTJCSUd9LAorCXsmcXVldWVfaWQsICZy
Y3ZfYnVmLCBNU0dTSVpFLCAxLCAwLCAxLCBFQUNDRVN9LAorCXsmcXVldWVfaWQsIE5VTEwsIE1T
R1NJWkUsIDEsIDAsIDAsIEVGQVVMVH0sCisJeyZiYWRfaWQsICZyY3ZfYnVmLCBNU0dTSVpFLCAx
LCAwLCAwLCBFSU5WQUx9LAorCXsmcXVldWVfaWQsICZyY3ZfYnVmLCAtMSwgMSwgMCwgMCwgRUlO
VkFMfSwKKwl7JnF1ZXVlX2lkLCAmcmN2X2J1ZiwgTVNHU0laRSwgMiwgSVBDX05PV0FJVCwgMCwg
RU5PTVNHfSwKIH07CiAKLWludCBtYWluKGludCBhYywgY2hhciAqKmF2KQorc3RhdGljIHZvaWQg
dmVyaWZ5X21zZ3JjdihzdHJ1Y3QgdGNhc2UgKnRjKQogewotCWludCBsYzsKLQlpbnQgaTsKLQot
CXRzdF9wYXJzZV9vcHRzKGFjLCBhdiwgTlVMTCwgTlVMTCk7Ci0KLQlzZXR1cCgpOwkJLyogZ2xv
YmFsIHNldHVwICovCi0KLQkvKiBUaGUgZm9sbG93aW5nIGxvb3AgY2hlY2tzIGxvb3Bpbmcgc3Rh
dGUgaWYgLWkgb3B0aW9uIGdpdmVuICovCi0KLQlmb3IgKGxjID0gMDsgVEVTVF9MT09QSU5HKGxj
KTsgbGMrKykgewotCQkvKiByZXNldCB0c3RfY291bnQgaW4gY2FzZSB3ZSBhcmUgbG9vcGluZyAq
LwotCQl0c3RfY291bnQgPSAwOwotCi0JCWZvciAoaSA9IDA7IGkgPCBUU1RfVE9UQUw7IGkrKykg
ewotCi0JCQkvKgotCQkJICogVXNlIHRoZSBURVNUIG1hY3JvIHRvIG1ha2UgdGhlIGNhbGwKLQkJ
CSAqLwotCi0JCQlURVNUKG1zZ3JjdigqKFRDW2ldLnF1ZXVlX2lkKSwgVENbaV0ubWJ1ZiwgTVNH
U0laRSwKLQkJCQkgICAgMSwgSVBDX05PV0FJVCkpOwotCi0JCQlpZiAoVEVTVF9SRVRVUk4gIT0g
LTEpIHsKLQkJCQl0c3RfcmVzbShURkFJTCwgImNhbGwgc3VjY2VlZGVkIHVuZXhwZWN0ZWRseSIp
OwotCQkJCWNvbnRpbnVlOwotCQkJfQotCi0JCQlpZiAoVEVTVF9FUlJOTyA9PSBUQ1tpXS5lcnJv
cikgewotCQkJCXRzdF9yZXNtKFRQQVNTLCAiZXhwZWN0ZWQgZmFpbHVyZSAtIGVycm5vID0gIgot
CQkJCQkgIiVkIDogJXMiLCBURVNUX0VSUk5PLAotCQkJCQkgc3RyZXJyb3IoVEVTVF9FUlJOTykp
OwotCQkJfSBlbHNlIHsKLQkJCQl0c3RfcmVzbShURkFJTCwgImNhbGwgZmFpbGVkIHdpdGggYW4g
IgotCQkJCQkgInVuZXhwZWN0ZWQgZXJyb3IgLSAlZCA6ICVzIiwKLQkJCQkJIFRFU1RfRVJSTk8s
IHN0cmVycm9yKFRFU1RfRVJSTk8pKTsKLQkJCX0KLQkJfQorCVRFU1QobXNncmN2KCp0Yy0+aWQs
IHRjLT5idWZmZXIsIHRjLT5tc2dzeiwgdGMtPm1zZ3R5cCwgdGMtPm1zZ2ZsYWcpKTsKKwlpZiAo
VFNUX1JFVCAhPSAtMSkgeworCQl0c3RfcmVzKFRGQUlMLCAic21ncmN2KCkgc3VjY2VlZGVkIHVu
ZXhwZWN0ZWRseSIpOworCQlyZXR1cm47CiAJfQogCi0JY2xlYW51cCgpOwotCi0JdHN0X2V4aXQo
KTsKKwlpZiAoVFNUX0VSUiA9PSB0Yy0+ZXhwX2VycikgeworCQl0c3RfcmVzKFRQQVNTIHwgVFRF
UlJOTywgIm1zZ3JjdigpIGZhaWxlZCBhcyBleHBlY3RlZCIpOworCX0gZWxzZSB7CisJCXRzdF9y
ZXMoVEZBSUwgfCBUVEVSUk5PLCAibXNncmN2KCkgZmFpbGVkIHVuZXhwZWN0ZWRseSwiCisJCQki
IGV4cGVjdGVkICVzIGJ1dCBnb3QiLCB0c3Rfc3RyZXJybm8odGMtPmV4cF9lcnIpKTsKKwl9CiB9
CiAKLS8qCi0gKiBzZXR1cCgpIC0gcGVyZm9ybXMgYWxsIHRoZSBPTkUgVElNRSBzZXR1cCBmb3Ig
dGhpcyB0ZXN0LgotICovCi12b2lkIHNldHVwKHZvaWQpCitzdGF0aWMgdm9pZCBkb190ZXN0KHVu
c2lnbmVkIGludCBuKQogewotCWtleV90IG1zZ2tleTI7Ci0KLQl0c3RfcmVxdWlyZV9yb290KCk7
Ci0KLQl0c3Rfc2lnKE5PRk9SSywgREVGX0hBTkRMRVIsIGNsZWFudXApOwotCi0JVEVTVF9QQVVT
RTsKLQotCS8qIFN3aXRjaCB0byBub2JvZHkgdXNlciBmb3IgY29ycmVjdCBlcnJvciBjb2RlIGNv
bGxlY3Rpb24gKi8KLQlsdHB1c2VyID0gZ2V0cHduYW0obm9ib2R5X3VpZCk7Ci0JaWYgKHNldHVp
ZChsdHB1c2VyLT5wd191aWQpID09IC0xKSB7Ci0JCXRzdF9yZXNtKFRJTkZPLCAic2V0dWlkIGZh
aWxlZCB0byAiCi0JCQkgInRvIHNldCB0aGUgZWZmZWN0aXZlIHVpZCB0byAlZCIsIGx0cHVzZXIt
PnB3X3VpZCk7Ci0JCXBlcnJvcigic2V0dWlkIik7Ci0JfQotCi0JLyoKLQkgKiBDcmVhdGUgYSB0
ZW1wb3JhcnkgZGlyZWN0b3J5IGFuZCBjZCBpbnRvIGl0LgotCSAqIFRoaXMgaGVscHMgdG8gZW5z
dXJlIHRoYXQgYSB1bmlxdWUgbXNna2V5IGlzIGNyZWF0ZWQuCi0JICogU2VlIGxpYnMvbGlibHRw
aXBjL2xpYmlwYy5jIGZvciBtb3JlIGluZm9ybWF0aW9uLgotCSAqLwotCXRzdF90bXBkaXIoKTsK
LQotCW1zZ2tleSA9IGdldGlwY2tleSgpOwotCi0JLyogR2V0IGFuIG5ldyBJUEMgcmVzb3VyY2Ug
a2V5LiAqLwotCW1zZ2tleTIgPSBnZXRpcGNrZXkoKTsKLQotCS8qIGNyZWF0ZSBhIG1lc3NhZ2Ug
cXVldWUgd2l0aCByZWFkL3dyaXRlIHBlcm1pc3Npb24gKi8KLQlpZiAoKG1zZ19xXzEgPSBtc2dn
ZXQobXNna2V5LCBJUENfQ1JFQVQgfCBJUENfRVhDTCB8IE1TR19SVykpID09IC0xKSB7Ci0JCXRz
dF9icmttKFRCUk9LLCBjbGVhbnVwLCAiQ2FuJ3QgY3JlYXRlIG1lc3NhZ2UgcXVldWUgIzEiKTsK
LQl9Ci0KLQkvKiBpbml0aWFsaXplIGEgbWVzc2FnZSBidWZmZXIgKi8KLQlpbml0X2J1Zigmc25k
X2J1ZiwgTVNHVFlQRSwgTVNHU0laRSk7Ci0KLQkvKiBwdXQgaXQgb24gbXNxX3FfMSAqLwotCWlm
IChtc2dzbmQobXNnX3FfMSwgJnNuZF9idWYsIE1TR1NJWkUsIElQQ19OT1dBSVQpID09IC0xKSB7
Ci0JCXRzdF9icmttKFRCUk9LLCBjbGVhbnVwLCAiQ291bGRuJ3QgcHV0IG1lc3NhZ2Ugb24gcXVl
dWUiKTsKLQl9Ci0KLQkvKiBjcmVhdGUgYSBtZXNzYWdlIHF1ZXVlIHdpdGhvdXQgcmVhZC93cml0
ZSBwZXJtaXNzaW9uICovCi0JaWYgKChtc2dfcV8yID0gbXNnZ2V0KG1zZ2tleTIsIElQQ19DUkVB
VCB8IElQQ19FWENMKSkgPT0gLTEpIHsKLQkJdHN0X2Jya20oVEJST0ssIGNsZWFudXAsICJDYW4n
dCBjcmVhdGUgbWVzc2FnZSBxdWV1ZSAjMiIpOworCXN0cnVjdCB0Y2FzZSAqdGMgPSAmdGNhc2Vz
W25dOworCXBpZF90IHBpZDsKKworCXF1ZXVlX2lkID0gU0FGRV9NU0dHRVQobXNna2V5LCBJUENf
Q1JFQVQgfCBJUENfRVhDTCB8IE1TR19SVyk7CisKKwlTQUZFX01TR1NORChxdWV1ZV9pZCwgJnNu
ZF9idWYsIE1TR1NJWkUsIDApOworCXBpZCA9IFNBRkVfRk9SSygpOworCWlmIChwaWQgPT0gMCkg
eworCQlpZiAodGMtPmV4cF91c2VyKQorCQkJU0FGRV9TRVRVSUQocHctPnB3X3VpZCk7CisJCXZl
cmlmeV9tc2dyY3YodGMpOworCQlfZXhpdCgwKTsKIAl9CisJdHN0X3JlYXBfY2hpbGRyZW4oKTsK
KwlTQUZFX01TR0NUTChxdWV1ZV9pZCwgSVBDX1JNSUQsIE5VTEwpOwogfQogCi0vKgotICogY2xl
YW51cCgpIC0gcGVyZm9ybXMgYWxsIHRoZSBPTkUgVElNRSBjbGVhbnVwIGZvciB0aGlzIHRlc3Qg
YXQgY29tcGxldGlvbgotICogCSAgICAgICBvciBwcmVtYXR1cmUgZXhpdC4KLSAqLwotdm9pZCBj
bGVhbnVwKHZvaWQpCitzdGF0aWMgdm9pZCBzZXR1cCh2b2lkKQogewotCS8qIGlmIGl0IGV4aXN0
cywgcmVtb3ZlIHRoZSBtZXNzYWdlIHF1ZXVlICMxICovCi0Jcm1fcXVldWUobXNnX3FfMSk7Ci0K
LQkvKiBpZiBpdCBleGlzdHMsIHJlbW92ZSB0aGUgbWVzc2FnZSBxdWV1ZSAjMiAqLwotCXJtX3F1
ZXVlKG1zZ19xXzIpOwotCi0JdHN0X3JtZGlyKCk7CisJbXNna2V5ID0gR0VUSVBDS0VZKCk7CisJ
cHcgPSBTQUZFX0dFVFBXTkFNKCJub2JvZHkiKTsKK30KIAorc3RhdGljIHZvaWQgY2xlYW51cCh2
b2lkKQoreworCWlmIChxdWV1ZV9pZCAhPSAtMSkKKwkJU0FGRV9NU0dDVEwocXVldWVfaWQsIElQ
Q19STUlELCBOVUxMKTsKIH0KKworc3RhdGljIHN0cnVjdCB0c3RfdGVzdCB0ZXN0ID0geworCS5u
ZWVkc190bXBkaXIgPSAxLAorCS5uZWVkc19yb290ID0gMSwKKwkuZm9ya3NfY2hpbGQgPSAxLAor
CS50Y250ID0gQVJSQVlfU0laRSh0Y2FzZXMpLAorCS5zZXR1cCA9IHNldHVwLAorCS5jbGVhbnVw
ID0gY2xlYW51cCwKKwkudGVzdCA9IGRvX3Rlc3QKK307CmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMv
a2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDMuYyBiL3Rlc3RjYXNlcy9rZXJuZWwv
c3lzY2FsbHMvaXBjL21zZ3Jjdi9tc2dyY3YwMy5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NApp
bmRleCBhODFmNzQzNmQuLjAwMDAwMDAwMAotLS0gYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxz
L2lwYy9tc2dyY3YvbXNncmN2MDMuYworKysgL2Rldi9udWxsCkBAIC0xLDE2MiArMCwwIEBACi0v
KgotICoKLSAqICAgQ29weXJpZ2h0IChjKSBJbnRlcm5hdGlvbmFsIEJ1c2luZXNzIE1hY2hpbmVz
ICBDb3JwLiwgMjAwMQotICoKLSAqICAgVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7ICB5
b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5Ci0gKiAgIGl0IHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5Ci0g
KiAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDIgb2YgdGhl
IExpY2Vuc2UsIG9yCi0gKiAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCi0g
KgotICogICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3
aWxsIGJlIHVzZWZ1bCwKLSAqICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyAgd2l0aG91dCBl
dmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCi0gKiAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRO
RVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZQotICogICB0aGUgR05VIEdlbmVyYWwg
UHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KLSAqCi0gKiAgIFlvdSBzaG91bGQgaGF2
ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlCi0gKiAg
IGFsb25nIHdpdGggdGhpcyBwcm9ncmFtOyAgaWYgbm90LCB3cml0ZSB0byB0aGUgRnJlZSBTb2Z0
d2FyZQotICogICBGb3VuZGF0aW9uLCBJbmMuLCA1MSBGcmFua2xpbiBTdHJlZXQsIEZpZnRoIEZs
b29yLCBCb3N0b24sIE1BIDAyMTEwLTEzMDEgVVNBCi0gKi8KLQotLyoKLSAqIE5BTUUKLSAqCW1z
Z3JjdjAzLmMKLSAqCi0gKiBERVNDUklQVElPTgotICoJbXNncmN2MDMgLSB0ZXN0IGZvciBFSU5W
QUwgZXJyb3IKLSAqCi0gKiBBTEdPUklUSE0KLSAqCWNyZWF0ZSBhIG1lc3NhZ2UgcXVldWUgd2l0
aCByZWFkL3dyaXRlIHBlcm1pc3Npb25zCi0gKglsb29wIGlmIHRoYXQgb3B0aW9uIHdhcyBzcGVj
aWZpZWQKLSAqCWNhbGwgbXNncmN2KCkgdXNpbmcgdHdvIGRpZmZlcmVudCBpbnZhbGlkIGNhc2Vz
Ci0gKgljaGVjayB0aGUgZXJybm8gdmFsdWUKLSAqCSAgaXNzdWUgYSBQQVNTIG1lc3NhZ2UgaWYg
d2UgZ2V0IEVJTlZBTAotICoJb3RoZXJ3aXNlLCB0aGUgdGVzdHMgZmFpbHMKLSAqCSAgaXNzdWUg
YSBGQUlMIG1lc3NhZ2UKLSAqCWNhbGwgY2xlYW51cAotICoKLSAqIFVTQUdFOiAgPGZvciBjb21t
YW5kLWxpbmU+Ci0gKiAgbXNncmN2MDMgWy1jIG5dIFstZV0gWy1pIG5dIFstSSB4XSBbLVAgeF0g
Wy10XQotICogICAgIHdoZXJlLCAgLWMgbiA6IFJ1biBuIGNvcGllcyBjb25jdXJyZW50bHkuCi0g
KiAgICAgICAgICAgICAtZSAgIDogVHVybiBvbiBlcnJubyBsb2dnaW5nLgotICoJICAgICAgIC1p
IG4gOiBFeGVjdXRlIHRlc3QgbiB0aW1lcy4KLSAqCSAgICAgICAtSSB4IDogRXhlY3V0ZSB0ZXN0
IGZvciB4IHNlY29uZHMuCi0gKgkgICAgICAgLVAgeCA6IFBhdXNlIGZvciB4IHNlY29uZHMgYmV0
d2VlbiBpdGVyYXRpb25zLgotICoJICAgICAgIC10ICAgOiBUdXJuIG9uIHN5c2NhbGwgdGltaW5n
LgotICoKLSAqIEhJU1RPUlkKLSAqCTAzLzIwMDEgLSBXcml0dGVuIGJ5IFdheW5lIEJveWVyCi0g
KgotICogUkVTVFJJQ1RJT05TCi0gKglub25lCi0gKi8KLQotI2luY2x1ZGUgInRlc3QuaCIKLQot
I2luY2x1ZGUgImlwY21zZy5oIgotCi12b2lkIGNsZWFudXAodm9pZCk7Ci12b2lkIHNldHVwKHZv
aWQpOwotCi1jaGFyICpUQ0lEID0gIm1zZ3JjdjAzIjsKLWludCBUU1RfVE9UQUwgPSAyOwotCi1p
bnQgbXNnX3FfMSA9IC0xOwkJLyogVGhlIG1lc3NhZ2UgcXVldWUgaWQgY3JlYXRlZCBpbiBzZXR1
cCAqLwotaW50IGJhZF9xID0gLTE7CQkJLyogYSB2YWx1ZSB0byB1c2UgYXMgYSBiYWQgcXVldWUg
SUQgKi8KLU1TR0JVRiByY3ZfYnVmOwotCi1zdHJ1Y3QgdGVzdF9jYXNlX3QgewotCWludCAqcXVl
dWVfaWQ7Ci0JaW50IG1zaXplOwotCWludCBlcnJvcjsKLX0gVENbXSA9IHsKLQkvKiBFSU5WQUwg
LSB0aGUgcXVldWUgSUQgaXMgaW52YWxpZCAqLwotCXsKLQkmYmFkX3EsIE1TR1NJWkUsIEVJTlZB
TH0sCi0JICAgIC8qIEVJTlZBTCAtIHRoZSBtZXNzYWdlIHNpemUgaXMgbGVzcyB0aGFuIDAgKi8K
LQl7Ci0JJm1zZ19xXzEsIC0xLCBFSU5WQUx9Ci19OwotCi1pbnQgbWFpbihpbnQgYWMsIGNoYXIg
KiphdikKLXsKLQlpbnQgbGM7Ci0JaW50IGk7Ci0KLQl0c3RfcGFyc2Vfb3B0cyhhYywgYXYsIE5V
TEwsIE5VTEwpOwotCi0Jc2V0dXAoKTsJCS8qIGdsb2JhbCBzZXR1cCAqLwotCi0JLyogVGhlIGZv
bGxvd2luZyBsb29wIGNoZWNrcyBsb29waW5nIHN0YXRlIGlmIC1pIG9wdGlvbiBnaXZlbiAqLwot
Ci0JZm9yIChsYyA9IDA7IFRFU1RfTE9PUElORyhsYyk7IGxjKyspIHsKLQkJLyogcmVzZXQgdHN0
X2NvdW50IGluIGNhc2Ugd2UgYXJlIGxvb3BpbmcgKi8KLQkJdHN0X2NvdW50ID0gMDsKLQotCQlm
b3IgKGkgPSAwOyBpIDwgVFNUX1RPVEFMOyBpKyspIHsKLQotCQkJLyoKLQkJCSAqIFVzZSB0aGUg
VEVTVCBtYWNybyB0byBtYWtlIHRoZSBjYWxsCi0JCQkgKi8KLQotCQkJVEVTVChtc2dyY3YoKihU
Q1tpXS5xdWV1ZV9pZCksICZyY3ZfYnVmLCBUQ1tpXS5tc2l6ZSwKLQkJCQkgICAgMSwgMCkpOwot
Ci0JCQlpZiAoVEVTVF9SRVRVUk4gIT0gLTEpIHsKLQkJCQl0c3RfcmVzbShURkFJTCwgImNhbGwg
c3VjY2VlZGVkIHVuZXhwZWN0ZWRseSIpOwotCQkJCWNvbnRpbnVlOwotCQkJfQotCi0JCQlpZiAo
VEVTVF9FUlJOTyA9PSBUQ1tpXS5lcnJvcikgewotCQkJCXRzdF9yZXNtKFRQQVNTLCAiZXhwZWN0
ZWQgZmFpbHVyZSAtIGVycm5vID0gIgotCQkJCQkgIiVkIDogJXMiLCBURVNUX0VSUk5PLAotCQkJ
CQkgc3RyZXJyb3IoVEVTVF9FUlJOTykpOwotCQkJfSBlbHNlIHsKLQkJCQl0c3RfcmVzbShURkFJ
TCwgImNhbGwgZmFpbGVkIHdpdGggYW4gIgotCQkJCQkgInVuZXhwZWN0ZWQgZXJyb3IgLSAlZCA6
ICVzIiwKLQkJCQkJIFRFU1RfRVJSTk8sIHN0cmVycm9yKFRFU1RfRVJSTk8pKTsKLQkJCX0KLQkJ
fQotCX0KLQotCWNsZWFudXAoKTsKLQotCXRzdF9leGl0KCk7Ci19Ci0KLS8qCi0gKiBzZXR1cCgp
IC0gcGVyZm9ybXMgYWxsIHRoZSBPTkUgVElNRSBzZXR1cCBmb3IgdGhpcyB0ZXN0LgotICovCi12
b2lkIHNldHVwKHZvaWQpCi17Ci0KLQl0c3Rfc2lnKE5PRk9SSywgREVGX0hBTkRMRVIsIGNsZWFu
dXApOwotCi0JVEVTVF9QQVVTRTsKLQotCS8qCi0JICogQ3JlYXRlIGEgdGVtcG9yYXJ5IGRpcmVj
dG9yeSBhbmQgY2QgaW50byBpdC4KLQkgKiBUaGlzIGhlbHBzIHRvIGVuc3VyZSB0aGF0IGEgdW5p
cXVlIG1zZ2tleSBpcyBjcmVhdGVkLgotCSAqIFNlZSBsaWJzL2xpYmx0cGlwYy9saWJpcGMuYyBm
b3IgbW9yZSBpbmZvcm1hdGlvbi4KLQkgKi8KLQl0c3RfdG1wZGlyKCk7Ci0KLQltc2drZXkgPSBn
ZXRpcGNrZXkoKTsKLQotCS8qIGNyZWF0ZSBhIG1lc3NhZ2UgcXVldWUgd2l0aCByZWFkL3dyaXRl
IHBlcm1pc3Npb24gKi8KLQlpZiAoKG1zZ19xXzEgPSBtc2dnZXQobXNna2V5LCBJUENfQ1JFQVQg
fCBJUENfRVhDTCB8IE1TR19SVykpID09IC0xKSB7Ci0JCXRzdF9icmttKFRCUk9LLCBjbGVhbnVw
LCAiQ2FuJ3QgY3JlYXRlIG1lc3NhZ2UgcXVldWUiKTsKLQl9Ci19Ci0KLS8qCi0gKiBjbGVhbnVw
KCkgLSBwZXJmb3JtcyBhbGwgdGhlIE9ORSBUSU1FIGNsZWFudXAgZm9yIHRoaXMgdGVzdCBhdCBj
b21wbGV0aW9uCi0gKiAJICAgICAgIG9yIHByZW1hdHVyZSBleGl0LgotICovCi12b2lkIGNsZWFu
dXAodm9pZCkKLXsKLQkvKiBpZiBpdCBleGlzdHMsIHJlbW92ZSB0aGUgbWVzc2FnZSBxdWV1ZSB0
aGF0IHdhcyBjcmVhdGVkICovCi0Jcm1fcXVldWUobXNnX3FfMSk7Ci0KLQl0c3Rfcm1kaXIoKTsK
LQotfQpkaWZmIC0tZ2l0IGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2L21z
Z3JjdjA0LmMgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDQu
YwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggNTczMDU5YzM1Li4wMDAwMDAwMDAKLS0t
IGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2L21zZ3JjdjA0LmMKKysrIC9k
ZXYvbnVsbApAQCAtMSwxODEgKzAsMCBAQAotLyoKLSAqCi0gKiAgIENvcHlyaWdodCAoYykgSW50
ZXJuYXRpb25hbCBCdXNpbmVzcyBNYWNoaW5lcyAgQ29ycC4sIDIwMDEKLSAqCi0gKiAgIFRoaXMg
cHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOyAgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29y
IG1vZGlmeQotICogICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1Ymxp
YyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieQotICogICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0
aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcgotICogICAoYXQgeW91ciBv
cHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgotICoKLSAqICAgVGhpcyBwcm9ncmFtIGlzIGRpc3Ry
aWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCi0gKiAgIGJ1dCBXSVRI
T1VUIEFOWSBXQVJSQU5UWTsgIHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgot
ICogICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0Uu
ICBTZWUKLSAqICAgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFp
bHMuCi0gKgotICogICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUg
R2VuZXJhbCBQdWJsaWMgTGljZW5zZQotICogICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbTsgIGlm
IG5vdCwgd3JpdGUgdG8gdGhlIEZyZWUgU29mdHdhcmUKLSAqICAgRm91bmRhdGlvbiwgSW5jLiwg
NTEgRnJhbmtsaW4gU3RyZWV0LCBGaWZ0aCBGbG9vciwgQm9zdG9uLCBNQSAwMjExMC0xMzAxIFVT
QQotICovCi0KLS8qCi0gKiBOQU1FCi0gKgltc2dyY3YwNC5jCi0gKgotICogREVTQ1JJUFRJT04K
LSAqCW1zZ3JjdjA0IC0gdGVzdCBmb3IgRTJCSUcgYW5kIEVOT01TRyBlcnJvcnMKLSAqCi0gKiBB
TEdPUklUSE0KLSAqCWNyZWF0ZSBhIG1lc3NhZ2UgcXVldWUgd2l0aCByZWFkL3dyaXRlIHBlcm1p
c3Npb25zCi0gKglpbml0aWFsaXplIGEgbWVzc2FnZSBidWZmZXIgd2l0aCBhIGtub3duIG1lc3Nh
Z2UgYW5kIHR5cGUKLSAqCWVucXVldWUgdGhlIG1lc3NhZ2UKLSAqCWxvb3AgaWYgdGhhdCBvcHRp
b24gd2FzIHNwZWNpZmllZAotICoJY2FsbCBtc2dyY3YoKSB1c2luZyB0d28gZGlmZmVyZW50IGlu
dmFsaWQgY2FzZXMKLSAqCWNoZWNrIHRoZSBlcnJubyB2YWx1ZQotICoJICBpc3N1ZSBhIFBBU1Mg
bWVzc2FnZSBpZiB3ZSBnZXQgRTJCSUcgb3IgRU5PTVNHCi0gKglvdGhlcndpc2UsIHRoZSB0ZXN0
cyBmYWlscwotICoJICBpc3N1ZSBhIEZBSUwgbWVzc2FnZQotICoJY2FsbCBjbGVhbnVwCi0gKgot
ICogVVNBR0U6ICA8Zm9yIGNvbW1hbmQtbGluZT4KLSAqICBtc2dyY3YwNCBbLWMgbl0gWy1lXSBb
LWkgbl0gWy1JIHhdIFstUCB4XSBbLXRdCi0gKiAgICAgd2hlcmUsICAtYyBuIDogUnVuIG4gY29w
aWVzIGNvbmN1cnJlbnRseS4KLSAqICAgICAgICAgICAgIC1lICAgOiBUdXJuIG9uIGVycm5vIGxv
Z2dpbmcuCi0gKgkgICAgICAgLWkgbiA6IEV4ZWN1dGUgdGVzdCBuIHRpbWVzLgotICoJICAgICAg
IC1JIHggOiBFeGVjdXRlIHRlc3QgZm9yIHggc2Vjb25kcy4KLSAqCSAgICAgICAtUCB4IDogUGF1
c2UgZm9yIHggc2Vjb25kcyBiZXR3ZWVuIGl0ZXJhdGlvbnMuCi0gKgkgICAgICAgLXQgICA6IFR1
cm4gb24gc3lzY2FsbCB0aW1pbmcuCi0gKgotICogSElTVE9SWQotICoJMDMvMjAwMSAtIFdyaXR0
ZW4gYnkgV2F5bmUgQm95ZXIKLSAqCi0gKiBSRVNUUklDVElPTlMKLSAqCW5vbmUKLSAqLwotCi0j
aW5jbHVkZSAidGVzdC5oIgotCi0jaW5jbHVkZSAiaXBjbXNnLmgiCi0KLXZvaWQgY2xlYW51cCh2
b2lkKTsKLXZvaWQgc2V0dXAodm9pZCk7Ci0KLWNoYXIgKlRDSUQgPSAibXNncmN2MDQiOwotaW50
IFRTVF9UT1RBTCA9IDI7Ci0KLWludCBtc2dfcV8xID0gLTE7CQkvKiBUaGUgbWVzc2FnZSBxdWV1
ZSBpZCBjcmVhdGVkIGluIHNldHVwICovCi0KLSNkZWZpbmUgU01TSVpFCTUxMgotCi1NU0dCVUYg
c25kX2J1ZiwgcmN2X2J1ZjsKLQotc3RydWN0IHRlc3RfY2FzZV90IHsKLQlpbnQgc2l6ZTsKLQlp
bnQgdHlwZTsKLQlpbnQgZmxhZ3M7Ci0JaW50IGVycm9yOwotfSBUQ1tdID0gewotCS8qCi0JICog
RTJCSUcgLSBUaGUgcmVjZWl2ZSBidWZmZXIgaXMgdG9vIHNtYWxsIGZvciB0aGUgbWVzc2FnZSBh
bmQKLQkgKiAgICAgICAgIE1TR19OT0VSUk9SIGlzbid0IGFzc2VydGVkIGluIHRoZSBmbGFncy4K
LQkgKi8KLQl7Ci0JU01TSVpFLCAxLCAwLCBFMkJJR30sCi0JICAgIC8qCi0JICAgICAqIEVOT01T
RyAtIFRoZXJlIGlzIG5vIG1lc3NhZ2Ugd2l0aCB0aGUgcmVxdWVzdGVkIHR5cGUgYW5kCi0JICAg
ICAqICAgICAgICAgIElQQ19OT1dBSVQgaXMgYXNzZXJ0ZWQgaW4gdGhlIGZsYWdzLgotCSAgICAg
Ki8KLQl7Ci0JTVNHU0laRSwgMiwgSVBDX05PV0FJVCwgRU5PTVNHfQotfTsKLQotaW50IG1haW4o
aW50IGFjLCBjaGFyICoqYXYpCi17Ci0JaW50IGxjOwotCWludCBpOwotCi0JdHN0X3BhcnNlX29w
dHMoYWMsIGF2LCBOVUxMLCBOVUxMKTsKLQotCXNldHVwKCk7CQkvKiBnbG9iYWwgc2V0dXAgKi8K
LQotCS8qIFRoZSBmb2xsb3dpbmcgbG9vcCBjaGVja3MgbG9vcGluZyBzdGF0ZSBpZiAtaSBvcHRp
b24gZ2l2ZW4gKi8KLQotCWZvciAobGMgPSAwOyBURVNUX0xPT1BJTkcobGMpOyBsYysrKSB7Ci0J
CS8qIHJlc2V0IHRzdF9jb3VudCBpbiBjYXNlIHdlIGFyZSBsb29waW5nICovCi0JCXRzdF9jb3Vu
dCA9IDA7Ci0KLQkJZm9yIChpID0gMDsgaSA8IFRTVF9UT1RBTDsgaSsrKSB7Ci0KLQkJCS8qCi0J
CQkgKiBVc2UgdGhlIFRFU1QgbWFjcm8gdG8gbWFrZSB0aGUgY2FsbAotCQkJICovCi0KLQkJCVRF
U1QobXNncmN2KG1zZ19xXzEsICZyY3ZfYnVmLCBUQ1tpXS5zaXplLCBUQ1tpXS50eXBlLAotCQkJ
CSAgICBUQ1tpXS5mbGFncykpOwotCi0JCQlpZiAoVEVTVF9SRVRVUk4gIT0gLTEpIHsKLQkJCQl0
c3RfcmVzbShURkFJTCwgImNhbGwgc3VjY2VlZGVkIHVuZXhwZWN0ZWRseSIpOwotCQkJCWNvbnRp
bnVlOwotCQkJfQotCi0JCQlpZiAoVEVTVF9FUlJOTyA9PSBUQ1tpXS5lcnJvcikgewotCQkJCXRz
dF9yZXNtKFRQQVNTLCAiZXhwZWN0ZWQgZmFpbHVyZSAtIGVycm5vID0gIgotCQkJCQkgIiVkIDog
JXMiLCBURVNUX0VSUk5PLAotCQkJCQkgc3RyZXJyb3IoVEVTVF9FUlJOTykpOwotCQkJfSBlbHNl
IHsKLQkJCQl0c3RfcmVzbShURkFJTCwgImNhbGwgZmFpbGVkIHdpdGggYW4gIgotCQkJCQkgInVu
ZXhwZWN0ZWQgZXJyb3IgLSAlZCA6ICVzIiwKLQkJCQkJIFRFU1RfRVJSTk8sIHN0cmVycm9yKFRF
U1RfRVJSTk8pKTsKLQkJCX0KLQkJfQotCX0KLQotCWNsZWFudXAoKTsKLQotCXRzdF9leGl0KCk7
Ci19Ci0KLS8qCi0gKiBzZXR1cCgpIC0gcGVyZm9ybXMgYWxsIHRoZSBPTkUgVElNRSBzZXR1cCBm
b3IgdGhpcyB0ZXN0LgotICovCi12b2lkIHNldHVwKHZvaWQpCi17Ci0KLQl0c3Rfc2lnKE5PRk9S
SywgREVGX0hBTkRMRVIsIGNsZWFudXApOwotCi0JVEVTVF9QQVVTRTsKLQotCS8qCi0JICogQ3Jl
YXRlIGEgdGVtcG9yYXJ5IGRpcmVjdG9yeSBhbmQgY2QgaW50byBpdC4KLQkgKiBUaGlzIGhlbHBz
IHRvIGVuc3VyZSB0aGF0IGEgdW5pcXVlIG1zZ2tleSBpcyBjcmVhdGVkLgotCSAqIFNlZSBsaWJz
L2xpYmx0cGlwYy9saWJpcGMuYyBmb3IgbW9yZSBpbmZvcm1hdGlvbi4KLQkgKi8KLQl0c3RfdG1w
ZGlyKCk7Ci0KLQltc2drZXkgPSBnZXRpcGNrZXkoKTsKLQotCS8qIGNyZWF0ZSBhIG1lc3NhZ2Ug
cXVldWUgd2l0aCByZWFkL3dyaXRlIHBlcm1pc3Npb24gKi8KLQlpZiAoKG1zZ19xXzEgPSBtc2dn
ZXQobXNna2V5LCBJUENfQ1JFQVQgfCBJUENfRVhDTCB8IE1TR19SVykpID09IC0xKSB7Ci0JCXRz
dF9icmttKFRCUk9LLCBjbGVhbnVwLCAiQ2FuJ3QgY3JlYXRlIG1lc3NhZ2UgcXVldWUiKTsKLQl9
Ci0KLQkvKiBpbml0aWFsaXplIGEgYnVmZmVyICovCi0JaW5pdF9idWYoJnNuZF9idWYsIE1TR1RZ
UEUsIE1TR1NJWkUpOwotCi0JLyogcHV0IHRoZSBtZXNzYWdlIG9uIHRoZSBxdWV1ZSAqLwotCWlm
IChtc2dzbmQobXNnX3FfMSwgJnNuZF9idWYsIE1TR1NJWkUsIDApID09IC0xKSB7Ci0JCXRzdF9i
cmttKFRCUk9LLCBjbGVhbnVwLCAiQ2FuJ3QgZW5xdWV1ZSBtZXNzYWdlIik7Ci0JfQotfQotCi0v
KgotICogY2xlYW51cCgpIC0gcGVyZm9ybXMgYWxsIHRoZSBPTkUgVElNRSBjbGVhbnVwIGZvciB0
aGlzIHRlc3QgYXQgY29tcGxldGlvbgotICogCSAgICAgICBvciBwcmVtYXR1cmUgZXhpdC4KLSAq
Lwotdm9pZCBjbGVhbnVwKHZvaWQpCi17Ci0JLyogaWYgaXQgZXhpc3RzLCByZW1vdmUgdGhlIG1l
c3NhZ2UgcXVldWUgdGhhdCB3YXMgY3JlYXRlZCAqLwotCXJtX3F1ZXVlKG1zZ19xXzEpOwotCi0J
dHN0X3JtZGlyKCk7Ci0KLX0KZGlmZiAtLWdpdCBhL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMv
aXBjL21zZ3Jjdi9tc2dyY3YwNS5jIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNn
cmN2L21zZ3JjdjA1LmMKaW5kZXggNGM3YTQ0NmU3Li4xMjZjMWJkMDUgMTAwNjQ0Ci0tLSBhL3Rl
c3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvaXBjL21zZ3Jjdi9tc2dyY3YwNS5jCisrKyBiL3Rlc3Rj
YXNlcy9rZXJuZWwvc3lzY2FsbHMvaXBjL21zZ3Jjdi9tc2dyY3YwNS5jCkBAIC0xLDIwNiArMSw4
MiBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKIC8qCisg
KiBDb3B5cmlnaHQgKGMpIEludGVybmF0aW9uYWwgQnVzaW5lc3MgTWFjaGluZXMgIENvcnAuLCAy
MDAxCiAgKgotICogICBDb3B5cmlnaHQgKGMpIEludGVybmF0aW9uYWwgQnVzaW5lc3MgTWFjaGlu
ZXMgIENvcnAuLCAyMDAxCi0gKgotICogICBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsg
IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkKLSAqICAgaXQgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkK
LSAqICAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMiBvZiB0
aGUgTGljZW5zZSwgb3IKLSAqICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4K
LSAqCi0gKiAgIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0
IHdpbGwgYmUgdXNlZnVsLAotICogICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7ICB3aXRob3V0
IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKLSAqICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJ
VE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlCi0gKiAgIHRoZSBHTlUgR2VuZXJh
bCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgotICoKLSAqICAgWW91IHNob3VsZCBo
YXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UKLSAq
ICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW07ICBpZiBub3QsIHdyaXRlIHRvIHRoZSBGcmVlIFNv
ZnR3YXJlCi0gKiAgIEZvdW5kYXRpb24sIEluYy4sIDUxIEZyYW5rbGluIFN0cmVldCwgRmlmdGgg
Rmxvb3IsIEJvc3RvbiwgTUEgMDIxMTAtMTMwMSBVU0EKKyAqIG1zZ3JjdiBlcnJvciB0ZXN0IGZv
ciBFSU5UUi4KICAqLwogCi0vKgotICogTkFNRQotICoJbXNncmN2MDUuYwotICoKLSAqIERFU0NS
SVBUSU9OCi0gKgltc2dyY3YwNSAtIHRlc3QgZm9yIEVJTlRSIGVycm9yCi0gKgotICogQUxHT1JJ
VEhNCi0gKgljcmVhdGUgYSBtZXNzYWdlIHF1ZXVlIHdpdGggcmVhZC93cml0ZSBwZXJtaXNzaW9u
cwotICoJbG9vcCBpZiB0aGF0IG9wdGlvbiB3YXMgc3BlY2lmaWVkCi0gKglmb3JrIGEgY2hpbGQg
d2hvIGF0dGVtcHRzIHRvIHJlYWQgYSBub24tZXhpc3RlbnQgbWVzc2FnZSB3aXRoIG1zZ3Jjdigp
Ci0gKglwYXJlbnQgc2VuZHMgYSBTSUdIVVAgdG8gdGhlIGNoaWxkLCB0aGVuIHdhaXRzIGZvciB0
aGUgY2hpbGQgdG8gY29tcGxldGUKLSAqCWNoZWNrIHRoZSBlcnJubyB2YWx1ZQotICoJICBpc3N1
ZSBhIFBBU1MgbWVzc2FnZSBpZiB3ZSBnZXQgRUlOVFIKLSAqCW90aGVyd2lzZSwgdGhlIHRlc3Rz
IGZhaWxzCi0gKgkgIGlzc3VlIGEgRkFJTCBtZXNzYWdlCi0gKgljaGlsZCBleGl0cywgcGFyZW50
IGNhbGxzIGNsZWFudXAKLSAqCi0gKiBVU0FHRTogIDxmb3IgY29tbWFuZC1saW5lPgotICogIG1z
Z3JjdjA1IFstYyBuXSBbLWVdIFstaSBuXSBbLUkgeF0gWy1QIHhdIFstdF0KLSAqICAgICB3aGVy
ZSwgIC1jIG4gOiBSdW4gbiBjb3BpZXMgY29uY3VycmVudGx5LgotICogICAgICAgICAgICAgLWUg
ICA6IFR1cm4gb24gZXJybm8gbG9nZ2luZy4KLSAqCSAgICAgICAtaSBuIDogRXhlY3V0ZSB0ZXN0
IG4gdGltZXMuCi0gKgkgICAgICAgLUkgeCA6IEV4ZWN1dGUgdGVzdCBmb3IgeCBzZWNvbmRzLgot
ICoJICAgICAgIC1QIHggOiBQYXVzZSBmb3IgeCBzZWNvbmRzIGJldHdlZW4gaXRlcmF0aW9ucy4K
LSAqCSAgICAgICAtdCAgIDogVHVybiBvbiBzeXNjYWxsIHRpbWluZy4KLSAqCi0gKiBISVNUT1JZ
Ci0gKgkwMy8yMDAxIC0gV3JpdHRlbiBieSBXYXluZSBCb3llcgotICogICAgICAxNC8wMy8yMDA4
IE1hdHRoaWV1IEZlcnRyw6kgKE1hdHRoaWV1LkZlcnRyZUBpcmlzYS5mcikKLSAqICAgICAgLSBG
aXggY29uY3VycmVuY3kgaXNzdWUuIER1ZSB0byB0aGUgdXNlIG9mIHVzbGVlcCBmdW5jdGlvbiB0
bwotICogICAgICAgIHN5bmNocm9uaXplIHByb2Nlc3Nlcywgc3luY2hyb25pemF0aW9uIGlzc3Vl
cyBjYW4gb2NjdXIgb24gYSBsb2FkZWQKLSAqICAgICAgICBzeXN0ZW0uIEZpeCB0aGlzIGJ5IHVz
aW5nIHBpcGVzIHRvIHN5bmNocm9uaXplIHByb2Nlc3Nlcy4KLSAqCi0gKiBSRVNUUklDVElPTlMK
LSAqCW5vbmUKLSAqLwotCi0jaW5jbHVkZSAidGVzdC5oIgotI2luY2x1ZGUgInNhZmVfbWFjcm9z
LmgiCi0KLSNpbmNsdWRlICJpcGNtc2cuaCIKLQogI2luY2x1ZGUgPHN5cy90eXBlcy5oPgogI2lu
Y2x1ZGUgPHN5cy93YWl0Lmg+Ci0KLXZvaWQgZG9fY2hpbGQodm9pZCk7Ci12b2lkIGNsZWFudXAo
dm9pZCk7Ci12b2lkIHNldHVwKHZvaWQpOwotI2lmZGVmIFVDTElOVVgKLSNkZWZpbmUgUElQRV9O
QU1FCSJtc2dyY3YwNSIKLXZvaWQgZG9fY2hpbGRfdWNsaW51eCh2b2lkKTsKLSNlbmRpZgotCi1j
aGFyICpUQ0lEID0gIm1zZ3JjdjA1IjsKLWludCBUU1RfVE9UQUwgPSAxOwotCi1pbnQgbXNnX3Ff
MSA9IC0xOwkJLyogVGhlIG1lc3NhZ2UgcXVldWUgaWQgY3JlYXRlZCBpbiBzZXR1cCAqLwotCi1N
U0dCVUYgcmN2X2J1ZjsKLXBpZF90IGNfcGlkOwotCi1pbnQgbWFpbihpbnQgYWMsIGNoYXIgKiph
dikKKyNpbmNsdWRlIDxzaWduYWwuaD4KKyNpbmNsdWRlICJ0c3RfdGVzdC5oIgorI2luY2x1ZGUg
InRzdF9zYWZlX3N5c3ZfaXBjLmgiCisjaW5jbHVkZSAibGlibmV3aXBjLmgiCisKK3N0YXRpYyBr
ZXlfdCBtc2drZXk7CitzdGF0aWMgaW50IHF1ZXVlX2lkID0gLTE7CitzdGF0aWMgc3RydWN0IGJ1
ZiB7CisJbG9uZyB0eXBlOworCWNoYXIgbXRleHRbTVNHU0laRV07Cit9IHJjdl9idWY7CisKK3N0
YXRpYyB2b2lkIHNpZ2hhbmRsZXIoaW50IHNpZykKIHsKLQlpbnQgbGM7Ci0KLQl0c3RfcGFyc2Vf
b3B0cyhhYywgYXYsIE5VTEwsIE5VTEwpOwotCi0jaWZkZWYgVUNMSU5VWAotCW1heWJlX3J1bl9j
aGlsZCgmZG9fY2hpbGRfdWNsaW51eCwgImQiLCAmbXNnX3FfMSk7Ci0jZW5kaWYKLQotCXNldHVw
KCk7CQkvKiBnbG9iYWwgc2V0dXAgKi8KLQotCWZvciAobGMgPSAwOyBURVNUX0xPT1BJTkcobGMp
OyBsYysrKSB7Ci0JCXRzdF9jb3VudCA9IDA7Ci0KLQkJLyoKLQkJICogZm9yayBhIGNoaWxkIHRo
YXQgd2lsbCBhdHRlbXB0IHRvIHJlYWQgYSBub24tZXhpc3RlbnQKLQkJICogbWVzc2FnZSBmcm9t
IHRoZSBxdWV1ZQotCQkgKi8KLQkJaWYgKChjX3BpZCA9IEZPUktfT1JfVkZPUksoKSkgPT0gLTEp
Ci0JCQl0c3RfYnJrbShUQlJPSywgY2xlYW51cCwgImNvdWxkIG5vdCBmb3JrIik7Ci0KLQkJaWYg
KGNfcGlkID09IDApIHsKLQkJCS8qCi0JCQkgKiBBdHRlbXB0IHRvIHJlYWQgYSBtZXNzYWdlIHdp
dGhvdXQgSVBDX05PV0FJVC4KLQkJCSAqIFdpdGggbm8gbWVzc2FnZSB0byByZWFkLCB0aGUgY2hp
bGQgc2xlZXBzLgotCQkJICovCi0KLSNpZmRlZiBVQ0xJTlVYCi0JCQlpZiAoc2VsZl9leGVjKGF2
WzBdLCAiZCIsIG1zZ19xXzEpIDwgMCkKLQkJCQl0c3RfYnJrbShUQlJPSywgY2xlYW51cCwgImNv
dWxkIG5vdCBzZWxmX2V4ZWMiKTsKLSNlbHNlCi0JCQlkb19jaGlsZCgpOwotI2VuZGlmCi0JCX0g
ZWxzZSB7Ci0JCQlUU1RfUFJPQ0VTU19TVEFURV9XQUlUKGNsZWFudXAsIGNfcGlkLCAnUycpOwot
Ci0JCQkvKiBzZW5kIGEgc2lnbmFsIHRoYXQgbXVzdCBiZSBjYXVnaHQgdG8gdGhlIGNoaWxkICov
Ci0JCQlTQUZFX0tJTEwoY2xlYW51cCwgY19waWQsIFNJR0hVUCk7Ci0KLQkJCXdhaXRwaWQoY19w
aWQsIE5VTEwsIDApOwotCQl9Ci0JfQotCi0JY2xlYW51cCgpOwotCi0JdHN0X2V4aXQoKTsKKwlp
ZiAoc2lnID09IFNJR0hVUCkKKwkJcmV0dXJuOworCWVsc2UKKwkJX2V4aXQoVEJST0spOwogfQog
Ci12b2lkIGRvX2NoaWxkKHZvaWQpCitzdGF0aWMgdm9pZCB2ZXJpZnlfbXNncmN2KHZvaWQpCiB7
Ci0JVEVTVChtc2dyY3YobXNnX3FfMSwgJnJjdl9idWYsIE1TR1NJWkUsIDEsIDApKTsKLQotCWlm
IChURVNUX1JFVFVSTiAhPSAtMSkKLQkJdHN0X2Jya20oVEZBSUwsIE5VTEwsICJjYWxsIHN1Y2Nl
ZWRlZCB1bmV4cGVjdGVkbHkiKTsKLQotCXN3aXRjaCAoVEVTVF9FUlJOTykgewotCWNhc2UgRUlO
VFI6Ci0JCXRzdF9yZXNtKFRQQVNTLCAiZ290IEVJTlRSIGFzIGV4cGVjdGVkIik7Ci0JCWJyZWFr
OwotCWRlZmF1bHQ6Ci0JCXRzdF9yZXNtKFRGQUlMIHwgVFRFUlJOTywKLQkJCSAiY2FsbCBmYWls
ZWQgd2l0aCBhbiB1bmV4cGVjdGVkIGVycm9yIik7Ci0JCWJyZWFrOwotCX0KKwlURVNUKG1zZ3Jj
dihxdWV1ZV9pZCwgJnJjdl9idWYsIE1TR1NJWkUsIDEsIDApKTsKIAotCWV4aXQoMCk7Ci19Ci0K
LXZvaWQgc2lnaGFuZGxlcihpbnQgc2lnKQotewotCWlmIChzaWcgPT0gU0lHSFVQKQorCWlmIChU
U1RfUkVUICE9IC0xKSB7CisJCXRzdF9yZXMoVEZBSUwsICJtc2dyY3YoKSBzdWNjZWVkZWQgdW5l
eHBlY3RlZGx5Iik7CiAJCXJldHVybjsKKwl9CisJaWYgKFRTVF9FUlIgPT0gRUlOVFIpCisJCXRz
dF9yZXMoVFBBU1MgfCBUVEVSUk5PLCAibXNncmN2KCkgZmFpbGVkIGFzIGV4cGVjdGVkIik7CiAJ
ZWxzZQotCQl0c3RfYnJrbShUQlJPSywgTlVMTCwgInVuZXhwZWN0ZWQgc2lnbmFsICVkIHJlY2Vp
dmVkIiwgc2lnKTsKKwkJdHN0X3JlcyhURkFJTCB8IFRURVJSTk8sICJtc2dyY3YoKSBmYWlsZWQg
ZXhwZWN0ZWQgRUlOVFIgYnV0IGdvdCIpOwogfQogCi0jaWZkZWYgVUNMSU5VWAotLyoKLSAqIGRv
X2NoaWxkX3VjbGludXgoKSAtIGNhcHR1cmUgc2lnbmFscyBhZ2FpbiwgdGhlbiBydW4gZG9fY2hp
bGQoKQotICovCi12b2lkIGRvX2NoaWxkX3VjbGludXgodm9pZCkKK3N0YXRpYyB2b2lkIGRvX3Rl
c3Qodm9pZCkKIHsKLQl0c3Rfc2lnKEZPUkssIHNpZ2hhbmRsZXIsIGNsZWFudXApOworCWludCBw
aWQ7CiAKLQlkb19jaGlsZCgpOworCXBpZCA9IFNBRkVfRk9SSygpOworCWlmIChwaWQgPT0gMCkg
eworCQkvKgorCQkgKiBBdHRlbXB0IHRvIHJlYWQgYSBtZXNzYWdlIHdpdGhvdXQgSVBDX05PV0FJ
VC4KKwkJICogV2l0aCBubyBtZXNzYWdlIHRvIHJlYWQsIHRoZSBjaGlsZCBzbGVlcHMuCisJCSAq
LworCQl2ZXJpZnlfbXNncmN2KCk7CisJCV9leGl0KDApOworCX0KKwlUU1RfUFJPQ0VTU19TVEFU
RV9XQUlUKHBpZCwgJ1MnLCAwKTsKKwkvKiBzZW5kIGEgc2lnbmFsIHRoYXQgbXVzdCBiZSBjYXVn
aHQgdG8gdGhlIGNoaWxkICovCisJU0FGRV9LSUxMKHBpZCwgU0lHSFVQKTsKKwl0c3RfcmVhcF9j
aGlsZHJlbigpOwogfQotI2VuZGlmCiAKLS8qCi0gKiBzZXR1cCgpIC0gcGVyZm9ybXMgYWxsIHRo
ZSBPTkUgVElNRSBzZXR1cCBmb3IgdGhpcyB0ZXN0LgotICovCi12b2lkIHNldHVwKHZvaWQpCitz
dGF0aWMgdm9pZCBzZXR1cCh2b2lkKQogewotCi0JdHN0X3NpZyhGT1JLLCBzaWdoYW5kbGVyLCBj
bGVhbnVwKTsKLQotCVRFU1RfUEFVU0U7Ci0KLQkvKgotCSAqIENyZWF0ZSBhIHRlbXBvcmFyeSBk
aXJlY3RvcnkgYW5kIGNkIGludG8gaXQuCi0JICogVGhpcyBoZWxwcyB0byBlbnN1cmUgdGhhdCBh
IHVuaXF1ZSBtc2drZXkgaXMgY3JlYXRlZC4KLQkgKiBTZWUgbGlicy9saWJsdHBpcGMvbGliaXBj
LmMgZm9yIG1vcmUgaW5mb3JtYXRpb24uCi0JICovCi0JdHN0X3RtcGRpcigpOwotCi0JbXNna2V5
ID0gZ2V0aXBja2V5KCk7Ci0KLQkvKiBjcmVhdGUgYSBtZXNzYWdlIHF1ZXVlIHdpdGggcmVhZC93
cml0ZSBwZXJtaXNzaW9uICovCi0JaWYgKChtc2dfcV8xID0gbXNnZ2V0KG1zZ2tleSwgSVBDX0NS
RUFUIHwgSVBDX0VYQ0wgfCBNU0dfUlcpKSA9PSAtMSkKLQkJdHN0X2Jya20oVEJST0ssIGNsZWFu
dXAsICJDYW4ndCBjcmVhdGUgbWVzc2FnZSBxdWV1ZSIpOworCW1zZ2tleSA9IEdFVElQQ0tFWSgp
OworCXF1ZXVlX2lkID0gU0FGRV9NU0dHRVQobXNna2V5LCBJUENfQ1JFQVQgfCBJUENfRVhDTCB8
IE1TR19SVyk7CisJU0FGRV9TSUdOQUwoU0lHSFVQLCBzaWdoYW5kbGVyKTsKIH0KIAotLyoKLSAq
IGNsZWFudXAoKSAtIHBlcmZvcm1zIGFsbCB0aGUgT05FIFRJTUUgY2xlYW51cCBmb3IgdGhpcyB0
ZXN0IGF0IGNvbXBsZXRpb24KLSAqIAkgICAgICAgb3IgcHJlbWF0dXJlIGV4aXQuCi0gKi8KLXZv
aWQgY2xlYW51cCh2b2lkKQorc3RhdGljIHZvaWQgY2xlYW51cCh2b2lkKQogewotCS8qIGlmIGl0
IGV4aXN0cywgcmVtb3ZlIHRoZSBtZXNzYWdlIHF1ZXVlIHRoYXQgd2FzIGNyZWF0ZWQgKi8KLQly
bV9xdWV1ZShtc2dfcV8xKTsKLQotCXRzdF9ybWRpcigpOwotCisJaWYgKHF1ZXVlX2lkICE9IC0x
KQorCQlTQUZFX01TR0NUTChxdWV1ZV9pZCwgSVBDX1JNSUQsIE5VTEwpOwogfQorCitzdGF0aWMg
c3RydWN0IHRzdF90ZXN0IHRlc3QgPSB7CisJLnNldHVwID0gc2V0dXAsCisJLmNsZWFudXAgPSBj
bGVhbnVwLAorCS50ZXN0X2FsbCA9IGRvX3Rlc3QsCisJLm5lZWRzX3RtcGRpciA9IDEsCisJLmZv
cmtzX2NoaWxkID0gMSwKK307CmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxz
L2lwYy9tc2dyY3YvbXNncmN2MDYuYyBiL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvaXBjL21z
Z3Jjdi9tc2dyY3YwNi5jCmluZGV4IGUzNDU4YjlhZC4uYzE4MzMwYjQwIDEwMDY0NAotLS0gYS90
ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDYuYworKysgYi90ZXN0
Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDYuYwpAQCAtMSwyMTkgKzEs
NjkgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9yLWxhdGVyCiAvKgor
ICogQ29weXJpZ2h0IChjKSBJbnRlcm5hdGlvbmFsIEJ1c2luZXNzIE1hY2hpbmVzICBDb3JwLiwg
MjAwMQogICoKLSAqICAgQ29weXJpZ2h0IChjKSBJbnRlcm5hdGlvbmFsIEJ1c2luZXNzIE1hY2hp
bmVzICBDb3JwLiwgMjAwMQotICoKLSAqICAgVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7
ICB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5Ci0gKiAgIGl0IHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5
Ci0gKiAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDIgb2Yg
dGhlIExpY2Vuc2UsIG9yCi0gKiAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24u
Ci0gKgotICogICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBp
dCB3aWxsIGJlIHVzZWZ1bCwKLSAqICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyAgd2l0aG91
dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCi0gKiAgIE1FUkNIQU5UQUJJTElUWSBvciBG
SVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZQotICogICB0aGUgR05VIEdlbmVy
YWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KLSAqCi0gKiAgIFlvdSBzaG91bGQg
aGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlCi0g
KiAgIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtOyAgaWYgbm90LCB3cml0ZSB0byB0aGUgRnJlZSBT
b2Z0d2FyZQotICogICBGb3VuZGF0aW9uLCBJbmMuLCA1MSBGcmFua2xpbiBTdHJlZXQsIEZpZnRo
IEZsb29yLCBCb3N0b24sIE1BIDAyMTEwLTEzMDEgVVNBCi0gKi8KLQotLyoKLSAqIE5BTUUKLSAq
CW1zZ3JjdjA2LmMKLSAqCi0gKiBERVNDUklQVElPTgotICoJbXNncmN2MDYgLSB0ZXN0IGZvciBF
SURSTSBlcnJvcgotICoKLSAqIEFMR09SSVRITQotICoJbG9vcCBpZiB0aGF0IG9wdGlvbiB3YXMg
c3BlY2lmaWVkCi0gKgljcmVhdGUgYSBtZXNzYWdlIHF1ZXVlIHdpdGggcmVhZC93cml0ZSBwZXJt
aXNzaW9ucwotICoJZm9yayBhIGNoaWxkIHdobyBzbGVlcHMgb24gYW4gYXR0ZW1wdGVkIHJlYWQg
d2l0aCBtc2dyY3YoKQotICoJcGFyZW50IHJlbW92ZXMgdGhlIHF1ZXVlIHRoZW4gd2FpdHMgZm9y
IGNoaWxkIHRvIGNvbXBsZXRlCi0gKgljaGVjayB0aGUgZXJybm8gdmFsdWUKLSAqCSAgaXNzdWUg
YSBQQVNTIG1lc3NhZ2UgaWYgd2UgZ2V0IEVJRFJNCi0gKglvdGhlcndpc2UsIHRoZSB0ZXN0cyBm
YWlscwotICoJICBpc3N1ZSBhIEZBSUwgbWVzc2FnZQotICogICAgICBjaGlsZCByZW1vdmVzIG1l
c3NhZ2UgcXVldWUgaWYgcmVxdWlyZWQKLSAqCXBhcmVudCBjYWxsYyBjbGVhbnVwCi0gKgotICog
VVNBR0U6ICA8Zm9yIGNvbW1hbmQtbGluZT4KLSAqICBtc2dyY3YwNiBbLWMgbl0gWy1lXSBbLWkg
bl0gWy1JIHhdIFstUCB4XSBbLXRdCi0gKiAgICAgd2hlcmUsICAtYyBuIDogUnVuIG4gY29waWVz
IGNvbmN1cnJlbnRseS4KLSAqICAgICAgICAgICAgIC1lICAgOiBUdXJuIG9uIGVycm5vIGxvZ2dp
bmcuCi0gKgkgICAgICAgLWkgbiA6IEV4ZWN1dGUgdGVzdCBuIHRpbWVzLgotICoJICAgICAgIC1J
IHggOiBFeGVjdXRlIHRlc3QgZm9yIHggc2Vjb25kcy4KLSAqCSAgICAgICAtUCB4IDogUGF1c2Ug
Zm9yIHggc2Vjb25kcyBiZXR3ZWVuIGl0ZXJhdGlvbnMuCi0gKgkgICAgICAgLXQgICA6IFR1cm4g
b24gc3lzY2FsbCB0aW1pbmcuCi0gKgotICogSElTVE9SWQotICoJMDMvMjAwMSAtIFdyaXR0ZW4g
YnkgV2F5bmUgQm95ZXIKLSAqICAgICAgMTQvMDMvMjAwOCBNYXR0aGlldSBGZXJ0csOpIChNYXR0
aGlldS5GZXJ0cmVAaXJpc2EuZnIpCi0gKiAgICAgIC0gRml4IGNvbmN1cnJlbmN5IGlzc3VlLiBE
dWUgdG8gdGhlIHVzZSBvZiB1c2xlZXAgZnVuY3Rpb24gdG8KLSAqICAgICAgICBzeW5jaHJvbml6
ZSBwcm9jZXNzZXMsIHN5bmNocm9uaXphdGlvbiBpc3N1ZXMgY2FuIG9jY3VyIG9uIGEgbG9hZGVk
Ci0gKiAgICAgICAgc3lzdGVtLiBGaXggdGhpcyBieSB1c2luZyBwaXBlcyB0byBzeW5jaHJvbml6
ZSBwcm9jZXNzZXMuCi0gKgotICoKLSAqIFJFU1RSSUNUSU9OUwotICoJbm9uZQorICogbXNncmN2
IGVycm9yIHRlc3QgZm9yIEVJRFJNLgogICovCiAKLSNpbmNsdWRlICJ0ZXN0LmgiCi0KLSNpbmNs
dWRlICJpcGNtc2cuaCIKLQorI2luY2x1ZGUgPGVycm5vLmg+CisjaW5jbHVkZSA8dW5pc3RkLmg+
CiAjaW5jbHVkZSA8c3lzL3R5cGVzLmg+Ci0jaW5jbHVkZSA8c3lzL3dhaXQuaD4KLQotdm9pZCBk
b19jaGlsZCh2b2lkKTsKLXZvaWQgY2xlYW51cCh2b2lkKTsKLXZvaWQgc2V0dXAodm9pZCk7Ci0j
aWZkZWYgVUNMSU5VWAotI2RlZmluZSBQSVBFX05BTUUJIm1zZ3JjdjA2Igotdm9pZCBkb19jaGls
ZF91Y2xpbnV4KHZvaWQpOwotI2VuZGlmCi0KLWNoYXIgKlRDSUQgPSAibXNncmN2MDYiOwotaW50
IFRTVF9UT1RBTCA9IDE7Ci0KLWludCBtc2dfcV8xID0gLTE7CQkvKiBUaGUgbWVzc2FnZSBxdWV1
ZSBpZCBjcmVhdGVkIGluIHNldHVwICovCi0KLU1TR0JVRiByY3ZfYnVmOwotcGlkX3QgY19waWQ7
Ci0KLWludCBtYWluKGludCBhYywgY2hhciAqKmF2KQorI2luY2x1ZGUgPHN5cy9pcGMuaD4KKyNp
bmNsdWRlIDxzeXMvbXNnLmg+CisjaW5jbHVkZSAidHN0X3Rlc3QuaCIKKyNpbmNsdWRlICJ0c3Rf
c2FmZV9zeXN2X2lwYy5oIgorI2luY2x1ZGUgImxpYm5ld2lwYy5oIgorCitzdGF0aWMga2V5X3Qg
bXNna2V5Oworc3RhdGljIGludCBxdWV1ZV9pZCA9IC0xOworc3RhdGljIHN0cnVjdCBidWYgewor
CWxvbmcgdHlwZTsKKwljaGFyIHRleHRbTVNHU0laRV07Cit9IHJjdl9idWYgPSB7MSwgImhlbGxv
In07CisKK3N0YXRpYyB2b2lkIHZlcmlmeV9tc2dyY3Yodm9pZCkKIHsKLQlpbnQgbGM7Ci0KLQl0
c3RfcGFyc2Vfb3B0cyhhYywgYXYsIE5VTEwsIE5VTEwpOwotCi0jaWZkZWYgVUNMSU5VWAotCW1h
eWJlX3J1bl9jaGlsZCgmZG9fY2hpbGRfdWNsaW51eCwgImQiLCAmbXNnX3FfMSk7Ci0jZW5kaWYK
LQotCXNldHVwKCk7CQkvKiBnbG9iYWwgc2V0dXAgKi8KLQotCS8qIFRoZSBmb2xsb3dpbmcgbG9v
cCBjaGVja3MgbG9vcGluZyBzdGF0ZSBpZiAtaSBvcHRpb24gZ2l2ZW4gKi8KLQotCWZvciAobGMg
PSAwOyBURVNUX0xPT1BJTkcobGMpOyBsYysrKSB7Ci0JCS8qIHJlc2V0IHRzdF9jb3VudCBpbiBj
YXNlIHdlIGFyZSBsb29waW5nICovCi0JCXRzdF9jb3VudCA9IDA7Ci0KLQkJLyoKLQkJICogc2V0
IHVwIHRoZSBxdWV1ZSBoZXJlIHNvIHRoYXQgbXVsdGlwbGUgdGVzdCBpdGVyYXRpb25zCi0JCSAq
IHdpbGwgd29yay4KLQkJICovCi0JCW1zZ2tleSA9IGdldGlwY2tleSgpOwotCi0JCS8qIGNyZWF0
ZSBhIG1lc3NhZ2UgcXVldWUgd2l0aCByZWFkL3dyaXRlIHBlcm1pc3Npb24gKi8KLQkJaWYgKCht
c2dfcV8xID0gbXNnZ2V0KG1zZ2tleSwgSVBDX0NSRUFUIHwgSVBDX0VYQ0wgfCBNU0dfUlcpKQot
CQkgICAgPT0gLTEpIHsKLQkJCXRzdF9icmttKFRCUk9LLCBjbGVhbnVwLCAiQ2FuJ3QgY3JlYXRl
IG1lc3NhZ2UgcXVldWUiKTsKLQkJfQotCi0JCS8qCi0JCSAqIGZvcmsgYSBjaGlsZCB0aGF0IHdp
bGwgYXR0ZW1wdCB0byByZWFkIGEgbm9uLWV4aXN0ZW50Ci0JCSAqIG1lc3NhZ2UgZnJvbSB0aGUg
cXVldWUKLQkJICovCi0JCWlmICgoY19waWQgPSBGT1JLX09SX1ZGT1JLKCkpID09IC0xKSB7Ci0J
CQl0c3RfYnJrbShUQlJPSywgY2xlYW51cCwgImNvdWxkIG5vdCBmb3JrIik7Ci0JCX0KLQotCQlp
ZiAoY19waWQgPT0gMCkgewkvKiBjaGlsZCAqLwotCQkJLyoKLQkJCSAqIEF0dGVtcHQgdG8gcmVh
ZCBhIG1lc3NhZ2Ugd2l0aG91dCBJUENfTk9XQUlULgotCQkJICogV2l0aCBubyBtZXNzYWdlIHRv
IHJlYWQsIHRoZSBjaGlsZCBzbGVlcHMuCi0JCQkgKi8KLQotI2lmZGVmIFVDTElOVVgKLQkJCWlm
IChzZWxmX2V4ZWMoYXZbMF0sICJkIiwgbXNnX3FfMSkgPCAwKSB7Ci0JCQkJdHN0X2Jya20oVEJS
T0ssIGNsZWFudXAsICJjb3VsZCBub3Qgc2VsZl9leGVjIik7Ci0JCQl9Ci0jZWxzZQotCQkJZG9f
Y2hpbGQoKTsKLSNlbmRpZgotCQl9IGVsc2UgewotCQkJVFNUX1BST0NFU1NfU1RBVEVfV0FJVChj
bGVhbnVwLCBjX3BpZCwgJ1MnKTsKLQotCQkJLyogcmVtb3ZlIHRoZSBxdWV1ZSAqLwotCQkJcm1f
cXVldWUobXNnX3FfMSk7Ci0KLQkJCXdhaXRwaWQoY19waWQsIE5VTEwsIDApOwotCQl9CisJVEVT
VChtc2dyY3YocXVldWVfaWQsICZyY3ZfYnVmLCBNU0dTSVpFLCAxLCAwKSk7CisJaWYgKFRTVF9S
RVQgIT0gLTEpIHsKKwkJdHN0X3JlcyhURkFJTCwgIm1zZ3JjdigpIHN1Y2NlZWRlZCB1bmV4cGVj
dGVkbHkiKTsKKwkJcmV0dXJuOwogCX0KLQotCXRzdF9leGl0KCk7CisJaWYgKFRTVF9FUlIgPT0g
RUlEUk0pCisJCXRzdF9yZXMoVFBBU1MgfCBUVEVSUk5PLCAibXNncmN2KCkgZmFpbGVkIGFzIGV4
cGVjdGVkIik7CisJZWxzZQorCQl0c3RfcmVzKFRGQUlMIHwgVFRFUlJOTywgIm1zZ3JjdigpIGZh
aWxlZCBleHBlY3RlZCBFSURSTSBidXQgZ290Iik7CiB9CiAKLS8qCi0gKiBkb19jaGlsZCgpCi0g
Ki8KLXZvaWQgZG9fY2hpbGQodm9pZCkKK3N0YXRpYyB2b2lkIGRvX3Rlc3Qodm9pZCkKIHsKLQlU
RVNUKG1zZ3Jjdihtc2dfcV8xLCAmcmN2X2J1ZiwgTVNHU0laRSwgMSwgMCkpOworCWludCBwaWQ7
CiAKLQlpZiAoVEVTVF9SRVRVUk4gIT0gLTEpIHsKLQkJdHN0X3Jlc20oVEZBSUwsICJjYWxsIHN1
Y2NlZWRlZCB3aGVuIGVycm9yIGV4cGVjdGVkIik7Ci0JCWV4aXQoLTEpOworCXF1ZXVlX2lkID0g
U0FGRV9NU0dHRVQobXNna2V5LCBJUENfQ1JFQVQgfCBJUENfRVhDTCB8IE1TR19SVyk7CisJcGlk
ID0gU0FGRV9GT1JLKCk7CisJaWYgKHBpZCA9PSAwKSB7CisJCXZlcmlmeV9tc2dyY3YoKTsKKwkJ
X2V4aXQoMCk7CiAJfQotCi0Jc3dpdGNoIChURVNUX0VSUk5PKSB7Ci0JY2FzZSBFSURSTToKLQkJ
dHN0X3Jlc20oVFBBU1MsICJleHBlY3RlZCBmYWlsdXJlIC0gZXJybm8gPSAlZCA6ICVzIiwKLQkJ
CSBURVNUX0VSUk5PLCBzdHJlcnJvcihURVNUX0VSUk5PKSk7Ci0KLQkJLyogbWFyayB0aGUgcXVl
dWUgYXMgaW52YWxpZCBhcyBpdCB3YXMgcmVtb3ZlZCAqLwotCQltc2dfcV8xID0gLTE7Ci0JCWJy
ZWFrOwotCWRlZmF1bHQ6Ci0JCXRzdF9yZXNtKFRGQUlMLAotCQkJICJjYWxsIGZhaWxlZCB3aXRo
IGFuIHVuZXhwZWN0ZWQgZXJyb3IgLSAlZCA6ICVzIiwKLQkJCSBURVNUX0VSUk5PLCBzdHJlcnJv
cihURVNUX0VSUk5PKSk7Ci0JCWJyZWFrOwotCX0KLQotCS8qIGlmIGl0IGV4aXN0cywgcmVtb3Zl
IHRoZSBtZXNzYWdlIHF1ZXVlIHRoYXQgd2FzIGNyZWF0ZWQgKi8KLQlybV9xdWV1ZShtc2dfcV8x
KTsKLQotCWV4aXQoMCk7CisJVFNUX1BST0NFU1NfU1RBVEVfV0FJVChwaWQsICdTJywgMCk7CisJ
U0FGRV9NU0dDVEwocXVldWVfaWQsIElQQ19STUlELCBOVUxMKTsKKwl0c3RfcmVhcF9jaGlsZHJl
bigpOwogfQogCi0jaWZkZWYgVUNMSU5VWAotLyoKLSAqIGRvX2NoaWxkX3VjbGludXgoKSAtIGNh
cHR1cmUgc2lnbmFscyBhZ2FpbiwgdGhlbiBydW4gZG9fY2hpbGQoKQotICovCi12b2lkIGRvX2No
aWxkX3VjbGludXgodm9pZCkKK3N0YXRpYyB2b2lkIHNldHVwKHZvaWQpCiB7Ci0JdHN0X3NpZyhG
T1JLLCBTSUdfSUdOLCBjbGVhbnVwKTsKLQotCWRvX2NoaWxkKCk7CisJbXNna2V5ID0gR0VUSVBD
S0VZKCk7CiB9Ci0jZW5kaWYKIAotLyoKLSAqIHNldHVwKCkgLSBwZXJmb3JtcyBhbGwgdGhlIE9O
RSBUSU1FIHNldHVwIGZvciB0aGlzIHRlc3QuCi0gKi8KLXZvaWQgc2V0dXAodm9pZCkKK3N0YXRp
YyB2b2lkIGNsZWFudXAodm9pZCkKIHsKLQotCXRzdF9zaWcoRk9SSywgU0lHX0lHTiwgY2xlYW51
cCk7Ci0KLQlURVNUX1BBVVNFOwotCi0JLyoKLQkgKiBDcmVhdGUgYSB0ZW1wb3JhcnkgZGlyZWN0
b3J5IGFuZCBjZCBpbnRvIGl0LgotCSAqIFRoaXMgaGVscHMgdG8gZW5zdXJlIHRoYXQgYSB1bmlx
dWUgbXNna2V5IGlzIGNyZWF0ZWQuCi0JICogU2VlIGxpYnMvbGlibHRwaXBjL2xpYmlwYy5jIGZv
ciBtb3JlIGluZm9ybWF0aW9uLgotCSAqLwotCXRzdF90bXBkaXIoKTsKKwlpZiAocXVldWVfaWQg
IT0gLTEpCisJCVNBRkVfTVNHQ1RMKHF1ZXVlX2lkLCBJUENfUk1JRCwgTlVMTCk7CiB9CiAKLS8q
Ci0gKiBjbGVhbnVwKCkgLSBwZXJmb3JtcyBhbGwgdGhlIE9ORSBUSU1FIGNsZWFudXAgZm9yIHRo
aXMgdGVzdCBhdCBjb21wbGV0aW9uCi0gKiAJICAgICAgIG9yIHByZW1hdHVyZSBleGl0LgotICov
Ci12b2lkIGNsZWFudXAodm9pZCkKLXsKLQotCXRzdF9ybWRpcigpOwotCi19CitzdGF0aWMgc3Ry
dWN0IHRzdF90ZXN0IHRlc3QgPSB7CisJLm5lZWRzX3RtcGRpciA9IDEsCisJLmZvcmtzX2NoaWxk
ID0gMSwKKwkuc2V0dXAgPSBzZXR1cCwKKwkuY2xlYW51cCA9IGNsZWFudXAsCisJLnRlc3RfYWxs
ID0gZG9fdGVzdCwKK307CmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lw
Yy9tc2dyY3YvbXNncmN2MDcuYyBiL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvaXBjL21zZ3Jj
di9tc2dyY3YwNy5jCmluZGV4IDQ0ZjFjMWQ5MS4uMzlmYmRiNjdhIDEwMDY0NAotLS0gYS90ZXN0
Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDcuYworKysgYi90ZXN0Y2Fz
ZXMva2VybmVsL3N5c2NhbGxzL2lwYy9tc2dyY3YvbXNncmN2MDcuYwpAQCAtMSwxNzIgKzEsMTAx
IEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgogLyoKLSAq
IENvcHlyaWdodCAoYykgMjAxNCBGdWppdHN1IEx0ZC4KKyAqIENvcHlyaWdodCAoYykgMjAxNC0y
MDIwIEZ1aml0c3UgTHRkLgogICogQXV0aG9yOiBYaWFvZ3VhbmcgV2FuZyA8d2FuZ3hnLmZuc3RA
Y24uZnVqaXRzdS5jb20+CiAgKgotICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlv
dSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQKLSAqIHVuZGVyIHRoZSB0ZXJt
cyBvZiB2ZXJzaW9uIDIgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzCi0gKiBw
dWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbi4KLSAqCi0gKiBUaGlzIHBy
b2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3b3VsZCBiZSB1c2VmdWws
IGJ1dAotICogV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3
YXJyYW50eSBvZgotICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxB
UiBQVVJQT1NFLgotICoKLSAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhl
IEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFsb25nCi0gKiB3aXRoIHRoaXMgcHJvZ3JhbTsg
aWYgbm90LCB3cml0ZSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuLAotICogNTEg
RnJhbmtsaW4gU3RyZWV0LCBGaWZ0aCBGbG9vciwgQm9zdG9uLCBNQSAwMjExMC0xMzAxIFVTQS4K
LSAqLwotCi0vKgotICogRGVzY3JpcHRpb246Ci0gKiAgICAgQmFzaWMgdGVzdCBmb3IgbXNncmN2
KDIpIHVzaW5nIE1TR19FWENFUFQsIE1TR19OT0VSUk9SCisgKiBCYXNpYyB0ZXN0IGZvciBtc2dy
Y3YoMikgdXNpbmcgTVNHX0VYQ0VQVCwgTVNHX05PRVJST1IKICAqLwogCiAjZGVmaW5lICBfR05V
X1NPVVJDRQogI2luY2x1ZGUgPHN5cy93YWl0Lmg+Ci0jaW5jbHVkZSAidGVzdC5oIgotI2luY2x1
ZGUgImlwY21zZy5oIgotCisjaW5jbHVkZSAidHN0X3Rlc3QuaCIKKyNpbmNsdWRlICJ0c3Rfc2Fm
ZV9zeXN2X2lwYy5oIgorI2luY2x1ZGUgImxpYm5ld2lwYy5oIgogCiAjZGVmaW5lIE1TR1RZUEUx
CTEKICNkZWZpbmUgTVNHVFlQRTIJMgotI2RlZmluZSBNU0cxCSJtZXNzYWdlIHR5cGUxIgotI2Rl
ZmluZSBNU0cyCSJtZXNzYWdlIHR5cGUyIgotCi1zdGF0aWMgdm9pZCB3YWl0NGNoaWxkKHBpZF90
IGNoaWxkLCBjaGFyICp0c3RfZmxhZyk7CisjZGVmaW5lIE1TRzEJIm1lc3NhZ2V0eXBlMSIKKyNk
ZWZpbmUgTVNHMgkibWVzc2FnZXR5cGUyIgorCitzdGF0aWMga2V5X3QgbXNna2V5Oworc3RhdGlj
IGludCBxdWV1ZV9pZCA9IC0xOworc3RhdGljIHN0cnVjdCBidWYgeworCWxvbmcgdHlwZTsKKwlj
aGFyIG10ZXh0W01TR1NJWkVdOworfSByY3ZfYnVmLCBzbmRfYnVmWzJdID0geworCXtNU0dUWVBF
MSwgTVNHMX0sCisJe01TR1RZUEUyLCBNU0cyfQorfTsKIAogc3RhdGljIHZvaWQgdGVzdF9tc2df
ZXhjZXB0KHZvaWQpOwogc3RhdGljIHZvaWQgdGVzdF9tc2dfbm9lcnJvcih2b2lkKTsKK3N0YXRp
YyB2b2lkIGNsZWFudXAodm9pZCk7CitzdGF0aWMgdm9pZCAoKnRlc3RmdW5jW10pKHZvaWQpID0g
e3Rlc3RfbXNnX2V4Y2VwdCwgdGVzdF9tc2dfbm9lcnJvcn07CiAKLXN0YXRpYyB2b2lkICgqdGVz
dGZ1bmNbXSkodm9pZCkgPSB7IHRlc3RfbXNnX2V4Y2VwdCwgdGVzdF9tc2dfbm9lcnJvciB9Owot
Ci1jaGFyICpUQ0lEID0gIm1zZ3JjdjA3IjsKLWludCBUU1RfVE9UQUwgPSBBUlJBWV9TSVpFKHRl
c3RmdW5jKTsKLQotaW50IG1haW4oaW50IGFjLCBjaGFyICoqYXYpCi17Ci0JaW50IGxjOwotCWlu
dCBpOwotCi0JdHN0X3BhcnNlX29wdHMoYWMsIGF2LCBOVUxMLCBOVUxMKTsKLQotCXNldHVwKCk7
Ci0KLQlmb3IgKGxjID0gMDsgVEVTVF9MT09QSU5HKGxjKTsgbGMrKykgewotCQl0c3RfY291bnQg
PSAwOwotCi0JCWZvciAoaSA9IDA7IGkgPCBUU1RfVE9UQUw7IGkrKykKLQkJCSgqdGVzdGZ1bmNb
aV0pKCk7Ci0JfQotCi0JY2xlYW51cCgpOwotCXRzdF9leGl0KCk7Ci19Ci0KLXZvaWQgc2V0dXAo
dm9pZCkKK3N0YXRpYyB2b2lkIHZlcmlmeV9tc2djcnYodW5zaWduZWQgaW50IG4pCiB7Ci0JdHN0
X3NpZyhGT1JLLCBERUZfSEFORExFUiwgY2xlYW51cCk7Ci0KLQlURVNUX1BBVVNFOworCSgqdGVz
dGZ1bmNbbl0pKCk7CiB9CiAKIHN0YXRpYyB2b2lkIHRlc3RfbXNnX2V4Y2VwdCh2b2lkKQogewot
CXBpZF90IGNoaWxkX3BpZDsKLQlpbnQgbXNncV9pZDsKLQlNU0dCVUYgc25kX2J1ZjEgPSB7Lm10
eXBlID0gTVNHVFlQRTEsIC5tdGV4dCA9IE1TRzF9OwotCU1TR0JVRiBzbmRfYnVmMiA9IHsubXR5
cGUgPSBNU0dUWVBFMiwgLm10ZXh0ID0gTVNHMn07Ci0JTVNHQlVGIHJjdl9idWY7Ci0KLQltc2dx
X2lkID0gbXNnZ2V0KElQQ19QUklWQVRFLCBNU0dfUlcpOwotCWlmIChtc2dxX2lkID09IC0xKQot
CQl0c3RfYnJrbShUQlJPSyB8IFRFUlJOTywgY2xlYW51cCwgIkNhbid0IGNyZWF0ZSBtZXNzYWdl
IHF1ZXVlIik7Ci0KLQlpZiAobXNnc25kKG1zZ3FfaWQsICZzbmRfYnVmMSwgTVNHU0laRSwgMCkg
PT0gLTEpCi0JCXRzdF9icmttKFRCUk9LIHwgVEVSUk5PLCBjbGVhbnVwLCAiQ2FuJ3QgZW5xdWV1
ZSBtZXNzYWdlIik7Ci0KLQlpZiAobXNnc25kKG1zZ3FfaWQsICZzbmRfYnVmMiwgTVNHU0laRSwg
MCkgPT0gLTEpCi0JCXRzdF9icmttKFRCUk9LIHwgVEVSUk5PLCBjbGVhbnVwLCAiQ2FuJ3QgZW5x
dWV1ZSBtZXNzYWdlIik7Ci0KLQljaGlsZF9waWQgPSB0c3RfZm9yaygpOwotCWlmIChjaGlsZF9w
aWQgPT0gLTEpIHsKLQkJdHN0X2Jya20oVEJST0ssIGNsZWFudXAsICJmb3JrIGZhaWxlZCIpOwot
CX0gZWxzZSBpZiAoY2hpbGRfcGlkID4gMCkgewotCQl3YWl0NGNoaWxkKGNoaWxkX3BpZCwgIk1T
R19FWENFUFQiKTsKLQl9IGVsc2UgewotCQltZW1zZXQoJnJjdl9idWYsIDAsIHNpemVvZihyY3Zf
YnVmKSk7Ci0JCVRFU1QobXNncmN2KG1zZ3FfaWQsICZyY3ZfYnVmLCBNU0dTSVpFLCBNU0dUWVBF
MiwgTVNHX0VYQ0VQVCkpOwotCQlpZiAoVEVTVF9SRVRVUk4gPT0gLTEpIHsKLQkJCWZwcmludGYo
c3RkZXJyLCAibXNncmN2KE1TR19FWENFUFQpIGZhaWxlZFxuIik7Ci0JCQlleGl0KFRCUk9LKTsK
LQkJfQotCQkvKiBjaGVjayB0aGUgcmVjZWl2ZWQgbWVzc2FnZSAqLwotCQlpZiAoc3RyY21wKHJj
dl9idWYubXRleHQsIE1TRzEpID09IDAgJiYKLQkJICAgIHJjdl9idWYubXR5cGUgPT0gTVNHVFlQ
RTEpCi0JCQlleGl0KFRQQVNTKTsKLQkJZWxzZQotCQkJZXhpdChURkFJTCk7CisJcXVldWVfaWQg
PSBTQUZFX01TR0dFVChtc2drZXksIElQQ19DUkVBVCB8IElQQ19FWENMIHwgTVNHX1JXKTsKKwlT
QUZFX01TR1NORChxdWV1ZV9pZCwgJnNuZF9idWZbMF0sIE1TR1NJWkUsIDApOworCVNBRkVfTVNH
U05EKHF1ZXVlX2lkLCAmc25kX2J1ZlsxXSwgTVNHU0laRSwgMCk7CisKKwltZW1zZXQoJnJjdl9i
dWYsIDAsIHNpemVvZihyY3ZfYnVmKSk7CisJVEVTVChtc2dyY3YocXVldWVfaWQsICZyY3ZfYnVm
LCBNU0dTSVpFLCBNU0dUWVBFMiwgTVNHX0VYQ0VQVCkpOworCWlmIChUU1RfUkVUID09IC0xKSB7
CisJCXRzdF9yZXMoVEZBSUwgfCBUVEVSUk5PLCAibXNncmN2KE1TR19FWENFUFQpIGZhaWxlZCIp
OworCQljbGVhbnVwKCk7CisJCXJldHVybjsKIAl9Ci0KLQlybV9xdWV1ZShtc2dxX2lkKTsKKwl0
c3RfcmVzKFRQQVNTLCAibXNncmN2KE1TR19FWENFUFQpIHN1Y2NlZWRlZCIpOworCWlmIChzdHJj
bXAocmN2X2J1Zi5tdGV4dCwgTVNHMSkgPT0gMCAmJiByY3ZfYnVmLnR5cGUgPT0gTVNHVFlQRTEp
CisJCXRzdF9yZXMoVFBBU1MsICJtc2dyY3YoTVNHX0VYQ0VQVCkgZXhjZXB0ZWQgTVNHVFlQRTIg
YW5kIG9ubHkgZ290IE1TR1RZUEUxIik7CisJZWxzZQorCQl0c3RfcmVzKFRGQUlMLCAibXNncmN2
KE1TR19FWENFUFQpIGRpZG4ndCBnZXQgTVNHVFlQRTEgbWVzc2FnZSIpOworCVNBRkVfTVNHQ1RM
KHF1ZXVlX2lkLCBJUENfUk1JRCwgTlVMTCk7CiB9CiAKLQogc3RhdGljIHZvaWQgdGVzdF9tc2df
bm9lcnJvcih2b2lkKQogewotCXBpZF90IGNoaWxkX3BpZDsKLQlpbnQgbXNnX2xlbiwgbXNncV9p
ZDsKLQlNU0dCVUYgc25kX2J1ZjEgPSB7Lm10eXBlID0gTVNHVFlQRTEsIC5tdGV4dCA9IE1TRzF9
OwotCU1TR0JVRiByY3ZfYnVmOwotCi0JbXNncV9pZCA9IG1zZ2dldChJUENfUFJJVkFURSwgTVNH
X1JXKTsKLQlpZiAobXNncV9pZCA9PSAtMSkKLQkJdHN0X2Jya20oVEJST0sgfCBURVJSTk8sIGNs
ZWFudXAsICJDYW4ndCBjcmVhdGUgbWVzc2FnZSBxdWV1ZSIpOwotCi0JaWYgKG1zZ3NuZChtc2dx
X2lkLCAmc25kX2J1ZjEsIE1TR1NJWkUsIDApID09IC0xKQotCQl0c3RfYnJrbShUQlJPSyB8IFRF
UlJOTywgY2xlYW51cCwgIkNhbid0IGVucXVldWUgbWVzc2FnZSIpOwotCi0JY2hpbGRfcGlkID0g
dHN0X2ZvcmsoKTsKLQlpZiAoY2hpbGRfcGlkID09IC0xKSB7Ci0JCXRzdF9icmttKFRCUk9LLCBj
bGVhbnVwLCAiZm9yayBmYWlsZWQiKTsKLQl9IGVsc2UgaWYgKGNoaWxkX3BpZCA+IDApIHsKLQkJ
d2FpdDRjaGlsZChjaGlsZF9waWQsICJNU0dfTk9FUlJPUiIpOwotCX0gZWxzZSB7Ci0JCW1zZ19s
ZW4gPSBzaXplb2YoTVNHMSkgLyAyOwotCQltZW1zZXQoJnJjdl9idWYsIDAsIHNpemVvZihyY3Zf
YnVmKSk7Ci0KLQkJVEVTVChtc2dyY3YobXNncV9pZCwgJnJjdl9idWYsIG1zZ19sZW4sIE1TR1RZ
UEUxLCBNU0dfTk9FUlJPUikpOwotCQlpZiAoVEVTVF9SRVRVUk4gPT0gLTEpCi0JCQlleGl0KFRG
QUlMKTsKLQotCQlpZiAoc3RybmNtcChyY3ZfYnVmLm10ZXh0LCBNU0cxLCBtc2dfbGVuKSA9PSAw
ICYmCi0JCSAgICByY3ZfYnVmLm10eXBlID09IE1TR1RZUEUxKQotCQkJZXhpdChUUEFTUyk7Ci0J
CWV4aXQoVEZBSUwpOworCWludCBtc2dfbGVuOworCisJcXVldWVfaWQgPSBTQUZFX01TR0dFVCht
c2drZXksIElQQ19DUkVBVCB8IElQQ19FWENMIHwgTVNHX1JXKTsKKwlTQUZFX01TR1NORChxdWV1
ZV9pZCwgJnNuZF9idWZbMF0sIE1TR1NJWkUsIDApOworCW1zZ19sZW4gPSBzaXplb2YoTVNHMSkg
LyAyOworCW1lbXNldCgmcmN2X2J1ZiwgMCwgc2l6ZW9mKHJjdl9idWYpKTsKKworCVRFU1QobXNn
cmN2KHF1ZXVlX2lkLCAmcmN2X2J1ZiwgbXNnX2xlbiwgTVNHVFlQRTEsIE1TR19OT0VSUk9SKSk7
CisJaWYgKFRTVF9SRVQgPT0gLTEpIHsKKwkJdHN0X3JlcyhURkFJTCB8IFRURVJSTk8sICJtc2dy
Y3YoTVNHX05PRVJST1IpIGZhaWxlZCIpOworCQljbGVhbnVwKCk7CisJCXJldHVybjsKIAl9Ci0K
LQlybV9xdWV1ZShtc2dxX2lkKTsKKwl0c3RfcmVzKFRQQVNTLCAibXNncmN2KE1TR19OT0VSUk9S
KSBzdWNjZWVkZWQiKTsKKwlpZiAoc3RybmNtcChyY3ZfYnVmLm10ZXh0LCBNU0cxLCBtc2dfbGVu
KSA9PSAwICYmIHJjdl9idWYudHlwZSA9PSBNU0dUWVBFMSkKKwkJdHN0X3JlcyhUUEFTUywgIm1z
Z3JjdihNU0dfTk9FUlJPUikgdHJ1bmNhdGVkIG1lc3NhZ2UgdGV4dCBjb3JyZWN0bHkiKTsKKwll
bHNlCisJCXRzdF9yZXMoVEZBSUwsICJtc2dyY3YoTVNHX05PRVJST1IpIHRydW5jYXRlZCBtZXNz
YWdlIHRleHQgaW5jb3JyZWN0bHkiKTsKKwlTQUZFX01TR0NUTChxdWV1ZV9pZCwgSVBDX1JNSUQs
IE5VTEwpOwogfQogCi1zdGF0aWMgdm9pZCB3YWl0NGNoaWxkKHBpZF90IGNoaWxkLCBjaGFyICp0
c3RfZmxhZykKK3N0YXRpYyB2b2lkIHNldHVwKHZvaWQpCiB7Ci0JaW50IHN0YXR1czsKLQlpbnQg
cmV0OwotCi0JaWYgKHdhaXRwaWQoY2hpbGQsICZzdGF0dXMsIDApID09IC0xKQotCQl0c3RfcmVz
bShUQlJPSyB8IFRFUlJOTywgIndhaXRwaWQiKTsKLQlpZiAoV0lGRVhJVEVEKHN0YXR1cykpIHsK
LQkJcmV0ID0gV0VYSVRTVEFUVVMoc3RhdHVzKTsKLQkJaWYgKHJldCA9PSAwKQotCQkJdHN0X3Jl
c20oVFBBU1MsICJ0ZXN0ICVzIHN1Y2Nlc3MiLCB0c3RfZmxhZyk7Ci0JCWVsc2UgaWYgKHJldCA9
PSAxKQotCQkJdHN0X3Jlc20oVEZBSUwsICJ0ZXN0ICVzIGZhaWxlZCIsIHRzdF9mbGFnKTsKLQkJ
ZWxzZQotCQkJdHN0X2Jya20oVEJST0ssIGNsZWFudXAsICJtc2dyY3YgZmFpbGVkIHVuZXhwZWN0
ZWRseSIpOwotCX0gZWxzZSB7Ci0JCXRzdF9icmttKFRCUk9LLCBjbGVhbnVwLCAiY2hpbGQgcHJv
Y2VzcyB0ZXJtaW5hdGVkICIKLQkJCSAiYWJub3JtYWxseS4gc3RhdHVzOiAlZCIsIHN0YXR1cyk7
Ci0JfQorCW1zZ2tleSA9IEdFVElQQ0tFWSgpOwogfQogCi12b2lkIGNsZWFudXAodm9pZCkKK3N0
YXRpYyB2b2lkIGNsZWFudXAodm9pZCkKIHsKKwlpZiAocXVldWVfaWQgIT0gLTEpCisJCVNBRkVf
TVNHQ1RMKHF1ZXVlX2lkLCBJUENfUk1JRCwgTlVMTCk7CiB9CisKK3N0YXRpYyBzdHJ1Y3QgdHN0
X3Rlc3QgdGVzdCA9IHsKKwkubmVlZHNfdG1wZGlyID0gMSwKKwkuc2V0dXAgPSBzZXR1cCwKKwku
Y2xlYW51cCA9IGNsZWFudXAsCisJLnRlc3QgPSB2ZXJpZnlfbXNnY3J2LAorCS50Y250ID0gQVJS
QVlfU0laRSh0ZXN0ZnVuYyksCit9OwpkaWZmIC0tZ2l0IGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNj
YWxscy9pcGMvbXNncmN2L21zZ3JjdjA4LmMgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2lw
Yy9tc2dyY3YvbXNncmN2MDguYwppbmRleCBkYmU2N2UxODkuLjJiNTRlZDM1YyAxMDA2NDQKLS0t
IGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2L21zZ3JjdjA4LmMKKysrIGIv
dGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9pcGMvbXNncmN2L21zZ3JjdjA4LmMKQEAgLTEsMjMg
KzEsNyBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKIC8q
CiAgKiBDb3B5cmlnaHQgKGMpIDIwMTUgICBBdXRob3I6IEdhYnJpZWxsbGEgU2NobWlkdCA8Z3Nj
QGJydWtlci5kZT4KICAqICAgICAgICAgICAgICAgICAgICAgIE1vZGlmeTogTGkgV2FuZyA8bGl3
YW5nQHJlZGhhdC5jb20+Ci0gKgotICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlv
dSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQKLSAqIHVuZGVyIHRoZSB0ZXJt
cyBvZiB2ZXJzaW9uIDIgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzCi0gKiBw
dWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbi4KLSAqCi0gKiBUaGlzIHBy
b2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3b3VsZCBiZSB1c2VmdWws
IGJ1dAotICogV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3
YXJyYW50eSBvZgotICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxB
UiBQVVJQT1NFLgotICoKLSAqIHlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhl
IEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFsb25nCi0gKiB3aXRoIHRoaXMgcHJvZ3JhbTsg
aWYgbm90LCB3cml0ZSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuLAotICogNTEg
RnJhbmtsaW4gU3RyZWV0LCBGaWZ0aCBGbG9vciwgQm9zdG9uLCBNQSAwMjExMC0xMzAxIFVTQS4K
LSAqLwotCi0vKgotICogRGVzY3JpcHRpb246Ci0gKgogICogQSByZWdyZXNzaW9uIHRlc3QgZm9y
OgogICogICAgICBjb21taXQgZTdjYTI1NTIzNjljMWRmZTAyMTZjNjI2YmFmODJjM2Q4M2VjMzZi
YgogICogICAgICBBdXRob3I6IE1hdGV1c3ogR3V6aWsgPG1ndXppa0ByZWRoYXQuY29tPgpAQCAt
NDEsNzggKzI1LDU2IEBACiAjaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiAjaW5jbHVkZSA8c3lzL2lw
Yy5oPgogI2luY2x1ZGUgPHN5cy9tc2cuaD4KLSNpbmNsdWRlICJ0ZXN0LmgiCi0jaW5jbHVkZSAi
bGFwaS9hYmlzaXplLmgiCi0KLWNvbnN0IGNoYXIgKlRDSUQgPSAibXNncmN2MDgiOwotY29uc3Qg
aW50IFRTVF9UT1RBTCA9IDE7Ci0KLSNpZmRlZiBUU1RfQUJJMzIKLQotc3RydWN0IG1idWYgewot
CWxvbmcgbXR5cGU7ICAgICAvKiBtZXNzYWdlIHR5cGUsIG11c3QgYmUgPiAwICovCi0JY2hhciBt
dGV4dFsxNl07IC8qIG1lc3NhZ2UgZGF0YSAqLwotfTsKLQotc3RhdGljIHZvaWQgbXNyKGludCBt
c3FpZCkKKyNpbmNsdWRlICJ0c3RfdGVzdC5oIgorI2luY2x1ZGUgInRzdF9zYWZlX3N5c3ZfaXBj
LmgiCisjaW5jbHVkZSAibGlibmV3aXBjLmgiCisKK3N0YXRpYyBsb25nIG10eXBlID0gMTIxOwor
c3RhdGljIGtleV90IG1zZ2tleTsKK3N0YXRpYyBpbnQgcXVldWVfaWQgPSAtMTsKK3N0YXRpYyBz
dHJ1Y3QgbWJ1ZiB7CisJbG9uZyBtdHlwZTsKKwljaGFyIG10ZXh0WzE2XTsKK30gcmN2X2J1Ziwg
c25kX2J1ZiA9IHsxMjEsICJoZWxsbyJ9OworCitzdGF0aWMgdm9pZCB2ZXJpZnlfbXNncmN2KHZv
aWQpCiB7Ci0Jc3RydWN0IG1idWYgbXNiczsKLQlzdHJ1Y3QgbWJ1ZiBtc2JyOwotCXNzaXplX3Qg
c3JldDsKLQlsb25nIG10eXBlID0gMTIxOwotCi0JbWVtc2V0KCZtc2JzLCAwLCBzaXplb2YobXNi
cykpOwotCW1zYnMubXR5cGUgPSBtdHlwZTsKLQotCWlmIChtc2dzbmQobXNxaWQsICZtc2JzLCBz
aXplb2YobXNicy5tdGV4dCksIElQQ19OT1dBSVQpKQotCQl0c3RfYnJrbShUQlJPSyB8IFRFUlJO
TywgTlVMTCwgIm1zZ3NuZCBlcnJvciIpOwotCi0Jc3JldCA9IG1zZ3Jjdihtc3FpZCwgJm1zYnIs
IHNpemVvZihtc2JyLm10ZXh0KSwgLW10eXBlLCBJUENfTk9XQUlUIHwgTVNHX05PRVJST1IpOwor
CW1lbXNldCgmcmN2X2J1ZiwgMCwgc2l6ZW9mKHJjdl9idWYpKTsKKwlTQUZFX01TR1NORChxdWV1
ZV9pZCwgJnNuZF9idWYsIHNpemVvZihzbmRfYnVmLm10ZXh0KSwgSVBDX05PV0FJVCk7CiAKLQlp
ZiAoc3JldCA8IDApIHsKLQkJdHN0X3Jlc20oVEZBSUwsICJCdWc6IE5vIG1lc3NhZ2Ugb2YgZGVz
aXJlZCB0eXBlLiIpOworCVRFU1QobXNncmN2KHF1ZXVlX2lkLCAmcmN2X2J1Ziwgc2l6ZW9mKHJj
dl9idWYubXRleHQpLCAtbXR5cGUsIElQQ19OT1dBSVQgfCBNU0dfTk9FUlJPUikpOworCWlmIChU
U1RfUkVUID09IC0xKSB7CisJCXRzdF9yZXMoVEZBSUwsICJCdWc6IE5vIG1lc3NhZ2Ugb2YgZGVz
aXJlZCB0eXBlLiIpOwogCQlyZXR1cm47CiAJfQogCi0JaWYgKG1zYnIubXR5cGUgIT0gbXR5cGUp
Ci0JCXRzdF9icmttKFRCUk9LLCBOVUxMLAotCQkJImZvdW5kIG10eXBlICVsZCwgZXhwZWN0ZWQg
JWxkXG4iLCBtc2JyLm10eXBlLCBtdHlwZSk7Ci0KLQlpZiAoKHNpemVfdClzcmV0ICE9IHNpemVv
Zihtc2JzLm10ZXh0KSkKLQkJdHN0X2Jya20oVEJST0ssIE5VTEwsICJyZWNlaXZlZCAlemksIGV4
cGVjdGVkICV6dVxuIiwKLQkJCSBzcmV0LCBzaXplb2YobXNicy5tdGV4dCkpOworCWlmIChyY3Zf
YnVmLm10eXBlICE9IG10eXBlKSB7CisJCXRzdF9yZXMoVEZBSUwsICJmb3VuZCBtdHlwZSAlbGQs
IGV4cGVjdGVkICVsZFxuIiwgcmN2X2J1Zi5tdHlwZSwgbXR5cGUpOworCQlyZXR1cm47CisJfQor
CWlmICgoc2l6ZV90KVRTVF9SRVQgIT0gc2l6ZW9mKHNuZF9idWYubXRleHQpKSB7CisJCXRzdF9y
ZXMoVEZBSUwsICJyZWNlaXZlZCAlemksIGV4cGVjdGVkICV6dVxuIiwgKHNpemVfdClUU1RfUkVU
LCBzaXplb2Yoc25kX2J1Zi5tdGV4dCkpOworCQlyZXR1cm47CisJfQogCi0JdHN0X3Jlc20oVFBB
U1MsICJObyByZWdyZXNzaW9uIGZvdW5kLiIpOworCXRzdF9yZXMoVFBBU1MsICJObyByZWdyZXNz
aW9uIGZvdW5kLiIpOwogfQogCi1zdGF0aWMgdm9pZCBtc2dyY3ZfdGVzdCh2b2lkKQorc3RhdGlj
IHZvaWQgc2V0dXAodm9pZCkKIHsKLQlpbnQgbXNxaWQgPSBtc2dnZXQoSVBDX1BSSVZBVEUsIElQ
Q19DUkVBVCB8IElQQ19FWENMIHwgMDY2Nik7Ci0KLQlpZiAobXNxaWQgPCAwKQotCQl0c3RfYnJr
bShUQlJPSyB8IFRFUlJOTywgTlVMTCwgIm1zZ2dldCBlcnJvciIpOwotCi0JbXNyKG1zcWlkKTsK
LQotCWlmIChtc2djdGwobXNxaWQsIElQQ19STUlELCAwKSkKLQkJdHN0X2Jya20oVEJST0sgfCBU
RVJSTk8sIE5VTEwsICJtc2djdGwgZXJyb3IiKTsKKwltc2drZXkgPSBHRVRJUENLRVkoKTsKKwlx
dWV1ZV9pZCA9IFNBRkVfTVNHR0VUKG1zZ2tleSwgSVBDX0NSRUFUIHwgSVBDX0VYQ0wgfCBNU0df
UlcpOwogfQogCi1pbnQgbWFpbihpbnQgYXJnYywgY2hhciAqYXJndltdKQorc3RhdGljIHZvaWQg
Y2xlYW51cCh2b2lkKQogewotCWludCBsYzsKLQotCXRzdF9wYXJzZV9vcHRzKGFyZ2MsIGFyZ3Ys
IE5VTEwsIE5VTEwpOwotCi0JZm9yIChsYyA9IDA7IFRFU1RfTE9PUElORyhsYyk7IGxjKyspCi0J
CW1zZ3Jjdl90ZXN0KCk7Ci0KLQl0c3RfZXhpdCgpOworCWlmIChxdWV1ZV9pZCAhPSAtMSkKKwkJ
U0FGRV9NU0dDVEwocXVldWVfaWQsIElQQ19STUlELCBOVUxMKTsKIH0KIAotI2Vsc2UgLyogbm8g
NjQtYml0ICovCi1pbnQgbWFpbih2b2lkKQotewotCXRzdF9icmttKFRDT05GLCBOVUxMLCAibm90
IHdvcmtzIHdoZW4gY29tcGlsZWQgYXMgNjQtYml0IGFwcGxpY2F0aW9uLiIpOwotfQotI2VuZGlm
CitzdGF0aWMgc3RydWN0IHRzdF90ZXN0IHRlc3QgPSB7CisJLm5lZWRzX3RtcGRpciA9IDEsCisJ
LnNldHVwID0gc2V0dXAsCisJLmNsZWFudXAgPSBjbGVhbnVwLAorCS50ZXN0X2FsbCA9IHZlcmlm
eV9tc2dyY3YKK307Ci0tIAoyLjIzLjAKCgoKCi0tIApNYWlsaW5nIGxpc3QgaW5mbzogaHR0cHM6
Ly9saXN0cy5saW51eC5pdC9saXN0aW5mby9sdHAK
