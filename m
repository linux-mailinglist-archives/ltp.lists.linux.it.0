Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [213.254.12.146])
	by mail.lfdr.de (Postfix) with ESMTPS id 6AA1C372B3E
	for <lists+linux-ltp@lfdr.de>; Tue,  4 May 2021 15:42:42 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id EB17D3C583C
	for <lists+linux-ltp@lfdr.de>; Tue,  4 May 2021 15:42:41 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-4.smtp.seeweb.it (in-4.smtp.seeweb.it [217.194.8.4])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (2048 bits))
 (No client certificate requested)
 by picard.linux.it (Postfix) with ESMTPS id 2C8FC3C5836
 for <ltp@lists.linux.it>; Tue,  4 May 2021 15:41:38 +0200 (CEST)
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by in-4.smtp.seeweb.it (Postfix) with ESMTPS id 5CB321000DD7
 for <ltp@lists.linux.it>; Tue,  4 May 2021 15:41:36 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.com; s=susede1;
 t=1620135696; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=L+V2q40QB4tMOBvWqUy2yL5dZYO8jmveYyr96BUqY90=;
 b=SzsP3ecNWhMLOUMpGpV7wx9NLaH6ky9SktepwYEzAIuYUO2qOpa0EmQ0EqI9/vqLymfied
 fxmVsAKtdRjXK5slgIyEeXJaGlfuaN2uVaZXDIqFSyK00f3kFLDIRqgCgprGCZpL3TV06m
 kBthxtPkAkAjmAa0ogCOCFuc5u3LSO4=
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id D8E2AB302;
 Tue,  4 May 2021 13:41:35 +0000 (UTC)
To: ltp@lists.linux.it
Date: Tue,  4 May 2021 14:40:56 +0100
Message-Id: <20210504134100.20666-4-rpalethorpe@suse.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20210504134100.20666-1-rpalethorpe@suse.com>
References: <20210504134100.20666-1-rpalethorpe@suse.com>
MIME-Version: 1.0
X-Virus-Scanned: clamav-milter 0.102.4 at in-4.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=0.1 required=7.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,DKIM_VALID_EF,SPF_HELO_NONE,SPF_PASS autolearn=disabled
 version=3.4.4
X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on in-4.smtp.seeweb.it
Subject: [LTP] [PATCH v6 3/7] Add new CGroups APIs
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
From: Richard Palethorpe via ltp <ltp@lists.linux.it>
Reply-To: Richard Palethorpe <rpalethorpe@suse.com>
Cc: Richard Palethorpe <rpalethorpe@suse.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

Q29tcGxldGUgcmV3cml0ZSBvZiB0aGUgQ0dyb3VwcyBBUEkgd2hpY2ggcHJvdmlkZXMgdHdvIGxh
eWVycyBvZgppbmRpcmVjdGlvbiBiZXR3ZWVuIHRoZSB0ZXN0IGF1dGhvciBhbmQgdGhlIFNVVCdz
IENHcm91cApjb25maWd1cmF0aW9uLgoKU2lnbmVkLW9mZi1ieTogUmljaGFyZCBQYWxldGhvcnBl
IDxycGFsZXRob3JwZUBzdXNlLmNvbT4KUmV2aWV3ZWQtYnk6IEN5cmlsIEhydWJpcyA8Y2hydWJp
c0BzdXNlLmN6PgotLS0KIGluY2x1ZGUvdHN0X2Nncm91cC5oIHwgIDE5MCArKysrKy0KIGluY2x1
ZGUvdHN0X3Rlc3QuaCAgIHwgICAgMSAtCiBsaWIvdHN0X2Nncm91cC5jICAgICB8IDEzMDQgKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tCiAzIGZpbGVzIGNoYW5nZWQs
IDExNTQgaW5zZXJ0aW9ucygrKSwgMzQxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1
ZGUvdHN0X2Nncm91cC5oIGIvaW5jbHVkZS90c3RfY2dyb3VwLmgKaW5kZXggYmZkODQ4MjYwLi5i
Y2Y0NjVhOTEgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdHN0X2Nncm91cC5oCisrKyBiL2luY2x1ZGUv
dHN0X2Nncm91cC5oCkBAIC0yLDQ2ICsyLDE5MCBAQAogLyoKICAqIENvcHlyaWdodCAoYykgMjAy
MCBSZWQgSGF0LCBJbmMuCiAgKiBDb3B5cmlnaHQgKGMpIDIwMjAgTGkgV2FuZyA8bGl3YW5nQHJl
ZGhhdC5jb20+CisgKiBDb3B5cmlnaHQgKGMpIDIwMjAtMjAyMSBTVVNFIExMQyA8cnBhbGV0aG9y
cGVAc3VzZS5jb20+CisgKi8KKy8qXAorICogW0RFU0NSSVBUSU9OXQorICoKKyAqIFRoZSBMVFAg
Q0dyb3VwcyBBUEkgdHJpZXMgdG8gcHJlc2VudCBhIGNvbnNpc3RlbnQgaW50ZXJmYWNlIHRvIHRo
ZQorICogbWFueSBwb3NzaWJsZSBDR3JvdXAgY29uZmlndXJhdGlvbnMgYSBzeXN0ZW0gY291bGQg
aGF2ZS4KKyAqCisgKiBZb3UgbWF5IGFzazsgIldoeSBkb24ndCB5b3UganVzdCBtb3VudCBhIHNp
bXBsZSBDR3JvdXAgaGllcmFyY2h5LAorICogaW5zdGVhZCBvZiBzY2FubmluZyB0aGUgY3VycmVu
dCBzZXR1cD8iLiBUaGUgc2hvcnQgYW5zd2VyIGlzIHRoYXQKKyAqIGl0IGlzIG5vdCBwb3NzaWJs
ZSB1bmxlc3Mgbm8gQ0dyb3VwcyBhcmUgY3VycmVudGx5IGFjdGl2ZSBhbmQKKyAqIGFsbW9zdCBh
bGwgb2Ygb3VyIHVzZXJzIHdpbGwgaGF2ZSBDR3JvdXBzIGFjdGl2ZS4gRXZlbiBpZgorICogdW5t
b3VudGluZyB0aGUgY3VycmVudCBDR3JvdXAgaGllcmFyY2h5IGlzIGEgcmVhc29uYWJsZSB0aGlu
ZyB0byBkbworICogdG8gdGhlIHN5dGVtIG1hbmFnZXIsIGl0IGlzIGhpZ2hseSB1bmxpa2VseSB0
aGUgQ0dyb3VwIGhpZXJhcmNoeQorICogd2lsbCBiZSBkZXN0cm95ZWQuIFNvIHVzZXJzIHdvdWxk
IGJlIGZvcmNlZCB0byByZW1vdmUgdGhlaXIgQ0dyb3VwCisgKiBjb25maWd1cmF0aW9uIGFuZCBy
ZWJvb3QgdGhlIHN5c3RlbS4KKyAqCisgKiBUaGUgY29yZSBsaWJyYXJ5IHRyaWVzIHRvIGVuc3Vy
ZSBhbiBMVFAgQ0dyb3VwIGV4aXN0cyBvbiBlYWNoCisgKiBoaWVyYXJjaHkgcm9vdC4gSW5zaWRl
IHRoZSBMVFAgZ3JvdXAgaXQgZW5zdXJlcyBhICdkcmFpbicgZ3JvdXAKKyAqIGV4aXN0cyBhbmQg
Y3JlYXRzIGEgdGVzdCBncm91cCBmb3IgdGhlIGN1cnJlbnQgdGVzdC4gSW4gdGhlIHdvcnN0Cisg
KiBjYXNlIHdlIGVuZCB1cCB3aXRoIGEgc2V0IG9mIGhpZXJhcmNoaWVzIGxpa2UgdGhlIGZvbGx3
b2luZy4gV2hlcmUKKyAqIGV4aXN0aW5nIHN5c3RlbS1tYW5hZ2VyLWNyZWF0ZWQgQ0dyb3VwcyBo
YXZlIGJlZW4gb21pdHRlZC4KKyAqCisgKiAJKFYyIFJvb3QpCShWMSBSb290IDEpCS4uLgkoVjEg
Um9vdCBOKQorICogCSAgICB8CQkgICAgIHwJCQkgICAgIHwKKyAqCSAgKGx0cCkJCSAgIChsdHAp
CS4uLgkgICAobHRwKQorICoJIC8gICAgIFwJICAvCVwJCSAgLwlcCisgKiAgKGRyYWluKSAodGVz
dC1uKSAoZHJhaW4pICAodGVzdC1uKSAgLi4uICAoZHJhaW4pICAodGVzdC1uKQorICoKKyAqIFYy
IENHcm91cCBjb250cm9sbGVycyB1c2UgYSBzaW5nbGUgdW5pZmllZCBoaWVyYXJjaHkgb24gYSBz
aW5nbGUKKyAqIHJvb3QuIFR3byBvciBtb3JlIFYxIGNvbnRyb2xsZXJzIG1heSBzaGFyZSBhIHJv
b3Qgb3IgaGF2ZSB0aGVpciBvd24KKyAqIHJvb3QuIEhvd2V2ZXIgdGhlcmUgbWF5IGV4aXN0IG9u
bHkgb25lIGluc3RhbmNlIG9mIGEgY29udHJvbGxlci4KKyAqIFNvIHlvdSBjYW4gbm90IGhhdmUg
dGhlIHNhbWUgVjEgY29udHJvbGxlciBvbiBtdWx0aXBsZSByb290cy4KKyAqCisgKiBJdCBpcyBw
b3NzaWJsZSB0byBoYXZlIGJvdGggYSBWMiBoaWVyYXJjaHkgYW5kIFYxIGhpZXJhcmNoaWVzCisg
KiBhY3RpdmUgYXQgdGhlIHNhbWUgdGltZS4gV2hpY2ggaXMgd2hhdCBpcyBzaG93biBhYm92ZS4g
QW55CisgKiBjb250cm9sbGVycyBhdHRhY2hlZCB0byBWMSBoaWVyYXJjaGllcyB3aWxsIG5vdCBi
ZSBhdmFpbGFibGUgaW4gdGhlCisgKiBWMiBoaWVyYXJjaHkuIFRoZSByZXZlcnNlIGlzIGFsc28g
dHJ1ZS4KKyAqCisgKiBOb3RlIHRoYXQgYSBzaW5nbGUgaGllcmFyY2h5IG1heSBiZSBtb3VudGVk
IG11bHRpcGxlCisgKiB0aW1lcy4gQWxsb3dpbmcgaXQgdG8gYmUgYWNjZXNzZWQgYXQgZGlmZmVy
ZW50IGxvY2F0aW9ucy4gSG93ZXZlcgorICogc3Vic2VxdWVudCBtb3VudCBvcGVyYXRpb25zIHdp
bGwgZmFpbCBpZiB0aGUgbW91bnQgb3B0aW9ucyBhcmUKKyAqIGRpZmZlcmVudCBmcm9tIHRoZSBm
aXJzdC4KKyAqCisgKiBUaGUgdXNlciBtYXkgcHJlLWNyZWF0ZSB0aGUgQ0dyb3VwIGhpZXJhcmNo
aWVzIGFuZCB0aGUgbHRwIENHcm91cCwKKyAqIG90aGVyd2lzZSB0aGUgbGlicmFyeSB3aWxsIHRy
eSB0byBjcmVhdGUgdGhlbS4gSWYgdGhlIGx0cCBncm91cAorICogYWxyZWFkeSBleGlzdHMgYW5k
IGhhcyBhcHByb3ByaWF0ZSBwZXJtaXNzaW9ucywgdGhlbiBhZG1pbgorICogcHJpdmlsZWdlcyB3
aWxsIG5vdCBiZSByZXF1aXJlZCB0byBydW4gdGhlIHRlc3RzLgorICoKKyAqIEJlY2F1c2UgdGhl
IHRlc3QgbWF5IG5vdCBoYXZlIGFjY2VzcyB0byB0aGUgQ0dyb3VwIHJvb3QocyksIHRoZQorICog
ZHJhaW4gQ0dyb3VwIGlzIGNyZWF0ZWQuIFRoaXMgY2FuIGJlIHVzZWQgdG8gc3RvcmUgcHJvY2Vz
c2VzIHdoaWNoCisgKiB3b3VsZCBvdGhlcndpc2UgYmxvY2sgdGhlIGRlc3RydWN0aW9uIG9mIHRo
ZSBpbmRpdmlkdWFsIHRlc3QgQ0dyb3VwCisgKiBvciBvbmUgb2YgaXRzIGRlc2NlbmRhbnRzLgor
ICoKKyAqIFRoZSB0ZXN0IGF1dGhvciBtYXkgY3JlYXRlIGNoaWxkIENHcm91cHMgd2l0aGluIHRo
ZSB0ZXN0IENHcm91cAorICogdXNpbmcgdGhlIENHcm91cCBJdGVtIEFQSS4gVGhlIGxpYnJhcnkg
d2lsbCBjcmVhdGUgdGhlIG5ldyBDR3JvdXAKKyAqIGluIGFsbCB0aGUgcmVsZXZhbnQgaGllcmFy
Y2hpZXMuCisgKgorICogVGhlcmUgYXJlIG1hbnkgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGUgVjEg
YW5kIFYyIENHcm91cCBBUElzLiBJZiBhCisgKiBjb250cm9sbGVyIGlzIG9uIGJvdGggVjEgYW5k
IFYyLCBpdCBtYXkgaGF2ZSBkaWZmZXJlbnQgcGFyYW1ldGVycworICogYW5kIGNvbnRyb2wgZmls
ZXMuIFNvbWUgb2YgdGhlc2UgY29udHJvbCBmaWxlcyBoYXZlIGEgZGlmZmVyZW50CisgKiBuYW1l
LCBidXQgc2ltaWxhciBmdW5jdGlvbmFsaXR5LiBJbiB0aGlzIGNhc2UgdGhlIEl0ZW0gQVBJIHVz
ZXMKKyAqIHRoZSBWMiBuYW1lcyBhbmQgYWxpYXNlcyB0aGVtIHRvIHRoZSBWMSBuYW1lIHdoZW4g
YXBwcm9wcmlhdGUuCisgKgorICogU29tZSBjb250cm9sIGZpbGVzIG9ubHkgZXhpc3Qgb24gb25l
IG9mIHRoZSB2ZXJzaW9ucyBvciB0aGV5IGNhbiBiZQorICogbWlzc2luZyBkdWUgdG8gb3RoZXIg
cmVhc29ucy4gVGhlIEl0ZW0gQVBJIGFsbG93cyB0aGUgdXNlciB0byBjaGVjaworICogaWYgdGhl
IGZpbGUgZXhpc3RzIGJlZm9yZSB0cnlpbmcgdG8gdXNlIGl0LgorICoKKyAqIE9mdGVuIGEgY29u
dHJvbCBmaWxlIGhhcyBhbG1vc3QgdGhlIHNhbWUgZnVuY3Rpb25hbGl0eSBiZXR3ZWVuIFYxCisg
KiBhbmQgVjIuIFdoaWNoIG1lYW5zIGl0IGNhbiBiZSB1c2VkIGluIHRoZSBzYW1lIHdheSBtb3N0
IG9mIHRoZQorICogdGltZSwgYnV0IG5vdCBhbGwuIEZvciBub3cgdGhpcyBpcyBoYW5kbGVkIGJ5
IGV4cG9zaW5nIHRoZSBBUEkKKyAqIHZlcnNpb24gYSBjb250cm9sbGVyIGlzIHVzaW5nIHRvIGFs
bG93IHRoZSB0ZXN0IGF1dGhvciB0byBoYW5kbGUKKyAqIGVkZ2UgY2FzZXMuIChlLmcuIFYyIG1l
bW9yeS5zd2FwLm1heCBhY2NlcHRzICJtYXgiLCBidXQgVjEKKyAqIG1lbW9yeS5tZW1zdy5saW1p
dF9pbl9ieXRlcyBkb2VzIG5vdCkuCiAgKi8KIAogI2lmbmRlZiBUU1RfQ0dST1VQX0gKICNkZWZp
bmUgVFNUX0NHUk9VUF9ICiAKLSNkZWZpbmUgUEFUSF9UTVBfQ0dfTUVNCSIvdG1wL2Nncm91cF9t
ZW0iCi0jZGVmaW5lIFBBVEhfVE1QX0NHX0NTVAkiL3RtcC9jZ3JvdXBfY3N0IgorI2luY2x1ZGUg
PHN5cy90eXBlcy5oPgogCisvKiBDR3JvdXBzIEtlcm5lbCBBUEkgdmVyc2lvbiAqLwogZW51bSB0
c3RfY2dyb3VwX3ZlciB7CiAJVFNUX0NHUk9VUF9WMSA9IDEsCiAJVFNUX0NHUk9VUF9WMiA9IDIs
CiB9OwogCi1lbnVtIHRzdF9jZ3JvdXBfY3RybCB7Ci0JVFNUX0NHUk9VUF9NRU1DRyA9IDEsCi0J
VFNUX0NHUk9VUF9DUFVTRVQgPSAyLAotCS8qIGFkZCBjZ3JvdXAgY29udHJvbGxlciAqLworLyog
VXNlZCB0byBzcGVjaWZ5IENHcm91cCBoaWVyYXJjaHkgY29uZmlndXJhdGlvbiBvcHRpb25zLCBh
bGxvd2luZyBhCisgKiB0ZXN0IHRvIHJlcXVlc3QgYSBwYXJ0aWN1bGFyIENHcm91cCBzdHJ1Y3R1
cmUuCisgKi8KK3N0cnVjdCB0c3RfY2dyb3VwX29wdHMgeworCS8qIE9ubHkgdHJ5IHRvIG1vdW50
IFYxIENHcm91cCBjb250cm9sbGVycy4gVGhpcyB3aWxsIG5vdAorCSAqIHByZXZlbnQgVjIgZnJv
bSBiZWluZyB1c2VkIGlmIGl0IGlzIGFscmVhZHkgbW91bnRlZCwgaXQKKwkgKiBvbmx5IGluZGlj
YXRlcyB0aGF0IHdlIHNob3VsZCBtb3VudCBWMSBjb250cm9sbGVycyBpZgorCSAqIG5vdGhpbmcg
aXMgcHJlc2VudC4gQnkgZGVmYXVsdCB3ZSB0cnkgdG8gbW91bnQgVjIgZmlyc3QuICovCisJaW50
IG9ubHlfbW91bnRfdjE6MTsKIH07CiAKLWVudW0gdHN0X2Nncm91cF92ZXIgdHN0X2Nncm91cF92
ZXJzaW9uKHZvaWQpOworLyogQSBDb250cm9sIEdyb3VwIGluIExUUCdzIGFnZ3JlZ2F0ZWQgaGll
cmFyY2h5ICovCitzdHJ1Y3QgdHN0X2Nncm91cF9ncm91cDsKKworLyogU2VhcmNoIHRoZSBzeXN0
ZW0gZm9yIG1vdW50ZWQgY2dyb3VwcyBhbmQgYXZhaWxhYmxlCisgKiBjb250cm9sbGVycy4gQ2Fs
bGVkIGF1dG9tYXRpY2FsbHkgYnkgdHN0X2Nncm91cF9yZXF1aXJlLgorICovCit2b2lkIHRzdF9j
Z3JvdXBfc2Nhbih2b2lkKTsKKy8qIFByaW50IHRoZSBjb25maWcgZGV0ZWN0ZWQgYnkgdHN0X2Nn
cm91cF9zY2FuICovCit2b2lkIHRzdF9jZ3JvdXBfcHJpbnRfY29uZmlnKHZvaWQpOworCisvKiBF
bnN1cmUgdGhlIHNwZWNpZmllZCBjb250cm9sbGVyIGlzIGF2YWlsYWJsZSBpbiB0aGUgdGVzdCdz
IGRlZmF1bHQKKyAqIENHcm91cCwgbW91bnRpbmcvZW5hYmxpbmcgaXQgaWYgbmVjZXNzYXJ5ICov
Cit2b2lkIHRzdF9jZ3JvdXBfcmVxdWlyZShjb25zdCBjaGFyICpjb25zdCBjdHJsX25hbWUsCisJ
CQljb25zdCBzdHJ1Y3QgdHN0X2Nncm91cF9vcHRzICpjb25zdCBvcHRpb25zKQorCQkJX19hdHRy
aWJ1dGVfXyAoKG5vbm51bGwgKDEpKSk7CisKKy8qIFRlYXIgZG93biBhbnkgQ0dyb3VwcyBjcmVh
dGVkIGJ5IGNhbGxzIHRvIHRzdF9jZ3JvdXBfcmVxdWlyZSAqLwordm9pZCB0c3RfY2dyb3VwX2Ns
ZWFudXAodm9pZCk7CisKKy8qIEdldCB0aGUgZGVmYXVsdCBDR3JvdXAgZm9yIHRoZSB0ZXN0LiBJ
dCBhbGxvY2F0ZXMgbWVtb3J5IChpbiBhCisgKiBndWFyZGVkIGJ1ZmZlcikgc28gc2hvdWxkIGFs
d2F5cyBiZSBjYWxsZWQgZnJvbSBzZXR1cAorICovCitjb25zdCBzdHJ1Y3QgdHN0X2Nncm91cF9n
cm91cCAqdHN0X2Nncm91cF9nZXRfdGVzdF9ncm91cCh2b2lkKQorCV9fYXR0cmlidXRlX18gKCh3
YXJuX3VudXNlZF9yZXN1bHQpKTsKKy8qIEdldCB0aGUgc2hhcmVkIGRyYWluIGdyb3VwLiBBbHNv
IHNob3VsZCBiZSBjYWxsZWQgZnJvbSBzZXR1cCAqLworY29uc3Qgc3RydWN0IHRzdF9jZ3JvdXBf
Z3JvdXAgKnRzdF9jZ3JvdXBfZ2V0X2RyYWluX2dyb3VwKHZvaWQpCisJX19hdHRyaWJ1dGVfXyAo
KHdhcm5fdW51c2VkX3Jlc3VsdCkpOworCisvKiBDcmVhdGUgYSBkZXNjZW5kYW50IENHcm91cCAq
Lworc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKgordHN0X2Nncm91cF9ncm91cF9tayhjb25zdCBz
dHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqY29uc3QgcGFyZW50LAorCQkgICAgY29uc3QgY2hhciAq
Y29uc3QgZ3JvdXBfbmFtZSkKKwkJICAgIF9fYXR0cmlidXRlX18gKChub25udWxsLCB3YXJuX3Vu
dXNlZF9yZXN1bHQpKTsKKy8qIFJlbW92ZSBhIGRlc2NlbmRhbnQgQ0dyb3VwICovCitzdHJ1Y3Qg
dHN0X2Nncm91cF9ncm91cCAqCit0c3RfY2dyb3VwX2dyb3VwX3JtKHN0cnVjdCB0c3RfY2dyb3Vw
X2dyb3VwICpjb25zdCBjZykKKwkJICAgIF9fYXR0cmlidXRlX18gKChub25udWxsLCB3YXJuX3Vu
dXNlZF9yZXN1bHQpKTsKKworI2RlZmluZSBUU1RfQ0dST1VQX1ZFUihjZywgY3RybF9uYW1lKSBc
CisJdHN0X2Nncm91cF92ZXIoX19GSUxFX18sIF9fTElORV9fLCAoY2cpLCAoY3RybF9uYW1lKSkK
KworZW51bSB0c3RfY2dyb3VwX3ZlciB0c3RfY2dyb3VwX3Zlcihjb25zdCBjaGFyICpjb25zdCBm
aWxlLCBjb25zdCBpbnQgbGluZW5vLAorCQkJCSAgIGNvbnN0IHN0cnVjdCB0c3RfY2dyb3VwX2dy
b3VwICpjb25zdCBjZywKKwkJCQkgICBjb25zdCBjaGFyICpjb25zdCBjdHJsX25hbWUpCisJCQkJ
ICAgX19hdHRyaWJ1dGVfXyAoKG5vbm51bGwsIHdhcm5fdW51c2VkX3Jlc3VsdCkpOworCisjZGVm
aW5lIFNBRkVfQ0dST1VQX0hBUyhjZywgZmlsZV9uYW1lKSBcCisJc2FmZV9jZ3JvdXBfaGFzKF9f
RklMRV9fLCBfX0xJTkVfXywgKGNnKSwgKGZpbGVfbmFtZSkpCisKK2ludCBzYWZlX2Nncm91cF9o
YXMoY29uc3QgY2hhciAqY29uc3QgZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwkJICAgIGNvbnN0
IHN0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICpjb25zdCBjZywKKwkJICAgIGNvbnN0IGNoYXIgKmNv
bnN0IGZpbGVfbmFtZSkKKwkJICAgIF9fYXR0cmlidXRlX18gKChub25udWxsLCB3YXJuX3VudXNl
ZF9yZXN1bHQpKTsKKworI2RlZmluZSBTQUZFX0NHUk9VUF9SRUFEKGNnLCBmaWxlX25hbWUsIG91
dCwgbGVuKQkJCVwKKwlzYWZlX2Nncm91cF9yZWFkKF9fRklMRV9fLCBfX0xJTkVfXywJCQkJXAor
CQkJIChjZyksIChmaWxlX25hbWUpLCAob3V0KSwgKGxlbikpCisKK3NzaXplX3Qgc2FmZV9jZ3Jv
dXBfcmVhZChjb25zdCBjaGFyICpjb25zdCBmaWxlLCBjb25zdCBpbnQgbGluZW5vLAorCQkJIGNv
bnN0IHN0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICpjb25zdCBjZywKKwkJCSBjb25zdCBjaGFyICpj
b25zdCBmaWxlX25hbWUsCisJCQkgY2hhciAqY29uc3Qgb3V0LCBjb25zdCBzaXplX3QgbGVuKQor
CQkJIF9fYXR0cmlidXRlX18gKChub25udWxsKSk7CisKKyNkZWZpbmUgU0FGRV9DR1JPVVBfUFJJ
TlRGKGNnLCBmaWxlX25hbWUsIGZtdCwgLi4uKQkJCVwKKwlzYWZlX2Nncm91cF9wcmludGYoX19G
SUxFX18sIF9fTElORV9fLAkJCQlcCisJCQkgICAoY2cpLCAoZmlsZV9uYW1lKSwgKGZtdCksIF9f
VkFfQVJHU19fKQogCi0vKiBUbyBtb3VudC91bW91bnQgc3BlY2lmaWVkIGNncm91cCBjb250cm9s
bGVyIG9uICdjZ3JvdXBfZGlyJyBwYXRoICovCi12b2lkIHRzdF9jZ3JvdXBfbW91bnQoZW51bSB0
c3RfY2dyb3VwX2N0cmwgY3RybCwgY29uc3QgY2hhciAqY2dyb3VwX2Rpcik7Ci12b2lkIHRzdF9j
Z3JvdXBfdW1vdW50KGNvbnN0IGNoYXIgKmNncm91cF9kaXIpOworI2RlZmluZSBTQUZFX0NHUk9V
UF9QUklOVChjZywgZmlsZV9uYW1lLCBzdHIpCQkJCVwKKwlzYWZlX2Nncm91cF9wcmludGYoX19G
SUxFX18sIF9fTElORV9fLCAoY2cpLCAoZmlsZV9uYW1lKSwgIiVzIiwgKHN0cikpCiAKLS8qIFRv
IG1vdmUgY3VycmVudCBwcm9jZXNzIFBJRCB0byB0aGUgbW91bnRlZCBjZ3JvdXAgdGFza3MgKi8K
LXZvaWQgdHN0X2Nncm91cF9tb3ZlX2N1cnJlbnQoY29uc3QgY2hhciAqY2dyb3VwX2Rpcik7Cit2
b2lkIHNhZmVfY2dyb3VwX3ByaW50Zihjb25zdCBjaGFyICpjb25zdCBmaWxlLCBjb25zdCBpbnQg
bGluZW5vLAorCQkJY29uc3Qgc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKmNvbnN0IGNnLAorCQkJ
Y29uc3QgY2hhciAqY29uc3QgZmlsZV9uYW1lLAorCQkJY29uc3QgY2hhciAqY29uc3QgZm10LCAu
Li4pCisJCQlfX2F0dHJpYnV0ZV9fICgoZm9ybWF0IChwcmludGYsIDUsIDYpLCBub25udWxsKSk7
CiAKLS8qIFRvIHNldCBjZ3JvdXAgY29udHJvbGxlciBrbm9iIHdpdGggbmV3IHZhbHVlICovCi12
b2lkIHRzdF9jZ3JvdXBfc2V0X2tub2IoY29uc3QgY2hhciAqY2dyb3VwX2RpciwgY29uc3QgY2hh
ciAqa25vYiwgbG9uZyB2YWx1ZSk7CisjZGVmaW5lIFNBRkVfQ0dST1VQX1NDQU5GKGNnLCBmaWxl
X25hbWUsIGZtdCwgLi4uKQkJCVwKKwlzYWZlX2Nncm91cF9zY2FuZihfX0ZJTEVfXywgX19MSU5F
X18sCQkJCVwKKwkJCSAgKGNnKSwgKGZpbGVfbmFtZSksIChmbXQpLCBfX1ZBX0FSR1NfXykKIAot
LyogU2V0IG9mIGZ1bmN0aW9ucyB0byBzZXQga25vYnMgdW5kZXIgdGhlIG1lbW9yeSBjb250cm9s
bGVyICovCi12b2lkIHRzdF9jZ3JvdXBfbWVtX3NldF9tYXhieXRlcyhjb25zdCBjaGFyICpjZ3Jv
dXBfZGlyLCBsb25nIG1lbXN6KTsKLWludCAgdHN0X2Nncm91cF9tZW1fc3dhcGFjY3RfZW5hYmxl
ZChjb25zdCBjaGFyICpjZ3JvdXBfZGlyKTsKLXZvaWQgdHN0X2Nncm91cF9tZW1fc2V0X21heHN3
YXAoY29uc3QgY2hhciAqY2dyb3VwX2RpciwgbG9uZyBtZW1zeik7Cit2b2lkIHNhZmVfY2dyb3Vw
X3NjYW5mKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCisJCSAgICAgICBjb25z
dCBzdHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqY29uc3QgY2csCisJCSAgICAgICBjb25zdCBjaGFy
ICpjb25zdCBmaWxlX25hbWUsCisJCSAgICAgICBjb25zdCBjaGFyICpmbXQsIC4uLikKKwkJICAg
ICAgIF9fYXR0cmlidXRlX18gKChmb3JtYXQgKHNjYW5mLCA1LCA2KSwgbm9ubnVsbCkpOwogCi0v
KiBTZXQgb2YgZnVuY3Rpb25zIHRvIHJlYWQvd3JpdGUgY3B1c2V0IGNvbnRyb2xsZXIgZmlsZXMg
Y29udGVudCAqLwotdm9pZCB0c3RfY2dyb3VwX2NwdXNldF9yZWFkX2ZpbGVzKGNvbnN0IGNoYXIg
KmNncm91cF9kaXIsIGNvbnN0IGNoYXIgKmZpbGVuYW1lLAotCWNoYXIgKnJldGJ1Ziwgc2l6ZV90
IHJldGJ1Zl9zeik7Ci12b2lkIHRzdF9jZ3JvdXBfY3B1c2V0X3dyaXRlX2ZpbGVzKGNvbnN0IGNo
YXIgKmNncm91cF9kaXIsIGNvbnN0IGNoYXIgKmZpbGVuYW1lLAotCWNvbnN0IGNoYXIgKmJ1Zik7
CiAKICNlbmRpZiAvKiBUU1RfQ0dST1VQX0ggKi8KZGlmZiAtLWdpdCBhL2luY2x1ZGUvdHN0X3Rl
c3QuaCBiL2luY2x1ZGUvdHN0X3Rlc3QuaAppbmRleCA0ZWVlNmY4OTcuLjZhZDM1NTUwNiAxMDA2
NDQKLS0tIGEvaW5jbHVkZS90c3RfdGVzdC5oCisrKyBiL2luY2x1ZGUvdHN0X3Rlc3QuaApAQCAt
MzksNyArMzksNiBAQAogI2luY2x1ZGUgInRzdF9jYXBhYmlsaXR5LmgiCiAjaW5jbHVkZSAidHN0
X2h1Z2VwYWdlLmgiCiAjaW5jbHVkZSAidHN0X2Fzc2VydC5oIgotI2luY2x1ZGUgInRzdF9jZ3Jv
dXAuaCIKICNpbmNsdWRlICJ0c3RfbG9ja2Rvd24uaCIKICNpbmNsdWRlICJ0c3RfZmlwcy5oIgog
I2luY2x1ZGUgInRzdF90YWludC5oIgpkaWZmIC0tZ2l0IGEvbGliL3RzdF9jZ3JvdXAuYyBiL2xp
Yi90c3RfY2dyb3VwLmMKaW5kZXggOTZjOTUyNGQyLi5hNWE5ZjM1ZTcgMTAwNjQ0Ci0tLSBhL2xp
Yi90c3RfY2dyb3VwLmMKKysrIGIvbGliL3RzdF9jZ3JvdXAuYwpAQCAtMiw0NTMgKzIsMTEyMyBA
QAogLyoKICAqIENvcHlyaWdodCAoYykgMjAyMCBSZWQgSGF0LCBJbmMuCiAgKiBDb3B5cmlnaHQg
KGMpIDIwMjAgTGkgV2FuZyA8bGl3YW5nQHJlZGhhdC5jb20+CisgKiBDb3B5cmlnaHQgKGMpIDIw
MjAtMjAyMSBTVVNFIExMQyA8cnBhbGV0aG9ycGVAc3VzZS5jb20+CiAgKi8KIAogI2RlZmluZSBU
U1RfTk9fREVGQVVMVF9NQUlOCiAKICNpbmNsdWRlIDxzdGRpby5oPgorI2luY2x1ZGUgPHN0ZGRl
Zi5oPgogI2luY2x1ZGUgPHN0ZGxpYi5oPgorI2luY2x1ZGUgPG1udGVudC5oPgogI2luY2x1ZGUg
PHN5cy9tb3VudC5oPgotI2luY2x1ZGUgPGZjbnRsLmg+Ci0jaW5jbHVkZSA8dW5pc3RkLmg+CiAK
ICNpbmNsdWRlICJ0c3RfdGVzdC5oIgotI2luY2x1ZGUgInRzdF9zYWZlX21hY3Jvcy5oIgotI2lu
Y2x1ZGUgInRzdF9zYWZlX3N0ZGlvLmgiCisjaW5jbHVkZSAibGFwaS9mY250bC5oIgorI2luY2x1
ZGUgImxhcGkvbW91bnQuaCIKKyNpbmNsdWRlICJsYXBpL21rZGlyYXQuaCIKKyNpbmNsdWRlICJ0
c3Rfc2FmZV9maWxlX2F0LmgiCiAjaW5jbHVkZSAidHN0X2Nncm91cC5oIgotI2luY2x1ZGUgInRz
dF9kZXZpY2UuaCIKIAotc3RhdGljIGVudW0gdHN0X2Nncm91cF92ZXIgdHN0X2NnX3ZlcjsKLXN0
YXRpYyBpbnQgY2xvbmVfY2hpbGRyZW47CitzdHJ1Y3QgY2dyb3VwX3Jvb3Q7CiAKLXN0YXRpYyBp
bnQgdHN0X2Nncm91cF9jaGVjayhjb25zdCBjaGFyICpjZ3JvdXApCisvKiBBIG5vZGUgaW4gYSBz
aW5nbGUgQ0dyb3VwIGhpZXJhcmNoeS4gSXQgZXhpc3RzIG1haW5seSBmb3IKKyAqIGNvbnZlbmll
bmNlIHNvIHRoYXQgd2UgZG8gbm90IGhhdmUgdG8gdHJhdmVyc2UgdGhlIENHcm91cCBzdHJ1Y3R1
cmUKKyAqIGZvciBmcmVxdWVudCBvcGVyYXRpb25zLgorICoKKyAqIFRoaXMgaXMgYWN0dWFsbHkg
YSBzaW5nbGUtbGlua2VkIGxpc3Qgbm90IGEgdHJlZS4gV2Ugb25seSBuZWVkIHRvCisgKiB0cmF2
ZXJzZSBmcm9tIGxlYWYgdG93YXJkcyByb290LgorICovCitzdHJ1Y3QgY2dyb3VwX2RpciB7CisJ
Y29uc3QgY2hhciAqZGlyX25hbWU7CisJY29uc3Qgc3RydWN0IGNncm91cF9kaXIgKmRpcl9wYXJl
bnQ7CisKKwkvKiBTaG9ydGN1dCB0byByb290ICovCisJY29uc3Qgc3RydWN0IGNncm91cF9yb290
ICpkaXJfcm9vdDsKKworCS8qIFN1YnN5c3RlbXMgKGNvbnRyb2xsZXJzKSBiaXQgZmllbGQuIE9u
bHkgY29udHJvbGxlcnMgd2hpY2gKKwkgKiB3ZXJlIHJlcXVpcmVkIGFuZCBjb25maWd1cmVkIGZv
ciB0aGlzIG5vZGUgYXJlIGFkZGVkIHRvCisJICogdGhpcyBmaWVsZC4gU28gaXQgbWF5IGJlIGRp
ZmZlcmVudCBmcm9tIHJvb3QtPmNzc19maWVsZC4KKwkgKi8KKwl1aW50MzJfdCBjdHJsX2ZpZWxk
OworCisJLyogSW4gZ2VuZXJhbCB3ZSBhdm9pZCBoYXZpbmcgc3ByaW50ZnMgZXZlcnl3aGVyZSBh
bmQgdXNlCisJICogb3BlbmF0LCBsaW5rYXQsIGV0Yy4KKwkgKi8KKwlpbnQgZGlyX2ZkOworCisJ
aW50IHdlX2NyZWF0ZWRfaXQ6MTsKK307CisKKy8qIFRoZSByb290IG9mIGEgQ0dyb3VwIGhpZXJh
cmNoeS90cmVlICovCitzdHJ1Y3QgY2dyb3VwX3Jvb3QgeworCWVudW0gdHN0X2Nncm91cF92ZXIg
dmVyOworCS8qIEEgbW91bnQgcGF0aCAqLworCWNoYXIgbW50X3BhdGhbUEFUSF9NQVhdOworCS8q
IFN1YnN5c3RlbXMgKGNvbnRyb2xsZXJzKSBiaXQgZmllbGQuIEluY2x1ZGVzIGFsbAorCSAqIGNv
bnRyb2xsZXJzIGZvdW5kIHdoaWxlIHNjYW5uaW5nIHRoaXMgcm9vdC4KKwkgKi8KKwl1aW50MzJf
dCBjdHJsX2ZpZWxkOworCisJLyogQ0dyb3VwIGhpZXJhcmNoeTogbW50IC0+IGx0cCAtPiB7ZHJh
aW4sIHRlc3QgLT4gPz8/IH0gV2UKKwkgKiBrZWVwIGEgZmxhdCByZWZlcmVuY2UgdG8gbHRwLCBk
cmFpbiBhbmQgdGVzdCBmb3IKKwkgKiBjb252ZW5pZW5jZS4KKwkgKi8KKworCS8qIE1vdW50IGRp
cmVjdG9yeSAqLworCXN0cnVjdCBjZ3JvdXBfZGlyIG1udF9kaXI7CisJLyogTFRQIENHcm91cCBk
aXJlY3RvcnksIGNvbnRhaW5zIGRyYWluIGFuZCB0ZXN0IGRpcnMgKi8KKwlzdHJ1Y3QgY2dyb3Vw
X2RpciBsdHBfZGlyOworCS8qIERyYWluIENHcm91cCwgc2VlIGNncm91cF9jbGVhbnVwICovCisJ
c3RydWN0IGNncm91cF9kaXIgZHJhaW5fZGlyOworCS8qIENHcm91cCBmb3IgY3VycmVudCB0ZXN0
LiBXaGljaCBtYXkgaGF2ZSBjaGlsZHJlbi4gKi8KKwlzdHJ1Y3QgY2dyb3VwX2RpciB0ZXN0X2Rp
cjsKKworCWludCB3ZV9tb3VudGVkX2l0OjE7CisJLyogY3B1c2V0IGlzIGluIGNvbXBhdGFiaWxp
dHkgbW9kZSAqLworCWludCBub19jcHVzZXRfcHJlZml4OjE7Cit9OworCisvKiBDb250cm9sbGVy
IHN1Yi1zeXN0ZW1zICovCitlbnVtIGNncm91cF9jdHJsX2luZHggeworCUNUUkxfTUVNT1JZID0g
MSwKKwlDVFJMX0NQVVNFVCA9IDIsCit9OworI2RlZmluZSBDVFJMU19NQVggQ1RSTF9DUFVTRVQK
KworLyogQXQgbW9zdCB3ZSBjYW4gaGF2ZSBvbmUgY2dyb3VwIFYxIHRyZWUgZm9yIGVhY2ggY29u
dHJvbGxlciBhbmQgb25lCisgKiAoZW1wdHkpIHYyIHRyZWUuCisgKi8KKyNkZWZpbmUgUk9PVFNf
TUFYIChDVFJMU19NQVggKyAxKQorCisvKiBEZXNjcmliZXMgYSBjb250cm9sbGVyIGZpbGUgb3Ig
a25vYgorICoKKyAqIFRoZSBwcmltYXJ5IHB1cnBvc2Ugb2YgdGhpcyBpcyB0byBtYXAgVjIgbmFt
ZXMgdG8gVjEKKyAqIG5hbWVzLgorICovCitzdHJ1Y3QgY2dyb3VwX2ZpbGUgeworCS8qIENhbm9u
aWNhbCBuYW1lLiBJcyB0aGUgVjIgbmFtZSB1bmxlc3MgYW4gaXRlbSBpcyBWMSBvbmx5ICovCisJ
Y29uc3QgY2hhciAqY29uc3QgZmlsZV9uYW1lOworCS8qIFYxIG5hbWUgb3IgTlVMTCBpZiBpdGVt
IGlzIFYyIG9ubHkgKi8KKwljb25zdCBjaGFyICpjb25zdCBmaWxlX25hbWVfdjE7CisKKwkvKiBU
aGUgY29udHJvbGxlciB0aGlzIGl0ZW0gYmVsb25ncyB0byBvciB6ZXJvIGZvcgorCSAqICdjZ3Jv
dXAuPGl0ZW0+Jy4KKwkgKi8KKwljb25zdCBlbnVtIGNncm91cF9jdHJsX2luZHggY3RybF9pbmR4
OworfTsKKworLyogRGVzY3JpYmVzIGEgQ29udHJvbGxlciBvciBzdWJzeXN0ZW0KKyAqCisgKiBJ
bnRlcm5hbGx5IHRoZSBrZXJuZWwgc2VlbXMgdG8gY2FsbCBjb250cm9sbGVycyBzdWJzeXN0ZW1z
IGFuZCB1c2VzCisgKiB0aGUgYWJicmV2aWF0aW9ucyBzdWJzeXMgYW5kIGNzcy4KKyAqLworc3Ry
dWN0IGNncm91cF9jdHJsIHsKKwkvKiBVc2VybGFuZCBuYW1lIG9mIHRoZSBjb250cm9sbGVyIChl
LmcuICdtZW1vcnknIG5vdCAnbWVtY2cnKSAqLworCWNvbnN0IGNoYXIgKmNvbnN0IGN0cmxfbmFt
ZTsKKwkvKiBMaXN0IG9mIGZpbGVzIGJlbG9uZ2luZyB0byB0aGlzIGNvbnRyb2xsZXIgKi8KKwlj
b25zdCBzdHJ1Y3QgY2dyb3VwX2ZpbGUgKmNvbnN0IGZpbGVzOworCS8qIE91ciBpbmRleCBmb3Ig
dGhlIGNvbnRyb2xsZXIgKi8KKwljb25zdCBlbnVtIGNncm91cF9jdHJsX2luZHggY3RybF9pbmR4
OworCisJLyogUnVudGltZTsgaGllcmFyY2h5IHRoZSBjb250cm9sbGVyIGlzIGF0dGFjaGVkIHRv
ICovCisgICAgICAgIHN0cnVjdCBjZ3JvdXBfcm9vdCAqY3RybF9yb290OworCS8qIFJ1bnRpbWU7
IHdoZXRoZXIgd2UgcmVxdWlyZWQgdGhlIGNvbnRyb2xsZXIgKi8KKwlpbnQgd2VfcmVxdWlyZV9p
dDoxOworfTsKKworc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgeworCWNoYXIgZ3JvdXBfbmFtZVtO
QU1FX01BWCArIDFdOworCS8qIE1hcHMgY29udHJvbGxlciBJRCB0byB0aGUgdHJlZSB3aGljaCBj
b250YWlucyBpdC4gVGhlIFYyCisJICogdHJlZSBpcyBhdCB6ZXJvIGV2ZW4gaWYgaXQgY29udGFp
bnMgbm8gY29udHJvbGxlcnMuCisJICovCisJc3RydWN0IGNncm91cF9kaXIgKmRpcnNfYnlfY3Ry
bFtST09UU19NQVhdOworCS8qIE5VTEwgdGVybWluYXRlZCBsaXN0IG9mIHRyZWVzICovCisJc3Ry
dWN0IGNncm91cF9kaXIgKmRpcnNbUk9PVFNfTUFYICsgMV07Cit9OworCisvKiBBbHdheXMgdXNl
IGZpcnN0IGl0ZW0gZm9yIHVuaWZpZWQgaGllcmFyY2h5ICovCitzdGF0aWMgc3RydWN0IGNncm91
cF9yb290IHJvb3RzW1JPT1RTX01BWCArIDFdOworCisvKiBMb29rdXAgdHJlZSBmb3IgaXRlbSBu
YW1lcy4gKi8KK3R5cGVkZWYgc3RydWN0IGNncm91cF9maWxlIGZpbGVzX3RbXTsKKworc3RhdGlj
IGNvbnN0IGZpbGVzX3QgY2dyb3VwX2N0cmxfZmlsZXMgPSB7CisJLyogcHJvY3MgZXhpc3RzIG9u
IFYxLCBob3dldmVyIGl0IHdhcyByZWFkLW9ubHkgdW50aWwga2VybmVsIHYzLjAuICovCisJeyAi
Y2dyb3VwLnByb2NzIiwgInRhc2tzIiwgMCB9LAorCXsgImNncm91cC5zdWJ0cmVlX2NvbnRyb2wi
LCBOVUxMLCAwIH0sCisJeyAiY2dyb3VwLmNsb25lX2NoaWxkcmVuIiwgImNsb25lX2NoaWxkcmVu
IiwgMCB9LAorCXsgfQorfTsKKworc3RhdGljIGNvbnN0IGZpbGVzX3QgbWVtb3J5X2N0cmxfZmls
ZXMgPSB7CisJeyAibWVtb3J5LmN1cnJlbnQiLCAibWVtb3J5LnVzYWdlX2luX2J5dGVzIiwgQ1RS
TF9NRU1PUlkgfSwKKwl7ICJtZW1vcnkubWF4IiwgIm1lbW9yeS5saW1pdF9pbl9ieXRlcyIsIENU
UkxfTUVNT1JZIH0sCisJeyAibWVtb3J5LnN3YXBwaW5lc3MiLCAibWVtb3J5LnN3YXBwaW5lc3Mi
LCBDVFJMX01FTU9SWSB9LAorCXsgIm1lbW9yeS5zd2FwLmN1cnJlbnQiLCAibWVtb3J5Lm1lbXN3
LnVzYWdlX2luX2J5dGVzIiwgQ1RSTF9NRU1PUlkgfSwKKwl7ICJtZW1vcnkuc3dhcC5tYXgiLCAi
bWVtb3J5Lm1lbXN3LmxpbWl0X2luX2J5dGVzIiwgQ1RSTF9NRU1PUlkgfSwKKwl7ICJtZW1vcnku
a21lbS51c2FnZV9pbl9ieXRlcyIsICJtZW1vcnkua21lbS51c2FnZV9pbl9ieXRlcyIsIENUUkxf
TUVNT1JZIH0sCisJeyAibWVtb3J5LmttZW0ubGltaXRfaW5fYnl0ZXMiLCAibWVtb3J5LmttZW0u
dXNhZ2VfaW5fYnl0ZXMiLCBDVFJMX01FTU9SWSB9LAorCXsgfQorfTsKKworc3RhdGljIGNvbnN0
IGZpbGVzX3QgY3B1c2V0X2N0cmxfZmlsZXMgPSB7CisJeyAiY3B1c2V0LmNwdXMiLCAiY3B1c2V0
LmNwdXMiLCBDVFJMX0NQVVNFVCB9LAorCXsgImNwdXNldC5tZW1zIiwgImNwdXNldC5tZW1zIiwg
Q1RSTF9DUFVTRVQgfSwKKwl7ICJjcHVzZXQubWVtb3J5X21pZ3JhdGUiLCAiY3B1c2V0Lm1lbW9y
eV9taWdyYXRlIiwgQ1RSTF9DUFVTRVQgfSwKKwl7IH0KK307CisKK3N0YXRpYyBzdHJ1Y3QgY2dy
b3VwX2N0cmwgY29udHJvbGxlcnNbXSA9IHsKKwlbMF0gPSB7ICJjZ3JvdXAiLCBjZ3JvdXBfY3Ry
bF9maWxlcywgMCwgTlVMTCwgMCB9LAorCVtDVFJMX01FTU9SWV0gPSB7CisJCSJtZW1vcnkiLCBt
ZW1vcnlfY3RybF9maWxlcywgQ1RSTF9NRU1PUlksIE5VTEwsIDAKKwl9LAorCVtDVFJMX0NQVVNF
VF0gPSB7CisJCSJjcHVzZXQiLCBjcHVzZXRfY3RybF9maWxlcywgQ1RSTF9DUFVTRVQsIE5VTEws
IDAKKwl9LAorCXsgfQorfTsKKworc3RhdGljIGNvbnN0IHN0cnVjdCB0c3RfY2dyb3VwX29wdHMg
ZGVmYXVsdF9vcHRzID0geyAwIH07CisKKy8qIFdlIHNob3VsZCBwcm9iYWJseSBhbGxvdyB0aGVz
ZSB0byBiZSBzZXQgaW4gZW52aXJvbm1lbnQKKyAqIHZhcmlhYmxlcyAqLworc3RhdGljIGNvbnN0
IGNoYXIgKmx0cF9jZ3JvdXBfZGlyID0gImx0cCI7CitzdGF0aWMgY29uc3QgY2hhciAqbHRwX2Nn
cm91cF9kcmFpbl9kaXIgPSAiZHJhaW4iOworc3RhdGljIGNoYXIgdGVzdF9jZ3JvdXBfZGlyW05B
TUVfTUFYICsgMV07CitzdGF0aWMgY29uc3QgY2hhciAqbHRwX21vdW50X3ByZWZpeCA9ICIvdG1w
L2Nncm91cF8iOworc3RhdGljIGNvbnN0IGNoYXIgKmx0cF92Ml9tb3VudCA9ICJ1bmlmaWVkIjsK
KworI2RlZmluZSBmaXJzdF9yb290CQkJCVwKKwkocm9vdHNbMF0udmVyID8gcm9vdHMgOiByb290
cyArIDEpCisjZGVmaW5lIGZvcl9lYWNoX3Jvb3QocikJCQlcCisJZm9yICgocikgPSBmaXJzdF9y
b290OyAociktPnZlcjsgKHIpKyspCisjZGVmaW5lIGZvcl9lYWNoX3YxX3Jvb3QocikJCQlcCisJ
Zm9yICgocikgPSByb290cyArIDE7IChyKS0+dmVyOyAocikrKykKKyNkZWZpbmUgZm9yX2VhY2hf
Y3RybChjdHJsKQkJCVwKKwlmb3IgKChjdHJsKSA9IGNvbnRyb2xsZXJzICsgMTsgKGN0cmwpLT5j
dHJsX25hbWU7IChjdHJsKSsrKQorCisvKiBJbiBhbGwgY2FzZXMgZXhjZXB0IG9uZSwgdGhpcyBv
bmx5IGxvb3BzIG9uY2UuCisgKgorICogSWYgKGN0cmwpID09IDAgYW5kIG11bHRpcGxlIFYxIChh
bmQgYSBWMikgaGllcmFyY2hpZXMgYXJlIG1vdW50ZWQsCisgKiB0aGVuIHdlIG5lZWQgdG8gbG9v
cCBvdmVyIG11bHRpcGxlIGRpcmVjdG9yaWVzLiBGb3IgZXhhbXBsZSBpZiB3ZQorICogbmVlZCB0
byB3cml0ZSB0byAidGFza3MiLyJjZ3JvdXAucHJvY3MiIHdoaWNoIGV4aXN0cyBmb3IgZWFjaAor
ICogaGllcmFyY2h5LgorICovCisjZGVmaW5lIGZvcl9lYWNoX2RpcihjZywgY3RybCwgdCkJCQkJ
CVwKKwlmb3IgKCh0KSA9IChjdHJsKSA/IChjZyktPmRpcnNfYnlfY3RybCArIChjdHJsKSA6IChj
ZyktPmRpcnM7CVwKKwkgICAgICoodCk7CQkJCQkJCVwKKwkgICAgICh0KSA9IChjdHJsKSA/IChj
ZyktPmRpcnMgKyBST09UU19NQVggOiAodCkgKyAxKQorCitfX2F0dHJpYnV0ZV9fICgobm9ubnVs
bCkpCitzdGF0aWMgaW50IGhhc19jdHJsKGNvbnN0IHVpbnQzMl90IGN0cmxfZmllbGQsCisJCSAg
ICBjb25zdCBzdHJ1Y3QgY2dyb3VwX2N0cmwgKmNvbnN0IGN0cmwpCiB7Ci0JY2hhciBsaW5lW1BB
VEhfTUFYXTsKLQlGSUxFICpmaWxlOwotCWludCBjZ19jaGVjayA9IDA7CisJcmV0dXJuICEhKGN0
cmxfZmllbGQgJiAoMSA8PCBjdHJsLT5jdHJsX2luZHgpKTsKK30KIAotCWZpbGUgPSBTQUZFX0ZP
UEVOKCIvcHJvYy9maWxlc3lzdGVtcyIsICJyIik7Ci0Jd2hpbGUgKGZnZXRzKGxpbmUsIHNpemVv
ZihsaW5lKSwgZmlsZSkpIHsKLQkJaWYgKHN0cnN0cihsaW5lLCBjZ3JvdXApICE9IE5VTEwpIHsK
LQkJCWNnX2NoZWNrID0gMTsKLQkJCWJyZWFrOwotCQl9CitfX2F0dHJpYnV0ZV9fICgobm9ubnVs
bCkpCitzdGF0aWMgdm9pZCBhZGRfY3RybCh1aW50MzJfdCAqY29uc3QgY3RybF9maWVsZCwKKwkJ
ICAgICBjb25zdCBzdHJ1Y3QgY2dyb3VwX2N0cmwgKmNvbnN0IGN0cmwpCit7CisJKmN0cmxfZmll
bGQgfD0gMSA8PCBjdHJsLT5jdHJsX2luZHg7Cit9CisKK19fYXR0cmlidXRlX18gKCh3YXJuX3Vu
dXNlZF9yZXN1bHQpKQorc3RydWN0IGNncm91cF9yb290ICp0c3RfY2dyb3VwX3Jvb3RfZ2V0KHZv
aWQpCit7CisJcmV0dXJuIHJvb3RzWzBdLnZlciA/IHJvb3RzIDogcm9vdHMgKyAxOworfQorCitz
dGF0aWMgaW50IGNncm91cF92Ml9tb3VudGVkKHZvaWQpCit7CisJcmV0dXJuICEhcm9vdHNbMF0u
dmVyOworfQorCitzdGF0aWMgaW50IGNncm91cF92MV9tb3VudGVkKHZvaWQpCit7CisJcmV0dXJu
ICEhcm9vdHNbMV0udmVyOworfQorCitzdGF0aWMgaW50IGNncm91cF9tb3VudGVkKHZvaWQpCit7
CisJcmV0dXJuIGNncm91cF92Ml9tb3VudGVkKCkgfHwgY2dyb3VwX3YxX21vdW50ZWQoKTsKK30K
KworX19hdHRyaWJ1dGVfXyAoKG5vbm51bGwsIHdhcm5fdW51c2VkX3Jlc3VsdCkpCitzdGF0aWMg
aW50IGNncm91cF9jdHJsX29uX3YyKGNvbnN0IHN0cnVjdCBjZ3JvdXBfY3RybCAqY29uc3QgY3Ry
bCkKK3sKKwlyZXR1cm4gY3RybC0+Y3RybF9yb290ICYmIGN0cmwtPmN0cmxfcm9vdC0+dmVyID09
IFRTVF9DR1JPVVBfVjI7Cit9CisKK19fYXR0cmlidXRlX18gKChub25udWxsKSkKK3N0YXRpYyB2
b2lkIGNncm91cF9kaXJfbWsoY29uc3Qgc3RydWN0IGNncm91cF9kaXIgKmNvbnN0IHBhcmVudCwK
KwkJCSAgY29uc3QgY2hhciAqY29uc3QgZGlyX25hbWUsCisJCQkgIHN0cnVjdCBjZ3JvdXBfZGly
ICpjb25zdCBuZXcpCit7CisJY29uc3QgY2hhciAqZHBhdGg7CisKKwluZXctPmRpcl9yb290ID0g
cGFyZW50LT5kaXJfcm9vdDsKKwluZXctPmRpcl9uYW1lID0gZGlyX25hbWU7CisJbmV3LT5kaXJf
cGFyZW50ID0gcGFyZW50OworCW5ldy0+Y3RybF9maWVsZCA9IHBhcmVudC0+Y3RybF9maWVsZDsK
KwluZXctPndlX2NyZWF0ZWRfaXQgPSAwOworCisJaWYgKCFta2RpcmF0KHBhcmVudC0+ZGlyX2Zk
LCBkaXJfbmFtZSwgMDc3NykpIHsKKwkJbmV3LT53ZV9jcmVhdGVkX2l0ID0gMTsKKwkJZ290byBv
cGVuZGlyOworCX0KKworCWlmIChlcnJubyA9PSBFRVhJU1QpCisJCWdvdG8gb3BlbmRpcjsKKwor
CWRwYXRoID0gdHN0X2RlY29kZV9mZChwYXJlbnQtPmRpcl9mZCk7CisKKwlpZiAoZXJybm8gPT0g
RUFDQ0VTKSB7CisJCXRzdF9icmsoVENPTkYgfCBURVJSTk8sCisJCQkiTGFjayBwZXJtaXNzaW9u
IHRvIG1ha2UgJyVzLyVzJzsgcHJlbWFrZSBpdCBvciBydW4gYXMgcm9vdCIsCisJCQlkcGF0aCwg
ZGlyX25hbWUpOworCX0gZWxzZSB7CisJCXRzdF9icmsoVEJST0sgfCBURVJSTk8sCisJCQkibWtk
aXJhdCglZDwlcz4sICclcycsIDA3NzcpIiwKKwkJCXBhcmVudC0+ZGlyX2ZkLCBkcGF0aCwgZGly
X25hbWUpOwogCX0KLQlTQUZFX0ZDTE9TRShmaWxlKTsKIAotCXJldHVybiBjZ19jaGVjazsKK29w
ZW5kaXI6CisJbmV3LT5kaXJfZmQgPSBTQUZFX09QRU5BVChwYXJlbnQtPmRpcl9mZCwgZGlyX25h
bWUsCisJCQkJICBPX1BBVEggfCBPX0RJUkVDVE9SWSk7CiB9CiAKLWVudW0gdHN0X2Nncm91cF92
ZXIgdHN0X2Nncm91cF92ZXJzaW9uKHZvaWQpCit2b2lkIHRzdF9jZ3JvdXBfcHJpbnRfY29uZmln
KHZvaWQpCiB7Ci0gICAgICAgIGVudW0gdHN0X2Nncm91cF92ZXIgY2dfdmVyOworCXN0cnVjdCBj
Z3JvdXBfcm9vdCAqcm9vdDsKKwljb25zdCBzdHJ1Y3QgY2dyb3VwX2N0cmwgKmN0cmw7CiAKLSAg
ICAgICAgaWYgKHRzdF9jZ3JvdXBfY2hlY2soImNncm91cDIiKSkgewotICAgICAgICAgICAgICAg
IGlmICghdHN0X2lzX21vdW50ZWQoImNncm91cDIiKSAmJiB0c3RfaXNfbW91bnRlZCgiY2dyb3Vw
IikpCi0gICAgICAgICAgICAgICAgICAgICAgICBjZ192ZXIgPSBUU1RfQ0dST1VQX1YxOwotICAg
ICAgICAgICAgICAgIGVsc2UKLSAgICAgICAgICAgICAgICAgICAgICAgIGNnX3ZlciA9IFRTVF9D
R1JPVVBfVjI7CisJdHN0X3JlcyhUSU5GTywgIkRldGVjdGVkIENvbnRyb2xsZXJzOiIpOwogCi0g
ICAgICAgICAgICAgICAgZ290byBvdXQ7Ci0gICAgICAgIH0KKwlmb3JfZWFjaF9jdHJsKGN0cmwp
IHsKKwkJcm9vdCA9IGN0cmwtPmN0cmxfcm9vdDsKIAotICAgICAgICBpZiAodHN0X2Nncm91cF9j
aGVjaygiY2dyb3VwIikpCi0gICAgICAgICAgICAgICAgY2dfdmVyID0gVFNUX0NHUk9VUF9WMTsK
KwkJaWYgKCFyb290KQorCQkJY29udGludWU7CiAKLSAgICAgICAgaWYgKCFjZ192ZXIpCi0gICAg
ICAgICAgICAgICAgdHN0X2JyayhUQ09ORiwgIkNncm91cCBpcyBub3QgY29uZmlndXJlZCIpOwor
CQl0c3RfcmVzKFRJTkZPLCAiXHQlLjEwcyAlcyBAICVzOiVzIiwKKwkJCWN0cmwtPmN0cmxfbmFt
ZSwKKwkJCXJvb3QtPm5vX2NwdXNldF9wcmVmaXggPyAiW25vcHJlZml4XSIgOiAiIiwKKwkJCXJv
b3QtPnZlciA9PSBUU1RfQ0dST1VQX1YxID8gIlYxIiA6ICJWMiIsCisJCQlyb290LT5tbnRfcGF0
aCk7CisJfQorfQorCitfX2F0dHJpYnV0ZV9fICgobm9ubnVsbCwgd2Fybl91bnVzZWRfcmVzdWx0
KSkKK3N0YXRpYyBzdHJ1Y3QgY2dyb3VwX2N0cmwgKmNncm91cF9maW5kX2N0cmwoY29uc3QgY2hh
ciAqY29uc3QgY3RybF9uYW1lKQoreworCXN0cnVjdCBjZ3JvdXBfY3RybCAqY3RybCA9IGNvbnRy
b2xsZXJzOwogCi1vdXQ6Ci0gICAgICAgIHJldHVybiBjZ192ZXI7CisJd2hpbGUgKGN0cmwtPmN0
cmxfbmFtZSAmJiBzdHJjbXAoY3RybF9uYW1lLCBjdHJsLT5jdHJsX25hbWUpKQorCQljdHJsKys7
CisKKwlpZiAoIWN0cmwtPmN0cmxfbmFtZSkKKwkJY3RybCA9IE5VTEw7CisKKwlyZXR1cm4gY3Ry
bDsKIH0KIAotc3RhdGljIHZvaWQgdHN0X2Nncm91cDFfbW91bnQoY29uc3QgY2hhciAqbmFtZSwg
Y29uc3QgY2hhciAqb3B0aW9uLAotCQkJY29uc3QgY2hhciAqbW50X3BhdGgsIGNvbnN0IGNoYXIg
Km5ld19wYXRoKQorLyogRGV0ZXJtaW5lIGlmIGEgbW91bnRlZCBjZ3JvdXAgaGllcmFyY2h5IGlz
IHVuaXF1ZSBhbmQgcmVjb3JkIGl0IGlmIHNvLgorICoKKyAqIEZvciBDR3JvdXBzIFYyIHRoaXMg
aXMgdmVyeSBzaW1wbGUgYXMgdGhlcmUgaXMgb25seSBvbmUKKyAqIGhpZXJhcmNoeS4gV2UganVz
dCByZWNvcmQgd2hpY2ggY29udHJvbGxlcnMgYXJlIGF2YWlsYWJsZSBhbmQgY2hlY2sKKyAqIGlm
IHRoaXMgbWF0Y2hlcyB3aGF0IHdlIHJlYWQgZnJvbSBhbnkgcHJldmlvdXMgbW91bnQgcG9pbnRz
LgorICoKKyAqIEZvciBWMSB0aGUgc2V0IG9mIGNvbnRyb2xsZXJzIFMgaXMgcGFydGl0aW9uZWQg
aW50byBzZXRzIHtQXzEsIFBfMiwKKyAqIC4uLiwgUF9ufSB3aXRoIG9uZSBvciBtb3JlIGNvbnRy
b2xsZXJzIGluIGVhY2ggcGFydGlvbi4gRWFjaAorICogcGFydGl0aW9uIFBfbiBjYW4gYmUgbW91
bnRlZCBtdWx0aXBsZSB0aW1lcywgYnV0IHRoZSBzYW1lCisgKiBjb250cm9sbGVyIGNhbiBub3Qg
YXBwZWFyIGluIG1vcmUgdGhhbiBvbmUgcGFydGl0aW9uLiBVc3VhbGx5IGVhY2gKKyAqIHBhcnRp
dGlvbiBjb250YWlucyBhIHNpbmdsZSBjb250cm9sbGVyLCBidXQsIGZvciBleGFtcGxlLCBjcHUg
YW5kCisgKiBjcHVhY2N0IGFyZSBvZnRlbiBtb3VudGVkIHRvZ2V0aGVyIGluIHRoZSBzYW1lIHBh
cnRpaW9uLgorICoKKyAqIEVhY2ggY29udHJvbGxlciBwYXJ0aXRpb24gaGFzIGl0cyBvd24gaGll
cmFyY2h5IChyb290KSB3aGljaCB3ZQorICogbXVzdCB0cmFjayBhbmQgdXBkYXRlIGluZGVwZW5k
ZW50bHkuCisgKi8KK19fYXR0cmlidXRlX18gKChub25udWxsKSkKK3N0YXRpYyB2b2lkIGNncm91
cF9yb290X3NjYW4oY29uc3QgY2hhciAqY29uc3QgbW50X3R5cGUsCisJCQkgICAgIGNvbnN0IGNo
YXIgKmNvbnN0IG1udF9kaXIsCisJCQkgICAgIGNoYXIgKmNvbnN0IG1udF9vcHRzKQogewotCWNo
YXIga25vYl9wYXRoW1BBVEhfTUFYXTsKLQlpZiAodHN0X2lzX21vdW50ZWQobW50X3BhdGgpKQot
CQlnb3RvIG91dDsKKwlzdHJ1Y3QgY2dyb3VwX3Jvb3QgKnJvb3QgPSByb290czsKKwljb25zdCBz
dHJ1Y3QgY2dyb3VwX2N0cmwgKmNvbnN0X2N0cmw7CisJc3RydWN0IGNncm91cF9jdHJsICpjdHJs
OworCXVpbnQzMl90IGN0cmxfZmllbGQgPSAwOworCWludCBub19wcmVmaXggPSAwOworCWNoYXIg
YnVmW0JVRlNJWl07CisJY2hhciAqdG9rOworCWNvbnN0IGludCBtbnRfZGZkID0gU0FGRV9PUEVO
KG1udF9kaXIsIE9fUEFUSCB8IE9fRElSRUNUT1JZKTsKKworCWlmICghc3RyY21wKG1udF90eXBl
LCAiY2dyb3VwIikpCisJCWdvdG8gdjE7CisKKwlTQUZFX0ZJTEVfUkVBREFUKG1udF9kZmQsICJj
Z3JvdXAuY29udHJvbGxlcnMiLCBidWYsIHNpemVvZihidWYpKTsKKworCWZvciAodG9rID0gc3Ry
dG9rKGJ1ZiwgIiAiKTsgdG9rOyB0b2sgPSBzdHJ0b2soTlVMTCwgIiAiKSkgeworCQlpZiAoKGNv
bnN0X2N0cmwgPSBjZ3JvdXBfZmluZF9jdHJsKHRvaykpKQorCQkJYWRkX2N0cmwoJmN0cmxfZmll
bGQsIGNvbnN0X2N0cmwpOworCX0KIAotCVNBRkVfTUtESVIobW50X3BhdGgsIDA3NzcpOwotCWlm
IChtb3VudChuYW1lLCBtbnRfcGF0aCwgImNncm91cCIsIDAsIG9wdGlvbikgPT0gLTEpIHsKLQkJ
aWYgKGVycm5vID09IEVOT0RFVikgewotCQkJaWYgKHJtZGlyKG1udF9wYXRoKSA9PSAtMSkKLQkJ
CQl0c3RfcmVzKFRXQVJOIHwgVEVSUk5PLCAicm1kaXIgJXMgZmFpbGVkIiwgbW50X3BhdGgpOwot
CQkJdHN0X2JyayhUQ09ORiwKLQkJCQkgIkNncm91cCB2MSBpcyBub3QgY29uZmlndXJlZCBpbiBr
ZXJuZWwiKTsKLQkJfQotCQl0c3RfYnJrKFRCUk9LIHwgVEVSUk5PLCAibW91bnQgJXMiLCBtbnRf
cGF0aCk7CisJaWYgKHJvb3QtPnZlciAmJiBjdHJsX2ZpZWxkID09IHJvb3QtPmN0cmxfZmllbGQp
CisJCWdvdG8gZGlzY2FyZDsKKworCWlmIChyb290LT5jdHJsX2ZpZWxkKQorCQl0c3RfYnJrKFRC
Uk9LLCAiQXZhaWxhYmxlIFYyIGNvbnRyb2xsZXJzIGFyZSBjaGFuZ2luZyBiZXR3ZWVuIHNjYW5z
PyIpOworCisJcm9vdC0+dmVyID0gVFNUX0NHUk9VUF9WMjsKKworCWdvdG8gYmFja3JlZjsKKwor
djE6CisJZm9yICh0b2sgPSBzdHJ0b2sobW50X29wdHMsICIsIik7IHRvazsgdG9rID0gc3RydG9r
KE5VTEwsICIsIikpIHsKKwkJaWYgKChjb25zdF9jdHJsID0gY2dyb3VwX2ZpbmRfY3RybCh0b2sp
KSkKKwkJCWFkZF9jdHJsKCZjdHJsX2ZpZWxkLCBjb25zdF9jdHJsKTsKKworCQlub19wcmVmaXgg
fD0gIXN0cmNtcCgibm9wcmVmaXgiLCB0b2spOwogCX0KIAotCS8qCi0JICogV2Ugc2hvdWxkIGFz
c2lnbiBvbmUgb3IgbW9yZSBtZW1vcnkgbm9kZXMgdG8gY3B1c2V0Lm1lbXMgYW5kCi0JICogY3B1
c2V0LmNwdXMsIG90aGVyd2lzZSwgZWNobyAkJCA+IHRhc2tzIGdpdmVzIOKAnEVOT1NQQzogbm8g
c3BhY2UKLQkgKiBsZWZ0IG9uIGRldmljZeKAnSB3aGVuIHRyeWluZyB0byB1c2UgY3B1c2V0Lgot
CSAqCi0JICogT3IsIHNldHRpbmcgY2dyb3VwLmNsb25lX2NoaWxkcmVuIHRvIDEgY2FuIGhlbHAg
aW4gYXV0b21hdGljYWxseQotCSAqIGluaGVyaXRpbmcgbWVtb3J5IGFuZCBub2RlIHNldHRpbmcg
ZnJvbSBwYXJlbnQgY2dyb3VwIHdoZW4gYQotCSAqIGNoaWxkIGNncm91cCBpcyBjcmVhdGVkLgot
CSAqLwotCWlmIChzdHJjbXAob3B0aW9uLCAiY3B1c2V0IikgPT0gMCkgewotCQlzcHJpbnRmKGtu
b2JfcGF0aCwgIiVzL2Nncm91cC5jbG9uZV9jaGlsZHJlbiIsIG1udF9wYXRoKTsKLQkJU0FGRV9G
SUxFX1NDQU5GKGtub2JfcGF0aCwgIiVkIiwgJmNsb25lX2NoaWxkcmVuKTsKLQkJU0FGRV9GSUxF
X1BSSU5URihrbm9iX3BhdGgsICIlZCIsIDEpOworCWlmICghY3RybF9maWVsZCkKKwkJZ290byBk
aXNjYXJkOworCisJZm9yX2VhY2hfdjFfcm9vdChyb290KSB7CisJCWlmICghKGN0cmxfZmllbGQg
JiByb290LT5jdHJsX2ZpZWxkKSkKKwkJCWNvbnRpbnVlOworCisJCWlmIChjdHJsX2ZpZWxkID09
IHJvb3QtPmN0cmxfZmllbGQpCisJCQlnb3RvIGRpc2NhcmQ7CisKKwkJdHN0X2JyayhUQlJPSywK
KwkJCSJUaGUgaW50ZXJzZWN0aW9uIG9mIHR3byBkaXN0aW5jdCBzZXRzIG9mIG1vdW50ZWQgY29u
dHJvbGxlcnMgc2hvdWxkIGJlIG51bGw/IgorCQkJIkNoZWNrICclcycgYW5kICclcyciLCByb290
LT5tbnRfcGF0aCwgbW50X2Rpcik7CisJfQorCisJaWYgKHJvb3QgPj0gcm9vdHMgKyBST09UU19N
QVgpIHsKKwkJdHN0X2JyayhUQlJPSywKKwkJCSJVbmlxdWUgY29udHJvbGxlciBtb3VudHMgaGF2
ZSBleGNlZWRlZCBvdXIgbGltaXQgJWQ/IiwKKwkJCVJPT1RTX01BWCk7CiAJfQotb3V0OgotCVNB
RkVfTUtESVIobmV3X3BhdGgsIDA3NzcpOwogCi0JdHN0X3JlcyhUSU5GTywgIkNncm91cCglcykg
djEgbW91bnQgYXQgJXMgc3VjY2VzcyIsIG9wdGlvbiwgbW50X3BhdGgpOworCXJvb3QtPnZlciA9
IFRTVF9DR1JPVVBfVjE7CisKK2JhY2tyZWY6CisJc3RyY3B5KHJvb3QtPm1udF9wYXRoLCBtbnRf
ZGlyKTsKKwlyb290LT5tbnRfZGlyLmRpcl9yb290ID0gcm9vdDsKKwlyb290LT5tbnRfZGlyLmRp
cl9uYW1lID0gcm9vdC0+bW50X3BhdGg7CisJcm9vdC0+bW50X2Rpci5kaXJfZmQgPSBtbnRfZGZk
OworCXJvb3QtPmN0cmxfZmllbGQgPSBjdHJsX2ZpZWxkOworCXJvb3QtPm5vX2NwdXNldF9wcmVm
aXggPSBub19wcmVmaXg7CisKKwlmb3JfZWFjaF9jdHJsKGN0cmwpIHsKKwkJaWYgKGhhc19jdHJs
KHJvb3QtPmN0cmxfZmllbGQsIGN0cmwpKQorCQkJY3RybC0+Y3RybF9yb290ID0gcm9vdDsKKwl9
CisKKwlyZXR1cm47CisKK2Rpc2NhcmQ6CisJY2xvc2UobW50X2RmZCk7CiB9CiAKLXN0YXRpYyB2
b2lkIHRzdF9jZ3JvdXAyX21vdW50KGNvbnN0IGNoYXIgKm1udF9wYXRoLCBjb25zdCBjaGFyICpu
ZXdfcGF0aCkKK3ZvaWQgdHN0X2Nncm91cF9zY2FuKHZvaWQpCiB7Ci0JaWYgKHRzdF9pc19tb3Vu
dGVkKG1udF9wYXRoKSkKLQkJZ290byBvdXQ7CisJc3RydWN0IG1udGVudCAqbW50OworCUZJTEUg
KmYgPSBzZXRtbnRlbnQoIi9wcm9jL3NlbGYvbW91bnRzIiwgInIiKTsKIAotCVNBRkVfTUtESVIo
bW50X3BhdGgsIDA3NzcpOwotCWlmIChtb3VudCgiY2dyb3VwMiIsIG1udF9wYXRoLCAiY2dyb3Vw
MiIsIDAsIE5VTEwpID09IC0xKSB7Ci0JCWlmIChlcnJubyA9PSBFTk9ERVYpIHsKLQkJCWlmIChy
bWRpcihtbnRfcGF0aCkgPT0gLTEpCi0JCQkJdHN0X3JlcyhUV0FSTiB8IFRFUlJOTywgInJtZGly
ICVzIGZhaWxlZCIsIG1udF9wYXRoKTsKLQkJCXRzdF9icmsoVENPTkYsCi0JCQkJICJDZ3JvdXAg
djIgaXMgbm90IGNvbmZpZ3VyZWQgaW4ga2VybmVsIik7Ci0JCX0KLQkJdHN0X2JyayhUQlJPSyB8
IFRFUlJOTywgIm1vdW50ICVzIiwgbW50X3BhdGgpOworCWlmICghZikgeworCQl0c3RfYnJrKFRC
Uk9LIHwgVEVSUk5PLCAiQ2FuJ3Qgb3BlbiAvcHJvYy9zZWxmL21vdW50cyIpOworCQlyZXR1cm47
CiAJfQogCi1vdXQ6Ci0JU0FGRV9NS0RJUihuZXdfcGF0aCwgMDc3Nyk7CisJbW50ID0gZ2V0bW50
ZW50KGYpOworCWlmICghbW50KSB7CisJCXRzdF9icmsoVEJST0sgfCBURVJSTk8sICJDYW4ndCBy
ZWFkIG1vdW50cyBvciBubyBtb3VudHM/Iik7CisJCXJldHVybjsKKwl9CiAKLQl0c3RfcmVzKFRJ
TkZPLCAiQ2dyb3VwIHYyIG1vdW50IGF0ICVzIHN1Y2Nlc3MiLCBtbnRfcGF0aCk7CisJZG8gewor
ICAgICAgICAgICAgICAgIGlmIChzdHJuY21wKG1udC0+bW50X3R5cGUsICJjZ3JvdXAiLCA2KSkK
KwkJCWNvbnRpbnVlOworCisJCWNncm91cF9yb290X3NjYW4obW50LT5tbnRfdHlwZSwgbW50LT5t
bnRfZGlyLCBtbnQtPm1udF9vcHRzKTsKKwl9IHdoaWxlICgobW50ID0gZ2V0bW50ZW50KGYpKSk7
CiB9CiAKLXN0YXRpYyB2b2lkIHRzdF9jZ3JvdXBOX3Vtb3VudChjb25zdCBjaGFyICptbnRfcGF0
aCwgY29uc3QgY2hhciAqbmV3X3BhdGgpCitzdGF0aWMgdm9pZCBjZ3JvdXBfbW91bnRfdjIodm9p
ZCkKIHsKLQlGSUxFICpmcDsKLQlpbnQgZmQ7Ci0JY2hhciBzX25ld1tCVUZTSVpdLCBzW0JVRlNJ
Wl0sIHZhbHVlW0JVRlNJWl07Ci0JY2hhciBrbm9iX3BhdGhbUEFUSF9NQVhdOworCWNoYXIgbW50
X3BhdGhbUEFUSF9NQVhdOwogCi0JaWYgKCF0c3RfaXNfbW91bnRlZChtbnRfcGF0aCkpCisJc3By
aW50ZihtbnRfcGF0aCwgIiVzJXMiLCBsdHBfbW91bnRfcHJlZml4LCBsdHBfdjJfbW91bnQpOwor
CisJaWYgKCFta2RpcihtbnRfcGF0aCwgMDc3NykpIHsKKwkJcm9vdHNbMF0ubW50X2Rpci53ZV9j
cmVhdGVkX2l0ID0gMTsKKwkJZ290byBtb3VudDsKKwl9CisKKwlpZiAoZXJybm8gPT0gRUVYSVNU
KQorCQlnb3RvIG1vdW50OworCisJaWYgKGVycm5vID09IEVBQ0NFUykgeworCQl0c3RfcmVzKFRJ
TkZPIHwgVEVSUk5PLAorCQkJIkxhY2sgcGVybWlzc2lvbiB0byBtYWtlICVzLCBwcmVtYWtlIGl0
IG9yIHJ1biBhcyByb290IiwKKwkJCW1udF9wYXRoKTsKIAkJcmV0dXJuOworCX0KIAotCS8qIE1v
dmUgYWxsIHByb2Nlc3NlcyBpbiB0YXNrKHYyOiBjZ3JvdXAucHJvY3MpIHRvIGl0cyBwYXJlbnQg
bm9kZS4gKi8KLQlpZiAodHN0X2NnX3ZlciAmIFRTVF9DR1JPVVBfVjEpCi0JCXNwcmludGYocywg
IiVzL3Rhc2tzIiwgbW50X3BhdGgpOwotCWlmICh0c3RfY2dfdmVyICYgVFNUX0NHUk9VUF9WMikK
LQkJc3ByaW50ZihzLCAiJXMvY2dyb3VwLnByb2NzIiwgbW50X3BhdGgpOwotCi0JZmQgPSBvcGVu
KHMsIE9fV1JPTkxZKTsKLQlpZiAoZmQgPT0gLTEpCi0JCXRzdF9yZXMoVFdBUk4gfCBURVJSTk8s
ICJvcGVuICVzIiwgcyk7Ci0KLQlpZiAodHN0X2NnX3ZlciAmIFRTVF9DR1JPVVBfVjEpCi0JCXNu
cHJpbnRmKHNfbmV3LCBCVUZTSVosICIlcy90YXNrcyIsIG5ld19wYXRoKTsKLQlpZiAodHN0X2Nn
X3ZlciAmIFRTVF9DR1JPVVBfVjIpCi0JCXNucHJpbnRmKHNfbmV3LCBCVUZTSVosICIlcy9jZ3Jv
dXAucHJvY3MiLCBuZXdfcGF0aCk7Ci0KLQlmcCA9IGZvcGVuKHNfbmV3LCAiciIpOwotCWlmIChm
cCA9PSBOVUxMKQotCQl0c3RfcmVzKFRXQVJOIHwgVEVSUk5PLCAiZm9wZW4gJXMiLCBzX25ldyk7
Ci0JaWYgKChmZCAhPSAtMSkgJiYgKGZwICE9IE5VTEwpKSB7Ci0JCXdoaWxlIChmZ2V0cyh2YWx1
ZSwgQlVGU0laLCBmcCkgIT0gTlVMTCkKLQkJCWlmICh3cml0ZShmZCwgdmFsdWUsIHN0cmxlbih2
YWx1ZSkgLSAxKQotCQkJICAgICE9IChzc2l6ZV90KXN0cmxlbih2YWx1ZSkgLSAxKQotCQkJCXRz
dF9yZXMoVFdBUk4gfCBURVJSTk8sICJ3cml0ZSAlcyIsIHMpOwotCX0KLQlpZiAodHN0X2NnX3Zl
ciAmIFRTVF9DR1JPVVBfVjEpIHsKLQkJc3ByaW50Zihrbm9iX3BhdGgsICIlcy9jcHVzZXQuY3B1
cyIsIG1udF9wYXRoKTsKLQkJaWYgKCFhY2Nlc3Moa25vYl9wYXRoLCBGX09LKSkgewotCQkJc3By
aW50Zihrbm9iX3BhdGgsICIlcy9jZ3JvdXAuY2xvbmVfY2hpbGRyZW4iLCBtbnRfcGF0aCk7Ci0J
CQlTQUZFX0ZJTEVfUFJJTlRGKGtub2JfcGF0aCwgIiVkIiwgY2xvbmVfY2hpbGRyZW4pOwotCQl9
CisJdHN0X2JyayhUQlJPSyB8IFRFUlJOTywgIm1rZGlyKCVzLCAwNzc3KSIsIG1udF9wYXRoKTsK
KwlyZXR1cm47CisKK21vdW50OgorCWlmICghbW91bnQoImNncm91cDIiLCBtbnRfcGF0aCwgImNn
cm91cDIiLCAwLCBOVUxMKSkgeworCQl0c3RfcmVzKFRJTkZPLCAiTW91bnRlZCBWMiBDR3JvdXBz
IG9uICVzIiwgbW50X3BhdGgpOworCQl0c3RfY2dyb3VwX3NjYW4oKTsKKwkJcm9vdHNbMF0ud2Vf
bW91bnRlZF9pdCA9IDE7CisJCXJldHVybjsKIAl9Ci0JaWYgKGZkICE9IC0xKQotCQljbG9zZShm
ZCk7Ci0JaWYgKGZwICE9IE5VTEwpCi0JCWZjbG9zZShmcCk7Ci0JaWYgKHJtZGlyKG5ld19wYXRo
KSA9PSAtMSkKLQkJdHN0X3JlcyhUV0FSTiB8IFRFUlJOTywgInJtZGlyICVzIiwgbmV3X3BhdGgp
OwotCWlmICh1bW91bnQobW50X3BhdGgpID09IC0xKQotCQl0c3RfcmVzKFRXQVJOIHwgVEVSUk5P
LCAidW1vdW50ICVzIiwgbW50X3BhdGgpOwotCWlmIChybWRpcihtbnRfcGF0aCkgPT0gLTEpCi0J
CXRzdF9yZXMoVFdBUk4gfCBURVJSTk8sICJybWRpciAlcyIsIG1udF9wYXRoKTsKLQotCWlmICh0
c3RfY2dfdmVyICYgVFNUX0NHUk9VUF9WMSkKLQkJdHN0X3JlcyhUSU5GTywgIkNncm91cCB2MSB1
bm1vdW50IHN1Y2Nlc3MiKTsKLQlpZiAodHN0X2NnX3ZlciAmIFRTVF9DR1JPVVBfVjIpCi0JCXRz
dF9yZXMoVElORk8sICJDZ3JvdXAgdjIgdW5tb3VudCBzdWNjZXNzIik7Ci19Ci0KLXN0cnVjdCB0
c3RfY2dyb3VwX3BhdGggewotCWNoYXIgKm1udF9wYXRoOwotCWNoYXIgKm5ld19wYXRoOwotCXN0
cnVjdCB0c3RfY2dyb3VwX3BhdGggKm5leHQ7Ci19OwogCi1zdGF0aWMgc3RydWN0IHRzdF9jZ3Jv
dXBfcGF0aCAqdHN0X2Nncm91cF9wYXRoczsKKwl0c3RfcmVzKFRJTkZPIHwgVEVSUk5PLCAiQ291
bGQgbm90IG1vdW50IFYyIENHcm91cHMgb24gJXMiLCBtbnRfcGF0aCk7CisKKwlpZiAocm9vdHNb
MF0ubW50X2Rpci53ZV9jcmVhdGVkX2l0KSB7CisJCXJvb3RzWzBdLm1udF9kaXIud2VfY3JlYXRl
ZF9pdCA9IDA7CisJCVNBRkVfUk1ESVIobW50X3BhdGgpOworCX0KK30KIAotc3RhdGljIHZvaWQg
dHN0X2Nncm91cF9zZXRfcGF0aChjb25zdCBjaGFyICpjZ3JvdXBfZGlyKQorX19hdHRyaWJ1dGVf
XyAoKG5vbm51bGwpKQorc3RhdGljIHZvaWQgY2dyb3VwX21vdW50X3YxKHN0cnVjdCBjZ3JvdXBf
Y3RybCAqY29uc3QgY3RybCkKIHsKLQljaGFyIGNncm91cF9uZXdfZGlyW1BBVEhfTUFYXTsKLQlz
dHJ1Y3QgdHN0X2Nncm91cF9wYXRoICp0c3RfY2dyb3VwX3BhdGgsICphOworCWNoYXIgbW50X3Bh
dGhbUEFUSF9NQVhdOworCWludCBtYWRlX2RpciA9IDA7CiAKLQlpZiAoIWNncm91cF9kaXIpCi0J
CXRzdF9icmsoVEJST0ssICJJbnZhbGlkIGNncm91cCBkaXIsIHBsZXNlIGNoZWNrIGNncm91cF9k
aXIiKTsKKwlzcHJpbnRmKG1udF9wYXRoLCAiJXMlcyIsIGx0cF9tb3VudF9wcmVmaXgsIGN0cmwt
PmN0cmxfbmFtZSk7CiAKLQlzcHJpbnRmKGNncm91cF9uZXdfZGlyLCAiJXMvbHRwXyVkIiwgY2dy
b3VwX2RpciwgcmFuZCgpKTsKKwlpZiAoIW1rZGlyKG1udF9wYXRoLCAwNzc3KSkgeworCQltYWRl
X2RpciA9IDE7CisJCWdvdG8gbW91bnQ7CisJfQogCi0JLyogVG8gc3RvcmUgY2dyb3VwIHBhdGgg
aW4gdGhlICdwYXRoJyBsaXN0ICovCi0JdHN0X2Nncm91cF9wYXRoID0gU0FGRV9NQUxMT0Moc2l6
ZW9mKHN0cnVjdCB0c3RfY2dyb3VwX3BhdGgpKTsKLQl0c3RfY2dyb3VwX3BhdGgtPm1udF9wYXRo
ID0gU0FGRV9NQUxMT0Moc3RybGVuKGNncm91cF9kaXIpICsgMSk7Ci0JdHN0X2Nncm91cF9wYXRo
LT5uZXdfcGF0aCA9IFNBRkVfTUFMTE9DKHN0cmxlbihjZ3JvdXBfbmV3X2RpcikgKyAxKTsKLQl0
c3RfY2dyb3VwX3BhdGgtPm5leHQgPSBOVUxMOworCWlmIChlcnJubyA9PSBFRVhJU1QpCisJCWdv
dG8gbW91bnQ7CiAKLQlpZiAoIXRzdF9jZ3JvdXBfcGF0aHMpIHsKLQkJdHN0X2Nncm91cF9wYXRo
cyA9IHRzdF9jZ3JvdXBfcGF0aDsKLQl9IGVsc2UgewotCQlhID0gdHN0X2Nncm91cF9wYXRoczsK
LQkJZG8gewotCQkJaWYgKCFhLT5uZXh0KSB7Ci0JCQkJYS0+bmV4dCA9IHRzdF9jZ3JvdXBfcGF0
aDsKLQkJCQlicmVhazsKLQkJCX0KLQkJCWEgPSBhLT5uZXh0OwotCQl9IHdoaWxlIChhKTsKKwlp
ZiAoZXJybm8gPT0gRUFDQ0VTKSB7CisJCXRzdF9yZXMoVElORk8gfCBURVJSTk8sCisJCQkiTGFj
ayBwZXJtaXNzaW9uIHRvIG1ha2UgJXMsIHByZW1ha2UgaXQgb3IgcnVuIGFzIHJvb3QiLAorCQkJ
bW50X3BhdGgpOworCQlyZXR1cm47CiAJfQogCi0Jc3ByaW50Zih0c3RfY2dyb3VwX3BhdGgtPm1u
dF9wYXRoLCAiJXMiLCBjZ3JvdXBfZGlyKTsKLQlzcHJpbnRmKHRzdF9jZ3JvdXBfcGF0aC0+bmV3
X3BhdGgsICIlcyIsIGNncm91cF9uZXdfZGlyKTsKKwl0c3RfYnJrKFRCUk9LIHwgVEVSUk5PLCAi
bWtkaXIoJXMsIDA3NzcpIiwgbW50X3BhdGgpOworCXJldHVybjsKKworbW91bnQ6CisJaWYgKG1v
dW50KGN0cmwtPmN0cmxfbmFtZSwgbW50X3BhdGgsICJjZ3JvdXAiLCAwLCBjdHJsLT5jdHJsX25h
bWUpKSB7CisJCXRzdF9yZXMoVElORk8gfCBURVJSTk8sCisJCQkiQ291bGQgbm90IG1vdW50IFYx
IENHcm91cCBvbiAlcyIsIG1udF9wYXRoKTsKKworCQlpZiAobWFkZV9kaXIpCisJCQlTQUZFX1JN
RElSKG1udF9wYXRoKTsKKwkJcmV0dXJuOworCX0KKworCXRzdF9yZXMoVElORk8sICJNb3VudGVk
IFYxICVzIENHcm91cCBvbiAlcyIsIGN0cmwtPmN0cmxfbmFtZSwgbW50X3BhdGgpOworCXRzdF9j
Z3JvdXBfc2NhbigpOworCWlmICghY3RybC0+Y3RybF9yb290KQorCQlyZXR1cm47CisKKyAgICAg
ICAgY3RybC0+Y3RybF9yb290LT53ZV9tb3VudGVkX2l0ID0gMTsKKwljdHJsLT5jdHJsX3Jvb3Qt
Pm1udF9kaXIud2VfY3JlYXRlZF9pdCA9IG1hZGVfZGlyOworCisJaWYgKGN0cmwtPmN0cmxfaW5k
eCA9PSBDVFJMX01FTU9SWSkgeworCQlTQUZFX0ZJTEVfUFJJTlRGQVQoY3RybC0+Y3RybF9yb290
LT5tbnRfZGlyLmRpcl9mZCwKKwkJCQkgICAibWVtb3J5LnVzZV9oaWVyYXJjaHkiLCAiJWQiLCAx
KTsKKwl9Cit9CisKK19fYXR0cmlidXRlX18gKChub25udWxsKSkKK3N0YXRpYyB2b2lkIGNncm91
cF9jb3B5X2NwdXNldChjb25zdCBzdHJ1Y3QgY2dyb3VwX3Jvb3QgKmNvbnN0IHJvb3QpCit7CisJ
Y2hhciBrbm9iX3ZhbFtCVUZTSVpdOworCWludCBpOworCWNvbnN0IGNoYXIgKmNvbnN0IG4wW10g
PSB7Im1lbXMiLCAiY3B1cyJ9OworCWNvbnN0IGNoYXIgKmNvbnN0IG4xW10gPSB7ImNwdXNldC5t
ZW1zIiwgImNwdXNldC5jcHVzIn07CisJY29uc3QgY2hhciAqY29uc3QgKmNvbnN0IGZuYW1lID0g
cm9vdC0+bm9fY3B1c2V0X3ByZWZpeCA/IG4wIDogbjE7CisKKwlmb3IgKGkgPSAwOyBpIDwgMjsg
aSsrKSB7CisJCVNBRkVfRklMRV9SRUFEQVQocm9vdC0+bW50X2Rpci5kaXJfZmQsCisJCQkJIGZu
YW1lW2ldLCBrbm9iX3ZhbCwgc2l6ZW9mKGtub2JfdmFsKSk7CisJCVNBRkVfRklMRV9QUklOVEZB
VChyb290LT5sdHBfZGlyLmRpcl9mZCwKKwkJCQkgICBmbmFtZVtpXSwgIiVzIiwga25vYl92YWwp
OworCX0KIH0KIAotc3RhdGljIGNoYXIgKnRzdF9jZ3JvdXBfZ2V0X3BhdGgoY29uc3QgY2hhciAq
Y2dyb3VwX2RpcikKKy8qIEVuc3VyZSB0aGUgc3BlY2lmaWVkIGNvbnRyb2xsZXIgaXMgYXZhaWxh
YmxlLgorICoKKyAqIEZpcnN0IHdlIGNoZWNrIGlmIHRoZSBzcGVjaWZpZWQgY29udHJvbGxlciBo
YXMgYSBrbm93biBtb3VudCBwb2ludCwKKyAqIGlmIG5vdCB0aGVuIHdlIHNjYW4gdGhlIHN5c3Rl
bS4gSWYgd2UgZmluZCBpdCB0aGVuIHdlIGdvdG8gZW5zdXJpbmcKKyAqIHRoZSBMVFAgZ3JvdXAg
ZXhpc3RzIGluIHRoZSBoaWVyYXJjaHkgdGhlIGNvbnRyb2xsZXIgaXMgdXNpbmcuCisgKgorICog
SWYgd2UgY2FuJ3QgZmluZCB0aGUgY29udHJvbGxlciwgdGhlbiB3ZSB0cnkgdG8gY3JlYXRlIGl0
LiBGaXJzdCB3ZQorICogY2hlY2sgaWYgdGhlIFYyIGhpZXJhcmNoeS90cmVlIGlzIG1vdW50ZWQu
IElmIGl0IGlzbid0IHRoZW4gd2UgdHJ5CisgKiBtb3VudGluZyBpdCBhbmQgbG9vayBmb3IgdGhl
IGNvbnRyb2xsZXIuIElmIGl0IGlzIGFscmVhZHkgbW91bnRlZAorICogdGhlbiB3ZSBrbm93IHRo
ZSBjb250cm9sbGVyIGlzIG5vdCBhdmFpbGFibGUgb24gVjIgb24gdGhpcyBzeXN0ZW0uCisgKgor
ICogSWYgd2UgY2FuJ3QgbW91bnQgVjIgb3IgdGhlIGNvbnRyb2xsZXIgaXMgbm90IG9uIFYyLCB0
aGVuIHdlIHRyeQorICogbW91bnRpbmcgaXQgb24gaXRzIG93biBWMSB0cmVlLgorICoKKyAqIE9u
Y2Ugd2UgaGF2ZSBtb3VudGVkIHRoZSBjb250cm9sbGVyIHNvbWVob3csIHdlIGNyZWF0ZSBhIGhp
ZXJhcmNoeQorICogb2YgY2dyb3Vwcy4gSWYgd2UgYXJlIG9uIFYyIHdlIGZpcnN0IG5lZWQgdG8g
ZW5hYmxlIHRoZSBjb250cm9sbGVyCisgKiBmb3IgYWxsIGNoaWxkcmVuIG9mIHJvb3QuIFRoZW4g
d2UgY3JlYXRlIGhpZXJhcmNoeSBkZXNjcmliZWQgaW4KKyAqIHRzdF9jZ3JvdXAuaC4KKyAqCisg
KiBJZiB3ZSBhcmUgdXNpbmcgVjEgY3B1c2V0IHRoZW4gd2UgY29weSB0aGUgYXZhaWxhYmxlIG1l
bXMgYW5kIGNwdXMKKyAqIGZyb20gcm9vdCB0byB0aGUgbHRwIGdyb3VwIGFuZCBzZXQgY2xvbmVf
Y2hpbGRyZW4gb24gdGhlIGx0cCBncm91cAorICogdG8gZGlzdHJpYnV0ZSB0aGVzZSBzZXR0aW5n
cyB0byB0aGUgdGVzdCBjZ3JvdXBzLiBUaGlzIG1lYW5zIHRoZQorICogdGVzdCBhdXRob3IgZG9l
cyBub3QgaGF2ZSB0byBjb3B5IHRoZXNlIHNldHRpbmdzIGJlZm9yZSB1c2luZyB0aGUKKyAqIGNw
dXNldC4KKyAqCisgKi8KK3ZvaWQgdHN0X2Nncm91cF9yZXF1aXJlKGNvbnN0IGNoYXIgKmNvbnN0
IGN0cmxfbmFtZSwKKwkJCWNvbnN0IHN0cnVjdCB0c3RfY2dyb3VwX29wdHMgKm9wdGlvbnMpCiB7
Ci0Jc3RydWN0IHRzdF9jZ3JvdXBfcGF0aCAqYTsKKwljb25zdCBjaGFyICpjb25zdCBjZ3NjID0g
ImNncm91cC5zdWJ0cmVlX2NvbnRyb2wiOworCXN0cnVjdCBjZ3JvdXBfY3RybCAqY29uc3QgY3Ry
bCA9IGNncm91cF9maW5kX2N0cmwoY3RybF9uYW1lKTsKKwlzdHJ1Y3QgY2dyb3VwX3Jvb3QgKnJv
b3Q7CiAKLQlpZiAoIXRzdF9jZ3JvdXBfcGF0aHMpCi0JCXJldHVybiBOVUxMOworCWlmICghb3B0
aW9ucykKKwkJb3B0aW9ucyA9ICZkZWZhdWx0X29wdHM7CiAKLQlhID0gdHN0X2Nncm91cF9wYXRo
czsKKwlpZiAoY3RybC0+d2VfcmVxdWlyZV9pdCkgeworCQl0c3RfcmVzKFRXQVJOLCAiRHVwbGlj
YXRlIHRzdF9jZ3JvdXBfcmVxdWlyZSglcywgKSIsCisJCQljdHJsLT5jdHJsX25hbWUpOworCX0K
KwljdHJsLT53ZV9yZXF1aXJlX2l0ID0gMTsKKworCWlmIChjdHJsLT5jdHJsX3Jvb3QpCisJCWdv
dG8gbWtkaXJzOworCisJdHN0X2Nncm91cF9zY2FuKCk7CisKKwlpZiAoY3RybC0+Y3RybF9yb290
KQorCQlnb3RvIG1rZGlyczsKIAotCXdoaWxlIChzdHJjbXAoYS0+bW50X3BhdGgsIGNncm91cF9k
aXIpICE9IDApewotCQlpZiAoIWEtPm5leHQpIHsKLQkJCXRzdF9yZXMoVElORk8sICIlcyBpcyBu
b3QgZm91bmQiLCBjZ3JvdXBfZGlyKTsKLQkJCXJldHVybiBOVUxMOworCWlmICghY2dyb3VwX3Yy
X21vdW50ZWQoKSAmJiAhb3B0aW9ucy0+b25seV9tb3VudF92MSkKKwkJY2dyb3VwX21vdW50X3Yy
KCk7CisKKwlpZiAoY3RybC0+Y3RybF9yb290KQorCQlnb3RvIG1rZGlyczsKKworCWNncm91cF9t
b3VudF92MShjdHJsKTsKKworCWlmICghY3RybC0+Y3RybF9yb290KSB7CisJCXRzdF9icmsoVENP
TkYsCisJCQkiJyVzJyBjb250cm9sbGVyIHJlcXVpcmVkLCBidXQgbm90IGF2YWlsYWJsZSIsCisJ
CQljdHJsLT5jdHJsX25hbWUpOworCQlyZXR1cm47CisJfQorCitta2RpcnM6CisJcm9vdCA9IGN0
cmwtPmN0cmxfcm9vdDsKKwlhZGRfY3RybCgmcm9vdC0+bW50X2Rpci5jdHJsX2ZpZWxkLCBjdHJs
KTsKKworCWlmIChjZ3JvdXBfY3RybF9vbl92MihjdHJsKSkgeworCQlpZiAocm9vdC0+d2VfbW91
bnRlZF9pdCkgeworCQkJU0FGRV9GSUxFX1BSSU5URkFUKHJvb3QtPm1udF9kaXIuZGlyX2ZkLAor
CQkJCQkgICBjZ3NjLCAiKyVzIiwgY3RybC0+Y3RybF9uYW1lKTsKKwkJfSBlbHNlIHsKKwkJCXRz
dF9maWxlX3ByaW50ZmF0KHJvb3QtPm1udF9kaXIuZGlyX2ZkLAorCQkJCQkgIGNnc2MsICIrJXMi
LCBjdHJsLT5jdHJsX25hbWUpOwogCQl9Ci0JCWEgPSBhLT5uZXh0OwotCX07CisJfQorCisJaWYg
KCFyb290LT5sdHBfZGlyLmRpcl9mZCkKKwkJY2dyb3VwX2Rpcl9taygmcm9vdC0+bW50X2Rpciwg
bHRwX2Nncm91cF9kaXIsICZyb290LT5sdHBfZGlyKTsKKwllbHNlCisJCXJvb3QtPmx0cF9kaXIu
Y3RybF9maWVsZCB8PSByb290LT5tbnRfZGlyLmN0cmxfZmllbGQ7CiAKLQlyZXR1cm4gYS0+bmV3
X3BhdGg7CisJaWYgKGNncm91cF9jdHJsX29uX3YyKGN0cmwpKSB7CisJCVNBRkVfRklMRV9QUklO
VEZBVChyb290LT5sdHBfZGlyLmRpcl9mZCwKKwkJCQkgICBjZ3NjLCAiKyVzIiwgY3RybC0+Y3Ry
bF9uYW1lKTsKKwl9IGVsc2UgeworCQlTQUZFX0ZJTEVfUFJJTlRGQVQocm9vdC0+bHRwX2Rpci5k
aXJfZmQsCisJCQkJICAgImNncm91cC5jbG9uZV9jaGlsZHJlbiIsICIlZCIsIDEpOworCisJCWlm
IChjdHJsLT5jdHJsX2luZHggPT0gQ1RSTF9DUFVTRVQpCisJCQljZ3JvdXBfY29weV9jcHVzZXQo
cm9vdCk7CisJfQorCisJY2dyb3VwX2Rpcl9taygmcm9vdC0+bHRwX2RpciwgbHRwX2Nncm91cF9k
cmFpbl9kaXIsICZyb290LT5kcmFpbl9kaXIpOworCisJc3ByaW50Zih0ZXN0X2Nncm91cF9kaXIs
ICJ0ZXN0LSVkIiwgZ2V0cGlkKCkpOworCWNncm91cF9kaXJfbWsoJnJvb3QtPmx0cF9kaXIsIHRl
c3RfY2dyb3VwX2RpciwgJnJvb3QtPnRlc3RfZGlyKTsKIH0KIAotc3RhdGljIHZvaWQgdHN0X2Nn
cm91cF9kZWxfcGF0aChjb25zdCBjaGFyICpjZ3JvdXBfZGlyKQorc3RhdGljIHZvaWQgY2dyb3Vw
X2RyYWluKGNvbnN0IGVudW0gdHN0X2Nncm91cF92ZXIgdmVyLAorCQkJIGNvbnN0IGludCBzb3Vy
Y2VfZGZkLCBjb25zdCBpbnQgZGVzdF9kZmQpCiB7Ci0Jc3RydWN0IHRzdF9jZ3JvdXBfcGF0aCAq
YSwgKmI7CisJY2hhciBwaWRfbGlzdFtCVUZTSVpdOworCWNoYXIgKnRvazsKKwljb25zdCBjaGFy
ICpjb25zdCBmaWxlX25hbWUgPQorCQl2ZXIgPT0gVFNUX0NHUk9VUF9WMSA/ICJ0YXNrcyIgOiAi
Y2dyb3VwLnByb2NzIjsKKwlpbnQgZmQ7CisJc3NpemVfdCByZXQ7CiAKLQlpZiAoIXRzdF9jZ3Jv
dXBfcGF0aHMpCisJcmV0ID0gU0FGRV9GSUxFX1JFQURBVChzb3VyY2VfZGZkLCBmaWxlX25hbWUs
CisJCQkgICAgICAgcGlkX2xpc3QsIHNpemVvZihwaWRfbGlzdCkpOworCWlmIChyZXQgPCAwKQog
CQlyZXR1cm47CiAKLQlhID0gYiA9IHRzdF9jZ3JvdXBfcGF0aHM7CisJZmQgPSBTQUZFX09QRU5B
VChkZXN0X2RmZCwgZmlsZV9uYW1lLCBPX1dST05MWSk7CisJaWYgKGZkIDwgMCkKKwkJcmV0dXJu
OwogCi0Jd2hpbGUgKHN0cmNtcChiLT5tbnRfcGF0aCwgY2dyb3VwX2RpcikgIT0gMCkgewotCQlp
ZiAoIWItPm5leHQpIHsKLQkJCXRzdF9yZXMoVElORk8sICIlcyBpcyBub3QgZm91bmQiLCBjZ3Jv
dXBfZGlyKTsKLQkJCXJldHVybjsKLQkJfQotCQlhID0gYjsKLQkJYiA9IGItPm5leHQ7Ci0JfTsK
Kwlmb3IgKHRvayA9IHN0cnRvayhwaWRfbGlzdCwgIlxuIik7IHRvazsgdG9rID0gc3RydG9rKE5V
TEwsICJcbiIpKSB7CisJCXJldCA9IGRwcmludGYoZmQsICIlcyIsIHRvayk7CiAKLQlpZiAoYiA9
PSB0c3RfY2dyb3VwX3BhdGhzKQotCQl0c3RfY2dyb3VwX3BhdGhzID0gYi0+bmV4dDsKLQllbHNl
Ci0JCWEtPm5leHQgPSBiLT5uZXh0OworCQlpZiAocmV0IDwgKHNzaXplX3Qpc3RybGVuKHRvaykp
CisJCQl0c3RfYnJrKFRCUk9LIHwgVEVSUk5PLCAiRmFpbGVkIHRvIGRyYWluICVzIiwgdG9rKTsK
Kwl9CisJU0FGRV9DTE9TRShmZCk7Cit9CiAKLQlmcmVlKGItPm1udF9wYXRoKTsKLQlmcmVlKGIt
Pm5ld19wYXRoKTsKLQlmcmVlKGIpOworX19hdHRyaWJ1dGVfXyAoKG5vbm51bGwpKQorc3RhdGlj
IHZvaWQgY2xvc2VfcGF0aF9mZHMoc3RydWN0IGNncm91cF9yb290ICpjb25zdCByb290KQorewor
CWlmIChyb290LT50ZXN0X2Rpci5kaXJfZmQgPiAwKQorCQlTQUZFX0NMT1NFKHJvb3QtPnRlc3Rf
ZGlyLmRpcl9mZCk7CisJaWYgKHJvb3QtPmx0cF9kaXIuZGlyX2ZkID4gMCkKKwkJU0FGRV9DTE9T
RShyb290LT5sdHBfZGlyLmRpcl9mZCk7CisJaWYgKHJvb3QtPmRyYWluX2Rpci5kaXJfZmQgPiAw
KQorCQlTQUZFX0NMT1NFKHJvb3QtPmRyYWluX2Rpci5kaXJfZmQpOworCWlmIChyb290LT5tbnRf
ZGlyLmRpcl9mZCA+IDApCisJCVNBRkVfQ0xPU0Uocm9vdC0+bW50X2Rpci5kaXJfZmQpOwogfQog
Ci12b2lkIHRzdF9jZ3JvdXBfbW91bnQoZW51bSB0c3RfY2dyb3VwX2N0cmwgY3RybCwgY29uc3Qg
Y2hhciAqY2dyb3VwX2RpcikKKy8qIE1heWJlIHJlbW92ZSBDR3JvdXBzIHVzZWQgZHVyaW5nIHRl
c3RpbmcgYW5kIGNsZWFyIG91ciBkYXRhCisgKgorICogVGhpcyB3aWxsIG5ldmVyIHJlbW92ZSBD
R3JvdXBzIHdlIGRpZCBub3QgY3JlYXRlIHRvIGFsbG93IHRlc3RzIHRvCisgKiBiZSBydW4gaW4g
cGFyYWxsZWwuCisgKgorICogRWFjaCB0ZXN0IHByb2Nlc3MgaXMgZ2l2ZW4gaXRzIG93biB1bmlx
dWUgQ0dyb3VwLiBVbmxlc3Mgd2Ugd2FudCB0bworICogc3RyZXNzIHRlc3QgdGhlIENHcm91cCBz
eXN0ZW0uIFdlIHNob3VsZCBhdCBsZWFzdCByZW1vdmUgdGhlc2UKKyAqIHVuaXF1ZSBwZXIgdGVz
dCBDR3JvdXBzLgorICoKKyAqIFdlIHByb2JhYmx5IGFsc28gd2FudCB0byByZW1vdmUgdGhlIExU
UCBwYXJlbnQgQ0dyb3VwLCBhbHRob3VnaAorICogdGhpcyBtYXkgaGF2ZSBiZWVuIGNyZWF0ZWQg
YnkgdGhlIHN5c3RlbSBtYW5hZ2VyIG9yIGFub3RoZXIgdGVzdAorICogKHNlZSBub3RlcyBvbiBw
YXJhbGxlbCB0ZXN0aW5nKS4KKyAqCisgKiBPbiBzeXN0ZW1zIHdpdGggbm8gaW5pdGlhbCBDR3Jv
dXAgc2V0dXAgd2UgbWF5IHRyeSB0byBkZXN0cm95IHRoZQorICogQ0dyb3VwIHJvb3RzIHdlIG1v
dW50ZWQgc28gdGhhdCB0aGV5IGNhbiBiZSByZWNyZWF0ZWQgYnkgYW5vdGhlcgorICogdGVzdC4g
Tm90ZSB0aGF0IHN1Y2Nlc3NmdWxseSB1bm1vdW50aW5nIGEgQ0dyb3VwIHJvb3QgZG9lcyBub3QK
KyAqIG5lY2Vzc2FyaWx5IGluZGljYXRlIHRoYXQgaXQgd2FzIGRlc3Ryb3llZC4KKyAqCisgKiBU
aGUgbHRwL2RyYWluIENHcm91cCBpcyByZXF1aXJlZCBmb3IgY2xlYW5pbmcgdXAgdGVzdCBDR3Jv
dXBzIHdoZW4KKyAqIHdlIGNhbiBub3QgbW92ZSB0aGVtIHRvIHRoZSByb290IENHcm91cC4gQ0dy
b3VwcyBjYW4gb25seSBiZQorICogcmVtb3ZlZCB3aGVuIHRoZXkgaGF2ZSBubyBtZW1iZXJzIGFu
ZCBvbmx5IGxlYWYgb3Igcm9vdCBDR3JvdXBzIG1heQorICogaGF2ZSBwcm9jZXNzZXMgd2l0aGlu
IHRoZW0uIEFzIHRlc3QgcHJvY2Vzc2VzIGNyZWF0ZSBhbmQgZGVzdHJveQorICogdGhlaXIgb3du
IENHcm91cHMgdGhleSBtdXN0IG1vdmUgdGhlbXNlbHZlcyBlaXRoZXIgdG8gcm9vdCBvcgorICog
YW5vdGhlciBsZWFmIENHcm91cC4gU28gd2UgbW92ZSB0aGVtIHRvIGRyYWluIHdoaWxlIGRlc3Ry
b3lpbmcgdGhlCisgKiB1bmlxdWUgdGVzdCBDR3JvdXAuCisgKgorICogSWYgd2UgaGF2ZSBhY2Nl
c3MgdG8gcm9vdCBhbmQgY3JlYXRlZCB0aGUgTFRQIENHcm91cCB3ZSB0aGVuIG1vdmUKKyAqIHRo
ZSB0ZXN0IHByb2Nlc3MgdG8gcm9vdCBhbmQgZGVzdHJveSB0aGUgZHJhaW4gYW5kIExUUAorICog
Q0dyb3Vwcy4gT3RoZXJ3aXNlIHdlIGp1c3QgbGVhdmUgdGhlIHRlc3QgcHJvY2VzcyB0byBkaWUg
aW4gdGhlCisgKiBkcmFpbiwgbXVjaCBsaWtlIG1hbnkgYSB1bndhbnRlZCB0ZXJyYXBpbi4KKyAq
CisgKiBGaW5hbGx5IHdlIGNsZWFyIGFueSBkYXRhIHdlIGhhdmUgY29sbGVjdGVkIG9uIENHcm91
cHMuIFRoaXMgd2lsbAorICogaGFwcGVuIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBhbnl0aGluZyB3
YXMgcmVtb3ZlZC4KKyAqLwordm9pZCB0c3RfY2dyb3VwX2NsZWFudXAodm9pZCkKIHsKLQljaGFy
ICpjZ3JvdXBfbmV3X2RpcjsKLQljaGFyIGtub2JfcGF0aFtQQVRIX01BWF07CisJc3RydWN0IGNn
cm91cF9yb290ICpyb290OworCXN0cnVjdCBjZ3JvdXBfY3RybCAqY3RybDsKIAotCXRzdF9jZ192
ZXIgPSB0c3RfY2dyb3VwX3ZlcnNpb24oKTsKKwlpZiAoIWNncm91cF9tb3VudGVkKCkpCisJCWdv
dG8gY2xlYXJfZGF0YTsKIAotCXRzdF9jZ3JvdXBfc2V0X3BhdGgoY2dyb3VwX2Rpcik7Ci0JY2dy
b3VwX25ld19kaXIgPSB0c3RfY2dyb3VwX2dldF9wYXRoKGNncm91cF9kaXIpOworCWZvcl9lYWNo
X3Jvb3Qocm9vdCkgeworCQlpZiAoIXJvb3QtPnRlc3RfZGlyLmRpcl9uYW1lKQorCQkJY29udGlu
dWU7CiAKLQlpZiAodHN0X2NnX3ZlciAmIFRTVF9DR1JPVVBfVjEpIHsKLQkJc3dpdGNoKGN0cmwp
IHsKLQkJY2FzZSBUU1RfQ0dST1VQX01FTUNHOgotCQkJdHN0X2Nncm91cDFfbW91bnQoIm1lbWNn
IiwgIm1lbW9yeSIsIGNncm91cF9kaXIsIGNncm91cF9uZXdfZGlyKTsKLQkJYnJlYWs7Ci0JCWNh
c2UgVFNUX0NHUk9VUF9DUFVTRVQ6Ci0JCQl0c3RfY2dyb3VwMV9tb3VudCgiY3B1c2V0Y2ciLCAi
Y3B1c2V0IiwgY2dyb3VwX2RpciwgY2dyb3VwX25ld19kaXIpOwotCQlicmVhazsKLQkJZGVmYXVs
dDoKLQkJCXRzdF9icmsoVEJST0ssICJJbnZhbGlkIGNncm91cCBjb250cm9sbGVyOiAlZCIsIGN0
cmwpOwotCQl9CisJCWNncm91cF9kcmFpbihyb290LT52ZXIsCisJCQkgICAgIHJvb3QtPnRlc3Rf
ZGlyLmRpcl9mZCwgcm9vdC0+ZHJhaW5fZGlyLmRpcl9mZCk7CisJCVNBRkVfVU5MSU5LQVQocm9v
dC0+bHRwX2Rpci5kaXJfZmQsIHJvb3QtPnRlc3RfZGlyLmRpcl9uYW1lLAorCQkJICAgICAgQVRf
UkVNT1ZFRElSKTsKIAl9CiAKLQlpZiAodHN0X2NnX3ZlciAmIFRTVF9DR1JPVVBfVjIpIHsKLQkJ
dHN0X2Nncm91cDJfbW91bnQoY2dyb3VwX2RpciwgY2dyb3VwX25ld19kaXIpOworCWZvcl9lYWNo
X3Jvb3Qocm9vdCkgeworCQlpZiAoIXJvb3QtPmx0cF9kaXIud2VfY3JlYXRlZF9pdCkKKwkJCWNv
bnRpbnVlOwogCi0JCXN3aXRjaChjdHJsKSB7Ci0JCWNhc2UgVFNUX0NHUk9VUF9NRU1DRzoKLQkJ
CXNwcmludGYoa25vYl9wYXRoLCAiJXMvY2dyb3VwLnN1YnRyZWVfY29udHJvbCIsIGNncm91cF9k
aXIpOwotCQkJU0FGRV9GSUxFX1BSSU5URihrbm9iX3BhdGgsICIlcyIsICIrbWVtb3J5Iik7Ci0J
CWJyZWFrOwotCQljYXNlIFRTVF9DR1JPVVBfQ1BVU0VUOgotCQkJdHN0X2JyayhUQ09ORiwgIkNn
cm91cCB2MiBoYXNuJ3QgYWNoaWV2ZSBjcHVzZXQgc3Vic3lzdGVtIik7Ci0JCWJyZWFrOwotCQlk
ZWZhdWx0OgotCQkJdHN0X2JyayhUQlJPSywgIkludmFsaWQgY2dyb3VwIGNvbnRyb2xsZXI6ICVk
IiwgY3RybCk7CisJCWNncm91cF9kcmFpbihyb290LT52ZXIsCisJCQkgICAgIHJvb3QtPmRyYWlu
X2Rpci5kaXJfZmQsIHJvb3QtPm1udF9kaXIuZGlyX2ZkKTsKKworCQlpZiAocm9vdC0+ZHJhaW5f
ZGlyLmRpcl9uYW1lKSB7CisJCQlTQUZFX1VOTElOS0FUKHJvb3QtPmx0cF9kaXIuZGlyX2ZkLAor
CQkJCSAgICAgIHJvb3QtPmRyYWluX2Rpci5kaXJfbmFtZSwgQVRfUkVNT1ZFRElSKTsKIAkJfQor
CisJCWlmIChyb290LT5sdHBfZGlyLmRpcl9uYW1lKSB7CisJCQlTQUZFX1VOTElOS0FUKHJvb3Qt
Pm1udF9kaXIuZGlyX2ZkLAorCQkJCSAgICAgIHJvb3QtPmx0cF9kaXIuZGlyX25hbWUsIEFUX1JF
TU9WRURJUik7CisJCX0KKwl9CisKKwlmb3JfZWFjaF9jdHJsKGN0cmwpIHsKKwkJaWYgKCFjZ3Jv
dXBfY3RybF9vbl92MihjdHJsKSB8fCAhY3RybC0+Y3RybF9yb290LT53ZV9tb3VudGVkX2l0KQor
CQkJY29udGludWU7CisKKwkJU0FGRV9GSUxFX1BSSU5URkFUKGN0cmwtPmN0cmxfcm9vdC0+bW50
X2Rpci5kaXJfZmQsCisJCQkJICAgImNncm91cC5zdWJ0cmVlX2NvbnRyb2wiLAorCQkJCSAgICIt
JXMiLCBjdHJsLT5jdHJsX25hbWUpOworCX0KKworCWZvcl9lYWNoX3Jvb3Qocm9vdCkgeworCQlp
ZiAoIXJvb3QtPndlX21vdW50ZWRfaXQpCisJCQljb250aW51ZTsKKworCQkvKiBUaGlzIHByb2Jh
Ymx5IGRvZXMgbm90IHJlc3VsdCBpbiB0aGUgQ0dyb3VwIHJvb3QKKwkJICogYmVpbmcgZGVzdHJv
eWVkICovCisJCWlmICh1bW91bnQyKHJvb3QtPm1udF9wYXRoLCBNTlRfREVUQUNIKSkKKwkJCWNv
bnRpbnVlOworCisJCVNBRkVfUk1ESVIocm9vdC0+bW50X3BhdGgpOworCX0KKworY2xlYXJfZGF0
YToKKwlmb3JfZWFjaF9jdHJsKGN0cmwpIHsKKwkJY3RybC0+Y3RybF9yb290ID0gTlVMTDsKKwkJ
Y3RybC0+d2VfcmVxdWlyZV9pdCA9IDA7CiAJfQorCisJZm9yX2VhY2hfcm9vdChyb290KQorCQlj
bG9zZV9wYXRoX2Zkcyhyb290KTsKKworCW1lbXNldChyb290cywgMCwgc2l6ZW9mKHJvb3RzKSk7
CiB9CiAKLXZvaWQgdHN0X2Nncm91cF91bW91bnQoY29uc3QgY2hhciAqY2dyb3VwX2RpcikKK19f
YXR0cmlidXRlX18gKChub25udWxsICgxKSkpCitzdGF0aWMgdm9pZCBjZ3JvdXBfZ3JvdXBfaW5p
dChzdHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqY29uc3QgY2csCisJCQkgICAgICBjb25zdCBjaGFy
ICpjb25zdCBncm91cF9uYW1lKQogewotCWNoYXIgKmNncm91cF9uZXdfZGlyOworCW1lbXNldChj
ZywgMCwgc2l6ZW9mKCpjZykpOworCisJaWYgKCFncm91cF9uYW1lKQorCQlyZXR1cm47CisKKwlp
ZiAoc3RybGVuKGdyb3VwX25hbWUpID4gTkFNRV9NQVgpCisJCXRzdF9icmsoVEJST0ssICJHcm91
cCBuYW1lIGlzIHRvbyBsb25nIik7CiAKLQljZ3JvdXBfbmV3X2RpciA9IHRzdF9jZ3JvdXBfZ2V0
X3BhdGgoY2dyb3VwX2Rpcik7Ci0JdHN0X2Nncm91cE5fdW1vdW50KGNncm91cF9kaXIsIGNncm91
cF9uZXdfZGlyKTsKLQl0c3RfY2dyb3VwX2RlbF9wYXRoKGNncm91cF9kaXIpOworCXN0cmNweShj
Zy0+Z3JvdXBfbmFtZSwgZ3JvdXBfbmFtZSk7CiB9CiAKLXZvaWQgdHN0X2Nncm91cF9zZXRfa25v
Yihjb25zdCBjaGFyICpjZ3JvdXBfZGlyLCBjb25zdCBjaGFyICprbm9iLCBsb25nIHZhbHVlKQor
X19hdHRyaWJ1dGVfXyAoKG5vbm51bGwpKQorc3RhdGljIHZvaWQgY2dyb3VwX2dyb3VwX2FkZF9k
aXIoc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKmNvbnN0IGNnLAorCQkJCSBzdHJ1Y3QgY2dyb3Vw
X2RpciAqY29uc3QgZGlyKQogewotCWNoYXIgKmNncm91cF9uZXdfZGlyOwotCWNoYXIga25vYl9w
YXRoW1BBVEhfTUFYXTsKKwljb25zdCBzdHJ1Y3QgY2dyb3VwX2N0cmwgKmN0cmw7CisJaW50IGk7
CiAKLQljZ3JvdXBfbmV3X2RpciA9IHRzdF9jZ3JvdXBfZ2V0X3BhdGgoY2dyb3VwX2Rpcik7Ci0J
c3ByaW50Zihrbm9iX3BhdGgsICIlcy8lcyIsIGNncm91cF9uZXdfZGlyLCBrbm9iKTsKLQlTQUZF
X0ZJTEVfUFJJTlRGKGtub2JfcGF0aCwgIiVsZCIsIHZhbHVlKTsKKwlpZiAoZGlyLT5kaXJfcm9v
dC0+dmVyID09IFRTVF9DR1JPVVBfVjIpCisJCWNnLT5kaXJzX2J5X2N0cmxbMF0gPSBkaXI7CisK
Kwlmb3JfZWFjaF9jdHJsKGN0cmwpIHsKKwkJaWYgKGhhc19jdHJsKGRpci0+Y3RybF9maWVsZCwg
Y3RybCkpCisJCQljZy0+ZGlyc19ieV9jdHJsW2N0cmwtPmN0cmxfaW5keF0gPSBkaXI7CisJfQor
CisJZm9yIChpID0gMDsgY2ctPmRpcnNbaV07IGkrKyk7CisJY2ctPmRpcnNbaV0gPSBkaXI7CiB9
CiAKLXZvaWQgdHN0X2Nncm91cF9tb3ZlX2N1cnJlbnQoY29uc3QgY2hhciAqY2dyb3VwX2RpcikK
K3N0cnVjdCB0c3RfY2dyb3VwX2dyb3VwICoKK3RzdF9jZ3JvdXBfZ3JvdXBfbWsoY29uc3Qgc3Ry
dWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKmNvbnN0IHBhcmVudCwKKwkJICAgIGNvbnN0IGNoYXIgKmNv
bnN0IGdyb3VwX25hbWUpCiB7Ci0JaWYgKHRzdF9jZ192ZXIgJiBUU1RfQ0dST1VQX1YxKQotCQl0
c3RfY2dyb3VwX3NldF9rbm9iKGNncm91cF9kaXIsICJ0YXNrcyIsIGdldHBpZCgpKTsKKwlzdHJ1
Y3QgdHN0X2Nncm91cF9ncm91cCAqY2c7CisJc3RydWN0IGNncm91cF9kaXIgKmNvbnN0ICpkaXI7
CisJc3RydWN0IGNncm91cF9kaXIgKm5ld19kaXI7CisKKwljZyA9IFNBRkVfTUFMTE9DKHNpemVv
ZigqY2cpKTsKKwljZ3JvdXBfZ3JvdXBfaW5pdChjZywgZ3JvdXBfbmFtZSk7CiAKLQlpZiAodHN0
X2NnX3ZlciAmIFRTVF9DR1JPVVBfVjIpCi0JCXRzdF9jZ3JvdXBfc2V0X2tub2IoY2dyb3VwX2Rp
ciwgImNncm91cC5wcm9jcyIsIGdldHBpZCgpKTsKKwlmb3JfZWFjaF9kaXIocGFyZW50LCAwLCBk
aXIpIHsKKwkJbmV3X2RpciA9IFNBRkVfTUFMTE9DKHNpemVvZigqbmV3X2RpcikpOworCQljZ3Jv
dXBfZGlyX21rKCpkaXIsIGdyb3VwX25hbWUsIG5ld19kaXIpOworCQljZ3JvdXBfZ3JvdXBfYWRk
X2RpcihjZywgbmV3X2Rpcik7CisJfQorCisJcmV0dXJuIGNnOwogfQogCi12b2lkIHRzdF9jZ3Jv
dXBfbWVtX3NldF9tYXhieXRlcyhjb25zdCBjaGFyICpjZ3JvdXBfZGlyLCBsb25nIG1lbXN6KQor
c3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKnRzdF9jZ3JvdXBfZ3JvdXBfcm0oc3RydWN0IHRzdF9j
Z3JvdXBfZ3JvdXAgKmNvbnN0IGNnKQogewotCWlmICh0c3RfY2dfdmVyICYgVFNUX0NHUk9VUF9W
MSkKLQkJdHN0X2Nncm91cF9zZXRfa25vYihjZ3JvdXBfZGlyLCAibWVtb3J5LmxpbWl0X2luX2J5
dGVzIiwgbWVtc3opOworCXN0cnVjdCBjZ3JvdXBfZGlyICoqZGlyOworCisJZm9yX2VhY2hfZGly
KGNnLCAwLCBkaXIpIHsKKwkJY2xvc2UoKCpkaXIpLT5kaXJfZmQpOworCQlTQUZFX1VOTElOS0FU
KCgqZGlyKS0+ZGlyX3BhcmVudC0+ZGlyX2ZkLAorCQkJICAgICAgKCpkaXIpLT5kaXJfbmFtZSwK
KwkJCSAgICAgIEFUX1JFTU9WRURJUik7CisJCWZyZWUoKmRpcik7CisJfQogCi0JaWYgKHRzdF9j
Z192ZXIgJiBUU1RfQ0dST1VQX1YyKQotCQl0c3RfY2dyb3VwX3NldF9rbm9iKGNncm91cF9kaXIs
ICJtZW1vcnkubWF4IiwgbWVtc3opOworCWZyZWUoY2cpOworCXJldHVybiBOVUxMOwogfQogCi1p
bnQgdHN0X2Nncm91cF9tZW1fc3dhcGFjY3RfZW5hYmxlZChjb25zdCBjaGFyICpjZ3JvdXBfZGly
KQorX19hdHRyaWJ1dGVfXyAoKG5vbm51bGwsIHdhcm5fdW51c2VkX3Jlc3VsdCkpCitzdGF0aWMg
Y29uc3Qgc3RydWN0IGNncm91cF9maWxlICpjZ3JvdXBfZmlsZV9maW5kKGNvbnN0IGNoYXIgKmNv
bnN0IGZpbGUsCisJCQkJCQkgIGNvbnN0IGludCBsaW5lbm8sCisJCQkJCQkgIGNvbnN0IGNoYXIg
KmNvbnN0IGZpbGVfbmFtZSkKIHsKLQljaGFyICpjZ3JvdXBfbmV3X2RpcjsKLQljaGFyIGtub2Jf
cGF0aFtQQVRIX01BWF07CisJY29uc3Qgc3RydWN0IGNncm91cF9maWxlICpjZmlsZTsKKwljb25z
dCBzdHJ1Y3QgY2dyb3VwX2N0cmwgKmN0cmw7CisJY2hhciBjdHJsX25hbWVbMzJdOworCWNvbnN0
IGNoYXIgKmNvbnN0IHNlcCA9IHN0cmNocihmaWxlX25hbWUsICcuJyk7CisJc2l6ZV90IGxlbjsK
KworCWlmICghc2VwKSB7CisJCXRzdF9icmtfKGZpbGUsIGxpbmVubywgVEJST0ssCisJCQkgIklu
dmFsaWQgZmlsZSBuYW1lICclcyc7IGRpZCBub3QgZmluZCBjb250cm9sbGVyIHNlcGFyYXRvciAn
LiciLAorCQkJIGZpbGVfbmFtZSk7CisJCXJldHVybiBOVUxMOworCX0KIAotCWNncm91cF9uZXdf
ZGlyID0gdHN0X2Nncm91cF9nZXRfcGF0aChjZ3JvdXBfZGlyKTsKKwlsZW4gPSBzZXAgLSBmaWxl
X25hbWU7CisJbWVtY3B5KGN0cmxfbmFtZSwgZmlsZV9uYW1lLCBsZW4pOworCWN0cmxfbmFtZVts
ZW5dID0gJ1wwJzsKIAotCWlmICh0c3RfY2dfdmVyICYgVFNUX0NHUk9VUF9WMSkgewotCQlzcHJp
bnRmKGtub2JfcGF0aCwgIiVzLyVzIiwKLQkJCQljZ3JvdXBfbmV3X2RpciwgIi9tZW1vcnkubWVt
c3cubGltaXRfaW5fYnl0ZXMiKTsKKyAgICAgICAgY3RybCA9IGNncm91cF9maW5kX2N0cmwoY3Ry
bF9uYW1lKTsKIAotCQlpZiAoKGFjY2Vzcyhrbm9iX3BhdGgsIEZfT0spID09IC0xKSkgewotCQkJ
aWYgKGVycm5vID09IEVOT0VOVCkKLQkJCQl0c3RfcmVzKFRDT05GLCAibWVtY2cgc3dhcCBhY2Nv
dW50aW5nIGlzIGRpc2FibGVkIik7Ci0JCQllbHNlCi0JCQkJdHN0X2JyayhUQlJPSyB8IFRFUlJO
TywgImZhaWxlZCB0byBhY2Nlc3MgJXMiLCBrbm9iX3BhdGgpOwotCQl9IGVsc2UgewotCQkJcmV0
dXJuIDE7Ci0JCX0KKwlpZiAoIWN0cmwpIHsKKwkJdHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJP
SywKKwkJCSAiRGlkIG5vdCBmaW5kIGNvbnRyb2xsZXIgJyVzJ1xuIiwgY3RybF9uYW1lKTsKKwkJ
cmV0dXJuIE5VTEw7CiAJfQogCi0JaWYgKHRzdF9jZ192ZXIgJiBUU1RfQ0dST1VQX1YyKSB7Ci0J
CXNwcmludGYoa25vYl9wYXRoLCAiJXMvJXMiLAotCQkJCWNncm91cF9uZXdfZGlyLCAiL21lbW9y
eS5zd2FwLm1heCIpOworCWZvciAoY2ZpbGUgPSBjdHJsLT5maWxlczsgY2ZpbGUtPmZpbGVfbmFt
ZTsgY2ZpbGUrKykgeworCQlpZiAoIXN0cmNtcChmaWxlX25hbWUsIGNmaWxlLT5maWxlX25hbWUp
KQorCQkJYnJlYWs7CisJfQogCi0JCWlmICgoYWNjZXNzKGtub2JfcGF0aCwgRl9PSykgPT0gLTEp
KSB7Ci0JCQlpZiAoZXJybm8gPT0gRU5PRU5UKQotCQkJCXRzdF9yZXMoVENPTkYsICJtZW1jZyBz
d2FwIGFjY291bnRpbmcgaXMgZGlzYWJsZWQiKTsKLQkJCWVsc2UKLQkJCQl0c3RfYnJrKFRCUk9L
IHwgVEVSUk5PLCAiZmFpbGVkIHRvIGFjY2VzcyAlcyIsIGtub2JfcGF0aCk7Ci0JCX0gZWxzZSB7
CisJaWYgKCFjZmlsZS0+ZmlsZV9uYW1lKSB7CisJCXRzdF9icmtfKGZpbGUsIGxpbmVubywgVEJS
T0ssCisJCQkgIkRpZCBub3QgZmluZCAnJXMnIGluICclcydcbiIsCisJCQkgZmlsZV9uYW1lLCBj
dHJsLT5jdHJsX25hbWUpOworCQlyZXR1cm4gTlVMTDsKKwl9CisKKwlyZXR1cm4gY2ZpbGU7Cit9
CisKK2VudW0gdHN0X2Nncm91cF92ZXIgdHN0X2Nncm91cF92ZXIoY29uc3QgY2hhciAqY29uc3Qg
ZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwkJCQkgICAgY29uc3Qgc3RydWN0IHRzdF9jZ3JvdXBf
Z3JvdXAgKmNvbnN0IGNnLAorCQkJCSAgICBjb25zdCBjaGFyICpjb25zdCBjdHJsX25hbWUpCit7
CisJY29uc3Qgc3RydWN0IGNncm91cF9jdHJsICpjb25zdCBjdHJsID0gY2dyb3VwX2ZpbmRfY3Ry
bChjdHJsX25hbWUpOworCWNvbnN0IHN0cnVjdCBjZ3JvdXBfZGlyICpkaXI7CisKKwlpZiAoIXN0
cmNtcChjdHJsX25hbWUsICJjZ3JvdXAiKSkgeworCQl0c3RfYnJrXyhmaWxlLCBsaW5lbm8sCisJ
CQkgVEJST0ssCisJCQkgImNncm91cCBtYXkgYmUgcHJlc2VudCBvbiBib3RoIFYxIGFuZCBWMiBo
aWVyYXJjaGllcyIpOworCQlyZXR1cm4gMDsKKwl9CisKKwlpZiAoIWN0cmwpIHsKKwkJdHN0X2Jy
a18oZmlsZSwgbGluZW5vLAorCQkJIFRCUk9LLCAiVW5rbm93biBjb250cm9sbGVyICclcyciLCBj
dHJsX25hbWUpOworCQlyZXR1cm4gMDsKKwl9CisKKwlkaXIgPSBjZy0+ZGlyc19ieV9jdHJsW2N0
cmwtPmN0cmxfaW5keF07CisKKwlpZiAoIWRpcikgeworCQl0c3RfYnJrXyhmaWxlLCBsaW5lbm8s
CisJCQkgVEJST0ssICIlcyBjb250cm9sbGVyIG5vdCBhdHRhY2hlZCB0byBDR3JvdXAgJXMiLAor
CQkJIGN0cmxfbmFtZSwgY2ctPmdyb3VwX25hbWUpOworCQlyZXR1cm4gMDsKKwl9CisKKwlyZXR1
cm4gZGlyLT5kaXJfcm9vdC0+dmVyOworfQorCitfX2F0dHJpYnV0ZV9fICgobm9ubnVsbCwgd2Fy
bl91bnVzZWRfcmVzdWx0KSkKK3N0YXRpYyBjb25zdCBjaGFyICpjZ3JvdXBfZmlsZV9hbGlhcyhj
b25zdCBzdHJ1Y3QgY2dyb3VwX2ZpbGUgKmNvbnN0IGNmaWxlLAorCQkJCSAgICAgY29uc3Qgc3Ry
dWN0IGNncm91cF9kaXIgKmNvbnN0IGRpcikKK3sKKwlpZiAoZGlyLT5kaXJfcm9vdC0+dmVyICE9
IFRTVF9DR1JPVVBfVjEpCisJCXJldHVybiBjZmlsZS0+ZmlsZV9uYW1lOworCisJaWYgKGNmaWxl
LT5jdHJsX2luZHggPT0gQ1RSTF9DUFVTRVQgJiYKKwkgICAgZGlyLT5kaXJfcm9vdC0+bm9fY3B1
c2V0X3ByZWZpeCAmJgorCSAgICBjZmlsZS0+ZmlsZV9uYW1lX3YxKSB7CisJCXJldHVybiBzdHJj
aHIoY2ZpbGUtPmZpbGVfbmFtZV92MSwgJy4nKSArIDE7CisJfQorCisJcmV0dXJuIGNmaWxlLT5m
aWxlX25hbWVfdjE7Cit9CisKK2ludCBzYWZlX2Nncm91cF9oYXMoY29uc3QgY2hhciAqY29uc3Qg
ZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwkJICAgIGNvbnN0IHN0cnVjdCB0c3RfY2dyb3VwX2dy
b3VwICpjZywKKwkJICAgIGNvbnN0IGNoYXIgKmNvbnN0IGZpbGVfbmFtZSkKK3sKKwljb25zdCBz
dHJ1Y3QgY2dyb3VwX2ZpbGUgKmNvbnN0IGNmaWxlID0KKwkJY2dyb3VwX2ZpbGVfZmluZChmaWxl
LCBsaW5lbm8sIGZpbGVfbmFtZSk7CisJc3RydWN0IGNncm91cF9kaXIgKmNvbnN0ICpkaXI7CisJ
Y29uc3QgY2hhciAqYWxpYXM7CisKKwlpZiAoIWNmaWxlKQorCQlyZXR1cm4gMDsKKworCWZvcl9l
YWNoX2RpcihjZywgY2ZpbGUtPmN0cmxfaW5keCwgZGlyKSB7CisJCWlmICghKGFsaWFzID0gY2dy
b3VwX2ZpbGVfYWxpYXMoY2ZpbGUsICpkaXIpKSkKKwkJICAgIGNvbnRpbnVlOworCisJCWlmICgh
ZmFjY2Vzc2F0KCgqZGlyKS0+ZGlyX2ZkLCBmaWxlX25hbWUsIEZfT0ssIDApKQogCQkJcmV0dXJu
IDE7Ci0JCX0KKworCQlpZiAoZXJybm8gPT0gRU5PRU5UKQorCQkJY29udGludWU7CisKKwkJdHN0
X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSyB8IFRFUlJOTywKKwkJCSAiZmFjY2Vzc2F0KCVkPCVz
PiwgJXMsIEZfT0ssIDApIiwKKwkJCSAoKmRpciktPmRpcl9mZCwgdHN0X2RlY29kZV9mZCgoKmRp
ciktPmRpcl9mZCksIGFsaWFzKTsKIAl9CiAKIAlyZXR1cm4gMDsKIH0KIAotdm9pZCB0c3RfY2dy
b3VwX21lbV9zZXRfbWF4c3dhcChjb25zdCBjaGFyICpjZ3JvdXBfZGlyLCBsb25nIG1lbXN6KQor
X19hdHRyaWJ1dGVfXyAoKHdhcm5fdW51c2VkX3Jlc3VsdCkpCitzdGF0aWMgc3RydWN0IHRzdF9j
Z3JvdXBfZ3JvdXAgKmNncm91cF9ncm91cF9mcm9tX3Jvb3RzKGNvbnN0IHNpemVfdCB0cmVlX29m
ZikKIHsKLQlpZiAodHN0X2NnX3ZlciAmIFRTVF9DR1JPVVBfVjEpCi0JCXRzdF9jZ3JvdXBfc2V0
X2tub2IoY2dyb3VwX2RpciwgIm1lbW9yeS5tZW1zdy5saW1pdF9pbl9ieXRlcyIsIG1lbXN6KTsK
KwlzdHJ1Y3QgY2dyb3VwX3Jvb3QgKnJvb3Q7CisJc3RydWN0IGNncm91cF9kaXIgKmRpcjsKKwlz
dHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqY2c7CisKKwljZyA9IHRzdF9hbGxvYyhzaXplb2YoKmNn
KSk7CisJY2dyb3VwX2dyb3VwX2luaXQoY2csIE5VTEwpOwogCi0JaWYgKHRzdF9jZ192ZXIgJiBU
U1RfQ0dST1VQX1YyKQotCQl0c3RfY2dyb3VwX3NldF9rbm9iKGNncm91cF9kaXIsICJtZW1vcnku
c3dhcC5tYXgiLCBtZW1zeik7CisJZm9yX2VhY2hfcm9vdChyb290KSB7CisJCWRpciA9ICh0eXBl
b2YoZGlyKSkoKChjaGFyICopcm9vdCkgKyB0cmVlX29mZik7CisKKwkJaWYgKGRpci0+Y3RybF9m
aWVsZCkKKwkJCWNncm91cF9ncm91cF9hZGRfZGlyKGNnLCBkaXIpOworCX0KKworCWlmIChjZy0+
ZGlyc1swXSkgeworCQlzdHJuY3B5KGNnLT5ncm91cF9uYW1lLCBjZy0+ZGlyc1swXS0+ZGlyX25h
bWUsIE5BTUVfTUFYKTsKKwkJcmV0dXJuIGNnOworCX0KKworCXRzdF9icmsoVEJST0ssCisJCSJO
byBDR3JvdXBzIGZvdW5kOyBtYXliZSB5b3UgZm9yZ290IHRvIGNhbGwgdHN0X2Nncm91cF9yZXF1
aXJlPyIpOworCisJcmV0dXJuIGNnOwogfQogCi12b2lkIHRzdF9jZ3JvdXBfY3B1c2V0X3JlYWRf
ZmlsZXMoY29uc3QgY2hhciAqY2dyb3VwX2RpciwgY29uc3QgY2hhciAqZmlsZW5hbWUsCi0JY2hh
ciAqcmV0YnVmLCBzaXplX3QgcmV0YnVmX3N6KQorY29uc3Qgc3RydWN0IHRzdF9jZ3JvdXBfZ3Jv
dXAgKnRzdF9jZ3JvdXBfZ2V0X3Rlc3RfZ3JvdXAodm9pZCkKIHsKLQlpbnQgZmQ7Ci0JY2hhciAq
Y2dyb3VwX25ld19kaXI7Ci0JY2hhciBrbm9iX3BhdGhbUEFUSF9NQVhdOworCXJldHVybiBjZ3Jv
dXBfZ3JvdXBfZnJvbV9yb290cyhvZmZzZXRvZihzdHJ1Y3QgY2dyb3VwX3Jvb3QsIHRlc3RfZGly
KSk7Cit9CiAKLQljZ3JvdXBfbmV3X2RpciA9IHRzdF9jZ3JvdXBfZ2V0X3BhdGgoY2dyb3VwX2Rp
cik7Citjb25zdCBzdHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqdHN0X2Nncm91cF9nZXRfZHJhaW5f
Z3JvdXAodm9pZCkKK3sKKwlyZXR1cm4gY2dyb3VwX2dyb3VwX2Zyb21fcm9vdHMob2Zmc2V0b2Yo
c3RydWN0IGNncm91cF9yb290LCBkcmFpbl9kaXIpKTsKK30KIAotCS8qCi0JICogdHJ5IGVpdGhl
ciAnL2Rldi9jcHVzZXQvWFhYWCcgb3IgJy9kZXYvY3B1c2V0L2NwdXNldC5YWFhYJwotCSAqIHBs
ZWFzZSBzZWUgRG9jdW1lbnRhdGlvbi9jZ3JvdXBzL2NwdXNldHMudHh0IGZyb20ga2VybmVsIHNy
YwotCSAqIGZvciBkZXRhaWxzCi0JICovCi0Jc3ByaW50Zihrbm9iX3BhdGgsICIlcy8lcyIsIGNn
cm91cF9uZXdfZGlyLCBmaWxlbmFtZSk7Ci0JZmQgPSBvcGVuKGtub2JfcGF0aCwgT19SRE9OTFkp
OwotCWlmIChmZCA9PSAtMSkgewotCQlpZiAoZXJybm8gPT0gRU5PRU5UKSB7Ci0JCQlzcHJpbnRm
KGtub2JfcGF0aCwgIiVzL2NwdXNldC4lcyIsCi0JCQkJCWNncm91cF9uZXdfZGlyLCBmaWxlbmFt
ZSk7Ci0JCQlmZCA9IFNBRkVfT1BFTihrbm9iX3BhdGgsIE9fUkRPTkxZKTsKLQkJfSBlbHNlCi0J
CQl0c3RfYnJrKFRCUk9LIHwgVEVSUk5PLCAib3BlbiAlcyIsIGtub2JfcGF0aCk7Citzc2l6ZV90
IHNhZmVfY2dyb3VwX3JlYWQoY29uc3QgY2hhciAqY29uc3QgZmlsZSwgY29uc3QgaW50IGxpbmVu
bywKKwkJCSBjb25zdCBzdHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqY29uc3QgY2csCisJCQkgY29u
c3QgY2hhciAqY29uc3QgZmlsZV9uYW1lLAorCQkJIGNoYXIgKmNvbnN0IG91dCwgY29uc3Qgc2l6
ZV90IGxlbikKK3sKKwljb25zdCBzdHJ1Y3QgY2dyb3VwX2ZpbGUgKmNvbnN0IGNmaWxlID0KKwkJ
Y2dyb3VwX2ZpbGVfZmluZChmaWxlLCBsaW5lbm8sIGZpbGVfbmFtZSk7CisJc3RydWN0IGNncm91
cF9kaXIgKmNvbnN0ICpkaXI7CisJY29uc3QgY2hhciAqYWxpYXM7CisJc2l6ZV90IHByZXZfbGVu
ID0gMDsKKwljaGFyIHByZXZfYnVmW0JVRlNJWl07CisKKwlmb3JfZWFjaF9kaXIoY2csIGNmaWxl
LT5jdHJsX2luZHgsIGRpcikgeworCQlpZiAoIShhbGlhcyA9IGNncm91cF9maWxlX2FsaWFzKGNm
aWxlLCAqZGlyKSkpCisJCQljb250aW51ZTsKKworCQlpZiAocHJldl9sZW4pCisJCQltZW1jcHko
cHJldl9idWYsIG91dCwgcHJldl9sZW4pOworCisJCVRFU1Qoc2FmZV9maWxlX3JlYWRhdChmaWxl
LCBsaW5lbm8sCisJCQkJICAgICAgKCpkaXIpLT5kaXJfZmQsIGFsaWFzLCBvdXQsIGxlbikpOwor
CQlpZiAoVFNUX1JFVCA8IDApCisJCQljb250aW51ZTsKKworCQlpZiAocHJldl9sZW4gJiYgbWVt
Y21wKG91dCwgcHJldl9idWYsIHByZXZfbGVuKSkgeworCQkJdHN0X2Jya18oZmlsZSwgbGluZW5v
LCBUQlJPSywKKwkJCQkgIiVzIGhhcyBkaWZmZXJlbnQgdmFsdWUgYWNyb3NzIHJvb3RzIiwKKwkJ
CQkgZmlsZV9uYW1lKTsKKwkJCWJyZWFrOworCQl9CisKKwkJcHJldl9sZW4gPSBNSU4oc2l6ZW9m
KHByZXZfYnVmKSwgKHNpemVfdClUU1RfUkVUKTsKIAl9CiAKLQltZW1zZXQocmV0YnVmLCAwLCBy
ZXRidWZfc3opOwotCWlmIChyZWFkKGZkLCByZXRidWYsIHJldGJ1Zl9zeikgPCAwKQotCQl0c3Rf
YnJrKFRCUk9LIHwgVEVSUk5PLCAicmVhZCAlcyIsIGtub2JfcGF0aCk7CisJb3V0W01BWChUU1Rf
UkVULCAwKV0gPSAnXDAnOwogCi0JY2xvc2UoZmQpOworCXJldHVybiBUU1RfUkVUOwogfQogCi12
b2lkIHRzdF9jZ3JvdXBfY3B1c2V0X3dyaXRlX2ZpbGVzKGNvbnN0IGNoYXIgKmNncm91cF9kaXIs
IGNvbnN0IGNoYXIgKmZpbGVuYW1lLCBjb25zdCBjaGFyICpidWYpCit2b2lkIHNhZmVfY2dyb3Vw
X3ByaW50Zihjb25zdCBjaGFyICpjb25zdCBmaWxlLCBjb25zdCBpbnQgbGluZW5vLAorCQkJY29u
c3Qgc3RydWN0IHRzdF9jZ3JvdXBfZ3JvdXAgKmNnLAorCQkJY29uc3QgY2hhciAqY29uc3QgZmls
ZV9uYW1lLAorCQkJY29uc3QgY2hhciAqY29uc3QgZm10LCAuLi4pCiB7Ci0JaW50IGZkOwotCWNo
YXIgKmNncm91cF9uZXdfZGlyOwotCWNoYXIga25vYl9wYXRoW1BBVEhfTUFYXTsKKwljb25zdCBz
dHJ1Y3QgY2dyb3VwX2ZpbGUgKmNvbnN0IGNmaWxlID0KKwkJY2dyb3VwX2ZpbGVfZmluZChmaWxl
LCBsaW5lbm8sIGZpbGVfbmFtZSk7CisJc3RydWN0IGNncm91cF9kaXIgKmNvbnN0ICpkaXI7CisJ
Y29uc3QgY2hhciAqYWxpYXM7CisJdmFfbGlzdCB2YTsKKworCWZvcl9lYWNoX2RpcihjZywgY2Zp
bGUtPmN0cmxfaW5keCwgZGlyKSB7CisJCWlmICghKGFsaWFzID0gY2dyb3VwX2ZpbGVfYWxpYXMo
Y2ZpbGUsICpkaXIpKSkKKwkJICAgIGNvbnRpbnVlOworCisJCXZhX3N0YXJ0KHZhLCBmbXQpOwor
CQlzYWZlX2ZpbGVfdnByaW50ZmF0KGZpbGUsIGxpbmVubywKKwkJCQkgICAgKCpkaXIpLT5kaXJf
ZmQsIGFsaWFzLCBmbXQsIHZhKTsKKwkJdmFfZW5kKHZhKTsKKwl9Cit9CiAKLQljZ3JvdXBfbmV3
X2RpciA9IHRzdF9jZ3JvdXBfZ2V0X3BhdGgoY2dyb3VwX2Rpcik7Cit2b2lkIHNhZmVfY2dyb3Vw
X3NjYW5mKGNvbnN0IGNoYXIgKmNvbnN0IGZpbGUsIGNvbnN0IGludCBsaW5lbm8sCisJCSAgICAg
ICBjb25zdCBzdHJ1Y3QgdHN0X2Nncm91cF9ncm91cCAqY29uc3QgY2csCisJCSAgICAgICBjb25z
dCBjaGFyICpjb25zdCBmaWxlX25hbWUsCisJCSAgICAgICBjb25zdCBjaGFyICpjb25zdCBmbXQs
IC4uLikKK3sKKwl2YV9saXN0IHZhOworCWNoYXIgYnVmW0JVRlNJWl07CisJc3NpemVfdCBsZW4g
PSBzYWZlX2Nncm91cF9yZWFkKGZpbGUsIGxpbmVubywKKwkJCQkgICAgICAgY2csIGZpbGVfbmFt
ZSwgYnVmLCBzaXplb2YoYnVmKSk7CisJY29uc3QgaW50IGNvbnZfY250ID0gdHN0X2NvdW50X3Nj
YW5mX2NvbnZlcnNpb25zKGZtdCk7CisJaW50IHJldDsKKworCWlmIChsZW4gPCAxKQorCQlyZXR1
cm47CiAKLQkvKgotCSAqIHRyeSBlaXRoZXIgJy9kZXYvY3B1c2V0L1hYWFgnIG9yICcvZGV2L2Nw
dXNldC9jcHVzZXQuWFhYWCcKLQkgKiBwbGVhc2Ugc2VlIERvY3VtZW50YXRpb24vY2dyb3Vwcy9j
cHVzZXRzLnR4dCBmcm9tIGtlcm5lbCBzcmMKLQkgKiBmb3IgZGV0YWlscwotCSAqLwotCXNwcmlu
dGYoa25vYl9wYXRoLCAiJXMvJXMiLCBjZ3JvdXBfbmV3X2RpciwgZmlsZW5hbWUpOwotCWZkID0g
b3Blbihrbm9iX3BhdGgsIE9fV1JPTkxZKTsKLQlpZiAoZmQgPT0gLTEpIHsKLQkJaWYgKGVycm5v
ID09IEVOT0VOVCkgewotCQkJc3ByaW50Zihrbm9iX3BhdGgsICIlcy9jcHVzZXQuJXMiLCBjZ3Jv
dXBfbmV3X2RpciwgZmlsZW5hbWUpOwotCQkJZmQgPSBTQUZFX09QRU4oa25vYl9wYXRoLCBPX1dS
T05MWSk7Ci0JCX0gZWxzZQotCQkJdHN0X2JyayhUQlJPSyB8IFRFUlJOTywgIm9wZW4gJXMiLCBr
bm9iX3BhdGgpOworCXZhX3N0YXJ0KHZhLCBmbXQpOworCWlmICgocmV0ID0gdnNzY2FuZihidWYs
IGZtdCwgdmEpKSA8IDEpIHsKKwkJdHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSyB8IFRFUlJO
TywKKwkJCSAiJyVzJzogdnNzY2FuZignJXMnLCAnJXMnLCAuLi4pIiwgZmlsZV9uYW1lLCBidWYs
IGZtdCk7CiAJfQorCXZhX2VuZCh2YSk7CiAKLQlTQUZFX1dSSVRFKDEsIGZkLCBidWYsIHN0cmxl
bihidWYpKTsKKwlpZiAoY29udl9jbnQgPT0gcmV0KQorCQlyZXR1cm47CiAKLQljbG9zZShmZCk7
CisJdHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSywKKwkJICInJXMnOiB2c3NjYW5mKCclcycs
ICclcycsIC4uKTogTGVzcyBjb252ZXJzaW9ucyB0aGFuIGV4cGVjdGVkOiAlZCAhPSAlZCIsCisJ
CSBmaWxlX25hbWUsIGJ1ZiwgZm10LCByZXQsIGNvbnZfY250KTsKIH0KLS0gCjIuMzEuMQoKCi0t
IApNYWlsaW5nIGxpc3QgaW5mbzogaHR0cHM6Ly9saXN0cy5saW51eC5pdC9saXN0aW5mby9sdHAK
