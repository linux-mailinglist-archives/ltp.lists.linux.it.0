Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [213.254.12.146])
	by mail.lfdr.de (Postfix) with ESMTPS id 8E9197F3295
	for <lists+linux-ltp@lfdr.de>; Tue, 21 Nov 2023 16:43:26 +0100 (CET)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id 4FCDD3CC274
	for <lists+linux-ltp@lfdr.de>; Tue, 21 Nov 2023 16:43:26 +0100 (CET)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-5.smtp.seeweb.it (in-5.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::5])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-384))
 (No client certificate requested)
 by picard.linux.it (Postfix) with ESMTPS id 3C51E3C8206
 for <ltp@lists.linux.it>; Tue, 21 Nov 2023 16:42:38 +0100 (CET)
Received: from smtp-out2.suse.de (smtp-out2.suse.de [IPv6:2001:67c:2178:6::1d])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256)
 (No client certificate requested)
 by in-5.smtp.seeweb.it (Postfix) with ESMTPS id E1913600AFC
 for <ltp@lists.linux.it>; Tue, 21 Nov 2023 16:42:37 +0100 (CET)
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by smtp-out2.suse.de (Postfix) with ESMTPS id 9EEE21F8C0;
 Tue, 21 Nov 2023 15:42:35 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.cz; s=susede2_rsa;
 t=1700581355; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=wt/Owb0sIhcpk7m693EdK2pFST+eqySE/wG8t7S6NTs=;
 b=Uw5J9/3RoPVkwx0RM3K+JJCRu6ujLzfbktgmM6QhicbxTUULiNGYrB358g8L6r48UmNEkL
 VqMpcL/2lfxUDrCvwnfTnaVZAotPTS36xqwoKa/QUJLskDbdFdKI2zcJ6uXSA2OZJ+2uMu
 axF1xgkS0HerpG6kCJ+qaueYWsuYty0=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.cz;
 s=susede2_ed25519; t=1700581355;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=wt/Owb0sIhcpk7m693EdK2pFST+eqySE/wG8t7S6NTs=;
 b=wOXPl8fV/YxFFUSo2EN9CLQOZO2fPTNxvozxKY01iWEicpKHZUqDsU8zKSuoHlDsZKvC3c
 PqnlF2tO12U48vDw==
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by imap2.suse-dmz.suse.de (Postfix) with ESMTPS id 8A0DD13A08;
 Tue, 21 Nov 2023 15:42:35 +0000 (UTC)
Received: from dovecot-director2.suse.de ([192.168.254.65])
 by imap2.suse-dmz.suse.de with ESMTPSA id 0FS/IOvPXGX+fQAAMHmgww
 (envelope-from <mdoucha@suse.cz>); Tue, 21 Nov 2023 15:42:35 +0000
From: Martin Doucha <mdoucha@suse.cz>
To: ltp@lists.linux.it
Date: Tue, 21 Nov 2023 16:42:23 +0100
Message-ID: <20231121154234.24668-2-mdoucha@suse.cz>
X-Mailer: git-send-email 2.42.1
In-Reply-To: <20231121154234.24668-1-mdoucha@suse.cz>
References: <20231121154234.24668-1-mdoucha@suse.cz>
MIME-Version: 1.0
Authentication-Results: smtp-out2.suse.de;
	none
X-Spam-Level: 
X-Spam-Score: -3.30
X-Spamd-Result: default: False [-3.30 / 50.00]; ARC_NA(0.00)[];
 RCVD_VIA_SMTP_AUTH(0.00)[]; FROM_HAS_DN(0.00)[];
 TO_DN_SOME(0.00)[]; TO_MATCH_ENVRCPT_ALL(0.00)[];
 NEURAL_HAM_LONG(-1.00)[-1.000]; MIME_GOOD(-0.10)[text/plain];
 DKIM_SIGNED(0.00)[suse.cz:s=susede2_rsa,suse.cz:s=susede2_ed25519];
 NEURAL_HAM_SHORT(-0.20)[-1.000]; RCPT_COUNT_TWO(0.00)[2];
 MID_CONTAINS_FROM(1.00)[]; FUZZY_BLOCKED(0.00)[rspamd.com];
 FROM_EQ_ENVFROM(0.00)[]; MIME_TRACE(0.00)[0:+];
 RCVD_COUNT_TWO(0.00)[2]; RCVD_TLS_ALL(0.00)[];
 BAYES_HAM(-3.00)[100.00%]
X-Virus-Scanned: clamav-milter 1.0.1 at in-5.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=0.1 required=7.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,DKIM_VALID_EF,SPF_HELO_NONE,SPF_SOFTFAIL,
 T_SCC_BODY_TEXT_LINE shortcircuit=no autolearn=disabled version=4.0.0
X-Spam-Checker-Version: SpamAssassin 4.0.0 (2022-12-13) on in-5.smtp.seeweb.it
Subject: [LTP] [PATCH v4 1/4] tst_netlink: Add helper functions for handling
 generic attributes
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

UmVmYWN0b3Igc3RydWN0IHRzdF9ydG5sX2F0dHJfbGlzdCBmb3IgZ2VuZXJpYyB1c2UgYW5kIGFk
ZCBoZWxwZXIKZnVuY3Rpb25zIGZvciBoYW5kbGluZyBnZW5lcmljIHN0cnVjdCBubGF0dHIgbWVz
c2FnZSBhdHRyaWJ1dGVzLgoKU2lnbmVkLW9mZi1ieTogTWFydGluIERvdWNoYSA8bWRvdWNoYUBz
dXNlLmN6PgpSZXZpZXdlZC1ieTogUGV0ciBWb3JlbCA8cHZvcmVsQHN1c2UuY3o+Ci0tLQoKQ2hh
bmdlcyBzaW5jZSB2MTogTmV3IHBhdGNoCkNoYW5nZXMgc2luY2UgdjI6IE5vbmUKQ2hhbmdlcyBz
aW5jZSB2MzogVXBkYXRlZCBkb2NzCgpORVRMSU5LX0FERF9BVFRSX1NUUklORygpIGlzIGN1cnJl
bnRseSB1bnVzZWQgYnV0IGl0IHdhcyBhZGRlZCBmb3IgZnV0dXJlIHVzZS4KCiBkb2MvQy1UZXN0
LU5ldHdvcmstQVBJLmFzY2lpZG9jIHwgNjYgKysrKysrKysrKysrKysrKystLS0tLS0tLS0KIGlu
Y2x1ZGUvdHN0X25ldGRldmljZS5oICAgICAgICAgfCAgNiArLS0KIGluY2x1ZGUvdHN0X25ldGxp
bmsuaCAgICAgICAgICAgfCAzOCArKysrKysrKysrKystLS0KIGxpYi90c3RfbmV0ZGV2aWNlLmMg
ICAgICAgICAgICAgfCAyMCArKysrLS0tLQogbGliL3RzdF9uZXRsaW5rLmMgICAgICAgICAgICAg
ICB8IDgyICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrLQogdGVzdGNhc2VzL2N2ZS90
Y2luZGV4MDEuYyAgICAgICB8IDEyICsrLS0tCiA2IGZpbGVzIGNoYW5nZWQsIDE3NiBpbnNlcnRp
b25zKCspLCA0OCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kb2MvQy1UZXN0LU5ldHdvcmst
QVBJLmFzY2lpZG9jIGIvZG9jL0MtVGVzdC1OZXR3b3JrLUFQSS5hc2NpaWRvYwppbmRleCA2MTQ1
ZTY3MTguLmZlZWRkNWE5NSAxMDA2NDQKLS0tIGEvZG9jL0MtVGVzdC1OZXR3b3JrLUFQSS5hc2Np
aWRvYworKysgYi9kb2MvQy1UZXN0LU5ldHdvcmstQVBJLmFzY2lpZG9jCkBAIC0yOTMsMTEgKzI5
MywxMSBAQCBzdGFnZS4KIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIHN0cnVjdCB0c3RfbmV0bGlu
a19jb250ZXh0OwogCi1zdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0IHsKK3N0cnVjdCB0c3RfbmV0
bGlua19hdHRyX2xpc3QgewogCXVuc2lnbmVkIHNob3J0IHR5cGU7CiAJY29uc3Qgdm9pZCAqZGF0
YTsKIAlzc2l6ZV90IGxlbjsKLQljb25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0ICpzdWJs
aXN0OworCWNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19hdHRyX2xpc3QgKnN1Ymxpc3Q7CiB9Owog
CiBzdHJ1Y3QgdHN0X25ldGxpbmtfbWVzc2FnZSB7CkBAIC0zMTMsMTIgKzMxMywxMyBAQCBjb25z
dHJ1Y3RpbmcgYW5kIHNlbmRpbmcgYXJiaXRyYXJ5IG1lc3NhZ2VzIHVzaW5nIHRoZSBmdW5jdGlv
bnMgZGVzY3JpYmVkCiBiZWxvdy4gQ3JlYXRlIGEgbmV3IGNvbnRleHQgdXNpbmcgK05FVExJTktf
Q1JFQVRFX0NPTlRFWFQoKSssIHRoZW4gZnJlZSBpdAogdXNpbmcgK05FVExJTktfREVTVFJPWV9D
T05URVhUKCkrIHdoZW4geW91J3JlIGRvbmUgd2l0aCBpdC4KIAotK3N0cnVjdCB0c3RfcnRubF9h
dHRyX2xpc3QrIGlzIGEgaGVscGVyIHN0cnVjdHVyZSBmb3IgZGVmaW5pbmcgY29tcGxleAorK3N0
cnVjdCB0c3RfbmV0bGlua19hdHRyX2xpc3QrIGlzIGEgaGVscGVyIHN0cnVjdHVyZSBmb3IgZGVm
aW5pbmcgY29tcGxleAogcnRuZXRsaW5rIG1lc3NhZ2UgYXR0cmlidXRlIHBheWxvYWRzLCBpbmNs
dWRpbmcgbmVzdGVkIGF0dHJpYnV0ZSBsaXN0cy4gRXZlcnkKIGxpc3QgYW5kIHN1Ymxpc3QgZGVm
aW5lZCB1c2luZyB0aGlzIHN0cnVjdHVyZSBpcyB0ZXJtaW5hdGVkIGJ5IGl0ZW0gd2l0aAogbmVn
YXRpdmUgK2xlbisuCiAKLS0gK3R5cGUrIGlzIHRoZSBhdHRyaWJ1dGUgdHlwZSB0aGF0IHdpbGwg
YmUgc3RvcmVkIGluICtzdHJ1Y3QgcnRhdHRyLnJ0YV90eXBlKy4KKy0gK3R5cGUrIGlzIHRoZSBh
dHRyaWJ1dGUgdHlwZSB0aGF0IHdpbGwgYmUgc3RvcmVkIGluICtzdHJ1Y3QgbmxhdHRyLm5sYV90
eXBlKworICBvciArc3RydWN0IHJ0YXR0ci5ydGFfdHlwZSsuCiAKIC0gK2RhdGErIGNvbnRhaW5z
IGFyYml0cmFyeSBhdHRyaWJ1dGUgcGF5bG9hZC4KIApAQCAtMzI2LDEwICszMjcsMTAgQEAgbmVn
YXRpdmUgK2xlbisuCiAgIHNldCArbGVuKyB0byAwLiBUaGUgbGFzdCBpdGVtIGluIGEgbGlzdCBv
ciBzdWJsaXN0IG11c3QgaGF2ZSBuZWdhdGl2ZSBsZW5ndGguCiAKIC0gK3N1Ymxpc3QrIGNvbnRh
aW5zIGEgbmVzdGVkIGF0dHJpYnV0ZSBsaXN0IHdoaWNoIHdpbGwgYmUgYXBwZW5kZWQgYWZ0ZXIK
LSAgK2RhdGErIGFzIHBhcnQgb2YgdGhlIGF0dHJpYnV0ZSBwYXlsb2FkLiArc3RydWN0IHJ0YXR0
ci5ydGFfbGVuKyB3aWxsIGJlCi0gIGNhbGN1bGF0ZWQgYXV0b21hdGljYWxseSB3aXRoIHByb3Bl
ciBhbGlnbm1lbnQsIGRvIF9ub3RfIGFkZCB0aGUgc3VibGlzdCBzaXplCi0gIHRvIHRoZSArbGVu
KyBmaWVsZC4gSWYgeW91IGRvIG5vdCB3YW50IHRvIGFkZCBuZXN0ZWQgYXR0cmlidXRlcywgc2V0
Ci0gICtzdWJsaXN0KyB0byArTlVMTCsuCisgICtkYXRhKyBhcyBwYXJ0IG9mIHRoZSBhdHRyaWJ1
dGUgcGF5bG9hZC4gK3N0cnVjdCBubGF0dHIubmxhX2xlbisgb3IKKyAgK3N0cnVjdCBydGF0dHIu
cnRhX2xlbisgd2lsbCBiZSBjYWxjdWxhdGVkIGF1dG9tYXRpY2FsbHkgd2l0aCBwcm9wZXIKKyAg
YWxpZ25tZW50LCBkbyBfbm90XyBhZGQgdGhlIHN1Ymxpc3Qgc2l6ZSB0byB0aGUgK2xlbisgZmll
bGQuIElmIHlvdSBkbyBub3QKKyAgd2FudCB0byBhZGQgbmVzdGVkIGF0dHJpYnV0ZXMsIHNldCAr
c3VibGlzdCsgdG8gK05VTEwrLgogCiArc3RydWN0IHRzdF9uZXRsaW5rX21lc3NhZ2UrIGlzIGEg
c3RydWN0dXJlIGhvbGRpbmcgcGFydGlhbGx5IHBhcnNlZCBuZXRsaW5rCiBtZXNzYWdlcyByZWNl
aXZlZCBmcm9tIHRoZSBrZXJuZWwuICtORVRMSU5LX1JFQ1YoKSsgcmV0dXJucyBhbiBhcnJheSBv
ZiB0aGVzZQpAQCAtNDEyLDI0ICs0MTMsNDcgQEAgc3RydWN0dXJlcyB3aXRoIHRoZSBsYXN0IGl0
ZW0gaGF2aW5nICtOVUxMKyBpbiB0aGUgK2hlYWRlcisgZmllbGQuIENhbGwKICAgYW5kICtORVRM
SU5LX0NIRUNLX0FDS1MoKSsgd2lsbCBub3Qgd29yayBjb3JyZWN0bHkgdW50aWwgdGhlIG5leHQK
ICAgK05FVExJTktfU0VORCgpKy4KIAorLSAraW50IE5FVExJTktfQUREX0FUVFIoc3RydWN0IHRz
dF9uZXRsaW5rX2NvbnRleHQgKmN0eCwgdW5zaWduZWQgc2hvcnQgdHlwZSwKKyAgY29uc3Qgdm9p
ZCAqZGF0YSwgdW5zaWduZWQgc2hvcnQgbGVuKSsg4oCTIEFkZHMgbmV3ICtzdHJ1Y3QgbmxhdHRy
KyBhdHRyaWJ1dGUKKyAgdG8gdGhlIGxhc3QgbWVzc2FnZSBpbiArY3R4KyBidWZmZXIuIFNlZSAr
TkVUTElOS19BRERfTUVTU0FHRSgpKy4gWW91IG5lZWQKKyAgdG8gcHJvdmlkZSBhdHRyaWJ1dGUg
K3R5cGUrIHdoaWNoIHdpbGwgYmUgc3RvcmVkIGluICtzdHJ1Y3QgbmxhdHRyLm5sYV90eXBlKywK
KyAgb3B0aW9uYWwgcGF5bG9hZCArZGF0YSsgYW5kIHBheWxvYWQgc2l6ZSArbGVuKyBpbiBieXRl
cy4gSWYgeW91IGRvbid0IHdhbnQKKyAgdG8gYWRkIGFueSBwYXlsb2FkLCBzZXQgK2RhdGErIHRv
ICtOVUxMKyBhbmQgK2xlbisgdG8gMC4gUmV0dXJucyAxIG9uCisgIHN1Y2Nlc3MsIDAgb24gZXJy
b3IuCisKKy0gK2ludCBORVRMSU5LX0FERF9BVFRSX1NUUklORyhzdHJ1Y3QgdHN0X25ldGxpbmtf
Y29udGV4dCAqY3R4LCB1bnNpZ25lZCBzaG9ydAorICB0eXBlLCBjb25zdCBjaGFyICpkYXRhKSsg
4oCTIEFkZHMgbmV3ICtzdHJ1Y3QgbmxhdHRyKyBzdHJpbmcgYXR0cmlidXRlIHRvIHRoZQorICBs
YXN0IG1lc3NhZ2UgaW4gK2N0eCsgYnVmZmVyLiBQYXJhbWV0ZXJzIGFuZCByZXR1cm4gdmFsdWUg
YXJlIHRoZSBzYW1lIGFzCisgIGZvciArTkVUTElOS19BRERfQVRUUigpKywgZXhjZXB0IHRoZSBw
YXlsb2FkIGxlbmd0aCBpcyBjYWxjdWxhdGVkIHVzaW5nCisgICtzdHJsZW4oKSsuCisKKy0gK2lu
dCBORVRMSU5LX0FERF9BVFRSX0xJU1Qoc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCwg
Y29uc3Qgc3RydWN0CisgIHRzdF9uZXRsaW5rX2F0dHJfbGlzdCAqbGlzdCkrIOKAkyBBZGRzIGEg
bGlzdCBvZiArc3RydWN0IG5sYXR0cisgYXR0cmlidXRlcworICB0byB0aGUgbGFzdCBtZXNzYWdl
IGluICtjdHgrIGJ1ZmZlci4gU2VlIGRlc2NyaXB0aW9uIG9mCisgICtzdHJ1Y3QgdHN0X25ldGxp
bmtfYXR0cl9saXN0KyBhbmQgK05FVExJTktfQUREX01FU1NBR0UoKSsgYWJvdmUuIFJldHVybnMK
KyAgdGhlIG51bWJlciBvZiBhZGRlZCBhdHRyaWJ1dGVzIG9uIHN1Y2Nlc3MgKG5lc3RlZCBhdHRy
aWJ1dGVzIGFyZSBub3QKKyAgY291bnRlZCksIC0xIG9uIGVycm9yLgorCiAtICtpbnQgUlROTF9B
RERfQVRUUihzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4LCB1bnNpZ25lZCBzaG9ydCB0
eXBlLAotICBjb25zdCB2b2lkICpkYXRhLCB1bnNpZ25lZCBzaG9ydCBsZW4pKyDigJMgQWRkcyBu
ZXcgYXR0cmlidXRlIHRvIHRoZSBsYXN0Ci0gIG1lc3NhZ2UgaW4gK2N0eCsgYnVmZmVyLiBTZWUg
K05FVExJTktfQUREX01FU1NBR0UoKSsuIFlvdSBuZWVkIHRvIHByb3ZpZGUKLSAgYXR0cmlidXRl
ICt0eXBlKyB3aGljaCB3aWxsIGJlIHN0b3JlZCBpbiArc3RydWN0IHJ0YXR0ci5ydGFfdHlwZSss
IG9wdGlvbmFsCi0gIHBheWxvYWQgK2RhdGErIGFuZCBwYXlsb2FkIHNpemUgK2xlbisgaW4gYnl0
ZXMuIElmIHlvdSBkb24ndCB3YW50IHRvIGFkZCBhbnkKLSAgcGF5bG9hZCwgc2V0ICtkYXRhKyB0
byArTlVMTCsgYW5kICtsZW4rIHRvIDAuIFJldHVybnMgMSBvbiBzdWNjZXNzLAotICAwIG9uIGVy
cm9yLgorICBjb25zdCB2b2lkICpkYXRhLCB1bnNpZ25lZCBzaG9ydCBsZW4pKyDigJMgQWRkcyBu
ZXcgK3N0cnVjdCBydGF0dHIrIGF0dHJpYnV0ZQorICB0byB0aGUgbGFzdCBtZXNzYWdlIGluICtj
dHgrIGJ1ZmZlci4gU2VlICtORVRMSU5LX0FERF9NRVNTQUdFKCkrLiBZb3UgbmVlZAorICB0byBw
cm92aWRlIGF0dHJpYnV0ZSArdHlwZSsgd2hpY2ggd2lsbCBiZSBzdG9yZWQgaW4gK3N0cnVjdCBy
dGF0dHIucnRhX3R5cGUrLAorICBvcHRpb25hbCBwYXlsb2FkICtkYXRhKyBhbmQgcGF5bG9hZCBz
aXplICtsZW4rIGluIGJ5dGVzLiBJZiB5b3UgZG9uJ3Qgd2FudAorICB0byBhZGQgYW55IHBheWxv
YWQsIHNldCArZGF0YSsgdG8gK05VTEwrIGFuZCArbGVuKyB0byAwLiBSZXR1cm5zIDEgb24KKyAg
c3VjY2VzcywgMCBvbiBlcnJvci4KIAogLSAraW50IFJUTkxfQUREX0FUVFJfU1RSSU5HKHN0cnVj
dCB0c3RfbmV0bGlua19jb250ZXh0ICpjdHgsIHVuc2lnbmVkIHNob3J0Ci0gIHR5cGUsIGNvbnN0
IGNoYXIgKmRhdGEpKyDigJMgQWRkcyBuZXcgc3RyaW5nIGF0dHJpYnV0ZSB0byB0aGUgbGFzdCBt
ZXNzYWdlCi0gIGluICtjdHgrIGJ1ZmZlci4gUGFyYW1ldGVycyBhbmQgcmV0dXJuIHZhbHVlIGFy
ZSB0aGUgc2FtZSBhcyBmb3IKLSAgK1JUTkxfQUREX0FUVFIoKSssIGV4Y2VwdCB0aGUgcGF5bG9h
ZCBsZW5ndGggaXMgY2FsY3VsYXRlZCB1c2luZyArc3RybGVuKCkrLgorICB0eXBlLCBjb25zdCBj
aGFyICpkYXRhKSsg4oCTIEFkZHMgbmV3ICtzdHJ1Y3QgcnRhdHRyKyBzdHJpbmcgYXR0cmlidXRl
IHRvIHRoZQorICBsYXN0IG1lc3NhZ2UgaW4gK2N0eCsgYnVmZmVyLiBQYXJhbWV0ZXJzIGFuZCBy
ZXR1cm4gdmFsdWUgYXJlIHRoZSBzYW1lIGFzCisgIGZvciArUlROTF9BRERfQVRUUigpKywgZXhj
ZXB0IHRoZSBwYXlsb2FkIGxlbmd0aCBpcyBjYWxjdWxhdGVkIHVzaW5nCisgICtzdHJsZW4oKSsu
CiAKIC0gK2ludCBSVE5MX0FERF9BVFRSX0xJU1Qoc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQg
KmN0eCwgY29uc3Qgc3RydWN0Ci0gIHRzdF9ydG5sX2F0dHJfbGlzdCAqbGlzdCkrIOKAkyBBZGRz
IGEgbGlzdCBvZiBhdHRyaWJ1dGVzIHRvIHRoZSBsYXN0IG1lc3NhZ2UKLSAgaW4gK2N0eCsgYnVm
ZmVyLiBTZWUgZGVzY3JpcHRpb24gb2YgK3N0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3QrIGFuZAot
ICArTkVUTElOS19BRERfTUVTU0FHRSgpKyBhYm92ZS4gIFJldHVybnMgdGhlIG51bWJlciBvZiBh
ZGRlZCBhdHRyaWJ1dGVzIG9uCi0gIHN1Y2Nlc3MgKG5lc3RlZCBhdHRyaWJ1dGVzIGFyZSBub3Qg
Y291bnRlZCksIC0xIG9uIGVycm9yLgorICB0c3RfbmV0bGlua19hdHRyX2xpc3QgKmxpc3QpKyDi
gJMgQWRkcyBhIGxpc3Qgb2YgK3N0cnVjdCBydGF0dHIrIGF0dHJpYnV0ZXMKKyAgdG8gdGhlIGxh
c3QgbWVzc2FnZSBpbiArY3R4KyBidWZmZXIuIFNlZSBkZXNjcmlwdGlvbiBvZgorICArc3RydWN0
IHRzdF9uZXRsaW5rX2F0dHJfbGlzdCsgYW5kICtORVRMSU5LX0FERF9NRVNTQUdFKCkrIGFib3Zl
LiBSZXR1cm5zCisgIHRoZSBudW1iZXIgb2YgYWRkZWQgYXR0cmlidXRlcyBvbiBzdWNjZXNzIChu
ZXN0ZWQgYXR0cmlidXRlcyBhcmUgbm90CisgIGNvdW50ZWQpLCAtMSBvbiBlcnJvci4KIAogRXhh
bXBsZSBVc2FnZQogKysrKysrKysrKysrKwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS90c3RfbmV0ZGV2
aWNlLmggYi9pbmNsdWRlL3RzdF9uZXRkZXZpY2UuaAppbmRleCA0MjM5ZDA5NjAuLjhkNDAxNDhh
NiAxMDA2NDQKLS0tIGEvaW5jbHVkZS90c3RfbmV0ZGV2aWNlLmgKKysrIGIvaW5jbHVkZS90c3Rf
bmV0ZGV2aWNlLmgKQEAgLTEzMiw3ICsxMzIsNyBAQCBpbnQgdHN0X25ldGRldl9yZW1vdmVfcm91
dGVfaW5ldChjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAogaW50IHRzdF9uZXRk
ZXZfYWRkX3FkaXNjKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sIGludCBzdHJp
Y3QsCiAJY29uc3QgY2hhciAqaWZuYW1lLCB1bnNpZ25lZCBpbnQgZmFtaWx5LCB1bnNpZ25lZCBp
bnQgcGFyZW50LAogCXVuc2lnbmVkIGludCBoYW5kbGUsIGNvbnN0IGNoYXIgKnFkX2tpbmQsCi0J
Y29uc3Qgc3RydWN0IHRzdF9ydG5sX2F0dHJfbGlzdCAqY29uZmlnKTsKKwljb25zdCBzdHJ1Y3Qg
dHN0X25ldGxpbmtfYXR0cl9saXN0ICpjb25maWcpOwogI2RlZmluZSBORVRERVZfQUREX1FESVND
KGlmbmFtZSwgZmFtaWx5LCBwYXJlbnQsIGhhbmRsZSwgcWRfa2luZCwgY29uZmlnKSBcCiAJdHN0
X25ldGRldl9hZGRfcWRpc2MoX19GSUxFX18sIF9fTElORV9fLCAxLCAoaWZuYW1lKSwgKGZhbWls
eSksIFwKIAkJKHBhcmVudCksIChoYW5kbGUpLCAocWRfa2luZCksIChjb25maWcpKQpAQCAtMTU0
LDcgKzE1NCw3IEBAIGludCB0c3RfbmV0ZGV2X3JlbW92ZV9xZGlzYyhjb25zdCBjaGFyICpmaWxl
LCBjb25zdCBpbnQgbGluZW5vLCBpbnQgc3RyaWN0LAogaW50IHRzdF9uZXRkZXZfYWRkX3RyYWZm
aWNfY2xhc3MoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKIAlpbnQgc3RyaWN0
LCBjb25zdCBjaGFyICppZm5hbWUsIHVuc2lnbmVkIGludCBwYXJlbnQsCiAJdW5zaWduZWQgaW50
IGhhbmRsZSwgY29uc3QgY2hhciAqcWRfa2luZCwKLQljb25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0
cl9saXN0ICpjb25maWcpOworCWNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19hdHRyX2xpc3QgKmNv
bmZpZyk7CiAjZGVmaW5lIE5FVERFVl9BRERfVFJBRkZJQ19DTEFTUyhpZm5hbWUsIHBhcmVudCwg
aGFuZGxlLCBxZF9raW5kLCBjb25maWcpIFwKIAl0c3RfbmV0ZGV2X2FkZF90cmFmZmljX2NsYXNz
KF9fRklMRV9fLCBfX0xJTkVfXywgMSwgKGlmbmFtZSksIFwKIAkJKHBhcmVudCksIChoYW5kbGUp
LCAocWRfa2luZCksIChjb25maWcpKQpAQCAtMTczLDcgKzE3Myw3IEBAIGludCB0c3RfbmV0ZGV2
X3JlbW92ZV90cmFmZmljX2NsYXNzKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8s
CiBpbnQgdHN0X25ldGRldl9hZGRfdHJhZmZpY19maWx0ZXIoY29uc3QgY2hhciAqZmlsZSwgY29u
c3QgaW50IGxpbmVubywKIAlpbnQgc3RyaWN0LCBjb25zdCBjaGFyICppZm5hbWUsIHVuc2lnbmVk
IGludCBwYXJlbnQsCiAJdW5zaWduZWQgaW50IGhhbmRsZSwgdW5zaWduZWQgaW50IHByb3RvY29s
LCB1bnNpZ25lZCBpbnQgcHJpb3JpdHksCi0JY29uc3QgY2hhciAqZl9raW5kLCBjb25zdCBzdHJ1
Y3QgdHN0X3J0bmxfYXR0cl9saXN0ICpjb25maWcpOworCWNvbnN0IGNoYXIgKmZfa2luZCwgY29u
c3Qgc3RydWN0IHRzdF9uZXRsaW5rX2F0dHJfbGlzdCAqY29uZmlnKTsKICNkZWZpbmUgTkVUREVW
X0FERF9UUkFGRklDX0ZJTFRFUihpZm5hbWUsIHBhcmVudCwgaGFuZGxlLCBwcm90b2NvbCwgcHJp
b3JpdHksIFwKIAlmX2tpbmQsIGNvbmZpZykgXAogCXRzdF9uZXRkZXZfYWRkX3RyYWZmaWNfZmls
dGVyKF9fRklMRV9fLCBfX0xJTkVfXywgMSwgKGlmbmFtZSksIFwKZGlmZiAtLWdpdCBhL2luY2x1
ZGUvdHN0X25ldGxpbmsuaCBiL2luY2x1ZGUvdHN0X25ldGxpbmsuaAppbmRleCBmMTBmMWNmNWQu
LjdkOTZmZDcxMSAxMDA2NDQKLS0tIGEvaW5jbHVkZS90c3RfbmV0bGluay5oCisrKyBiL2luY2x1
ZGUvdHN0X25ldGxpbmsuaApAQCAtOSwxMSArOSwxMSBAQAogCiBzdHJ1Y3QgdHN0X25ldGxpbmtf
Y29udGV4dDsKIAotc3RydWN0IHRzdF9ydG5sX2F0dHJfbGlzdCB7CitzdHJ1Y3QgdHN0X25ldGxp
bmtfYXR0cl9saXN0IHsKIAl1bnNpZ25lZCBzaG9ydCB0eXBlOwogCWNvbnN0IHZvaWQgKmRhdGE7
CiAJc3NpemVfdCBsZW47Ci0JY29uc3Qgc3RydWN0IHRzdF9ydG5sX2F0dHJfbGlzdCAqc3VibGlz
dDsKKwljb25zdCBzdHJ1Y3QgdHN0X25ldGxpbmtfYXR0cl9saXN0ICpzdWJsaXN0OwogfTsKIAog
c3RydWN0IHRzdF9uZXRsaW5rX21lc3NhZ2UgewpAQCAtNzIsMjUgKzcyLDQ5IEBAIGludCB0c3Rf
bmV0bGlua19hZGRfbWVzc2FnZShjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAog
CXRzdF9uZXRsaW5rX2FkZF9tZXNzYWdlKF9fRklMRV9fLCBfX0xJTkVfXywgKGN0eCksIChoZWFk
ZXIpLCBcCiAJCShwYXlsb2FkKSwgKHBzaXplKSkKIAotLyogQWRkIGFyYml0cmFyeSBhdHRyaWJ1
dGUgdG8gbGFzdCBtZXNzYWdlICovCisvKiBBZGQgYXJiaXRyYXJ5IG5sYXR0ciBhdHRyaWJ1dGUg
dG8gbGFzdCBtZXNzYWdlICovCitpbnQgdHN0X25ldGxpbmtfYWRkX2F0dHIoY29uc3QgY2hhciAq
ZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4
LCB1bnNpZ25lZCBzaG9ydCB0eXBlLCBjb25zdCB2b2lkICpkYXRhLAorCXVuc2lnbmVkIHNob3J0
IGxlbik7CisjZGVmaW5lIE5FVExJTktfQUREX0FUVFIoY3R4LCB0eXBlLCBkYXRhLCBsZW4pIFwK
Kwl0c3RfbmV0bGlua19hZGRfYXR0cihfX0ZJTEVfXywgX19MSU5FX18sIChjdHgpLCAodHlwZSks
IChkYXRhKSwgKGxlbikpCisKKy8qIEFkZCBzdHJpbmcgbmxhdHRyIGF0dHJpYnV0ZSB0byBsYXN0
IG1lc3NhZ2UgKi8KK2ludCB0c3RfbmV0bGlua19hZGRfYXR0cl9zdHJpbmcoY29uc3QgY2hhciAq
ZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4
LCB1bnNpZ25lZCBzaG9ydCB0eXBlLCBjb25zdCBjaGFyICpkYXRhKTsKKyNkZWZpbmUgTkVUTElO
S19BRERfQVRUUl9TVFJJTkcoY3R4LCB0eXBlLCBkYXRhKSBcCisJdHN0X25ldGxpbmtfYWRkX2F0
dHJfc3RyaW5nKF9fRklMRV9fLCBfX0xJTkVfXywgKGN0eCksICh0eXBlKSwgKGRhdGEpKQorCisv
KgorICogQWRkIGxpc3Qgb2YgYXJiaXRyYXJ5IG5sYXR0ciBhdHRyaWJ1dGVzIHRvIGxhc3QgbWVz
c2FnZS4gVGhlIGxpc3QgaXMKKyAqIHRlcm1pbmF0ZWQgYnkgYXR0cmlidXRlIHdpdGggbmVnYXRp
dmUgbGVuZ3RoLiBOZXN0ZWQgc3VibGlzdHMgYXJlIHN1cHBvcnRlZC4KKyAqLworaW50IHRzdF9u
ZXRsaW5rX2FkZF9hdHRyX2xpc3QoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywK
KwlzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4LAorCWNvbnN0IHN0cnVjdCB0c3RfbmV0
bGlua19hdHRyX2xpc3QgKmxpc3QpOworI2RlZmluZSBORVRMSU5LX0FERF9BVFRSX0xJU1QoY3R4
LCBsaXN0KSBcCisJdHN0X25ldGxpbmtfYWRkX2F0dHJfbGlzdChfX0ZJTEVfXywgX19MSU5FX18s
IChjdHgpLCAobGlzdCkpCisKKy8qIEFkZCBhcmJpdHJhcnkgcnRhdHRyIGF0dHJpYnV0ZSB0byBs
YXN0IG1lc3NhZ2UgKi8KIGludCB0c3RfcnRubF9hZGRfYXR0cihjb25zdCBjaGFyICpmaWxlLCBj
b25zdCBpbnQgbGluZW5vLAogCXN0cnVjdCB0c3RfbmV0bGlua19jb250ZXh0ICpjdHgsIHVuc2ln
bmVkIHNob3J0IHR5cGUsIGNvbnN0IHZvaWQgKmRhdGEsCiAJdW5zaWduZWQgc2hvcnQgbGVuKTsK
ICNkZWZpbmUgUlROTF9BRERfQVRUUihjdHgsIHR5cGUsIGRhdGEsIGxlbikgXAogCXRzdF9ydG5s
X2FkZF9hdHRyKF9fRklMRV9fLCBfX0xJTkVfXywgKGN0eCksICh0eXBlKSwgKGRhdGEpLCAobGVu
KSkKIAotLyogQWRkIHN0cmluZyBhdHRyaWJ1dGUgdG8gbGFzdCBtZXNzYWdlICovCisvKiBBZGQg
c3RyaW5nIHJ0YXR0ciBhdHRyaWJ1dGUgdG8gbGFzdCBtZXNzYWdlICovCiBpbnQgdHN0X3J0bmxf
YWRkX2F0dHJfc3RyaW5nKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCiAJc3Ry
dWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCwgdW5zaWduZWQgc2hvcnQgdHlwZSwgY29uc3Qg
Y2hhciAqZGF0YSk7CiAjZGVmaW5lIFJUTkxfQUREX0FUVFJfU1RSSU5HKGN0eCwgdHlwZSwgZGF0
YSkgXAogCXRzdF9ydG5sX2FkZF9hdHRyX3N0cmluZyhfX0ZJTEVfXywgX19MSU5FX18sIChjdHgp
LCAodHlwZSksIChkYXRhKSkKIAogLyoKLSAqIEFkZCBsaXN0IG9mIGFyYml0cmFyeSBhdHRyaWJ1
dGVzIHRvIGxhc3QgbWVzc2FnZS4gVGhlIGxpc3QgaXMgdGVybWluYXRlZAotICogYnkgYXR0cmli
dXRlIHdpdGggbmVnYXRpdmUgbGVuZ3RoLiBOZXN0ZWQgc3VibGlzdHMgYXJlIHN1cHBvcnRlZC4K
KyAqIEFkZCBsaXN0IG9mIGFyYml0cmFyeSBydGF0dHIgYXR0cmlidXRlcyB0byBsYXN0IG1lc3Nh
Z2UuIFRoZSBsaXN0IGlzCisgKiB0ZXJtaW5hdGVkIGJ5IGF0dHJpYnV0ZSB3aXRoIG5lZ2F0aXZl
IGxlbmd0aC4gTmVzdGVkIHN1Ymxpc3RzIGFyZSBzdXBwb3J0ZWQuCiAgKi8KIGludCB0c3RfcnRu
bF9hZGRfYXR0cl9saXN0KGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCi0Jc3Ry
dWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCwgY29uc3Qgc3RydWN0IHRzdF9ydG5sX2F0dHJf
bGlzdCAqbGlzdCk7CisJc3RydWN0IHRzdF9uZXRsaW5rX2NvbnRleHQgKmN0eCwKKwljb25zdCBz
dHJ1Y3QgdHN0X25ldGxpbmtfYXR0cl9saXN0ICpsaXN0KTsKICNkZWZpbmUgUlROTF9BRERfQVRU
Ul9MSVNUKGN0eCwgbGlzdCkgXAogCXRzdF9ydG5sX2FkZF9hdHRyX2xpc3QoX19GSUxFX18sIF9f
TElORV9fLCAoY3R4KSwgKGxpc3QpKQogCmRpZmYgLS1naXQgYS9saWIvdHN0X25ldGRldmljZS5j
IGIvbGliL3RzdF9uZXRkZXZpY2UuYwppbmRleCA2Zjg2YjgwODkuLjEwNDI0NjZiZiAxMDA2NDQK
LS0tIGEvbGliL3RzdF9uZXRkZXZpY2UuYworKysgYi9saWIvdHN0X25ldGRldmljZS5jCkBAIC0x
MDUsMTcgKzEwNSwxNyBAQCBpbnQgdHN0X2NyZWF0ZV92ZXRoX3BhaXIoY29uc3QgY2hhciAqZmls
ZSwgY29uc3QgaW50IGxpbmVubywgaW50IHN0cmljdCwKIAlpbnQgcmV0OwogCXN0cnVjdCBpZmlu
Zm9tc2cgaW5mbyA9IHsgLmlmaV9mYW1pbHkgPSBBRl9VTlNQRUMgfTsKIAlzdHJ1Y3QgdHN0X25l
dGxpbmtfY29udGV4dCAqY3R4OwotCXN0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3QgcGVlcmluZm9b
XSA9IHsKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfYXR0cl9saXN0IHBlZXJpbmZvW10gPSB7CiAJCXtJ
RkxBX0lGTkFNRSwgaWZuYW1lMiwgc3RybGVuKGlmbmFtZTIpICsgMSwgTlVMTH0sCiAJCXswLCBO
VUxMLCAtMSwgTlVMTH0KIAl9OwotCXN0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3QgcGVlcmRhdGFb
XSA9IHsKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfYXR0cl9saXN0IHBlZXJkYXRhW10gPSB7CiAJCXtW
RVRIX0lORk9fUEVFUiwgJmluZm8sIHNpemVvZihpbmZvKSwgcGVlcmluZm99LAogCQl7MCwgTlVM
TCwgLTEsIE5VTEx9CiAJfTsKLQlzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0IGF0dHJzW10gPSB7
CisJc3RydWN0IHRzdF9uZXRsaW5rX2F0dHJfbGlzdCBhdHRyc1tdID0gewogCQl7SUZMQV9JRk5B
TUUsIGlmbmFtZTEsIHN0cmxlbihpZm5hbWUxKSArIDEsIE5VTEx9LAotCQl7SUZMQV9MSU5LSU5G
TywgTlVMTCwgMCwgKGNvbnN0IHN0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3RbXSl7CisJCXtJRkxB
X0xJTktJTkZPLCBOVUxMLCAwLCAoY29uc3Qgc3RydWN0IHRzdF9uZXRsaW5rX2F0dHJfbGlzdFtd
KXsKIAkJCXtJRkxBX0lORk9fS0lORCwgInZldGgiLCA0LCBOVUxMfSwKIAkJCXtJRkxBX0lORk9f
REFUQSwgTlVMTCwgMCwgcGVlcmRhdGF9LAogCQkJezAsIE5VTEwsIC0xLCBOVUxMfQpAQCAtMTY0
LDkgKzE2NCw5IEBAIGludCB0c3RfbmV0ZGV2X2FkZF9kZXZpY2UoY29uc3QgY2hhciAqZmlsZSwg
Y29uc3QgaW50IGxpbmVubywgaW50IHN0cmljdCwKIAlpbnQgcmV0OwogCXN0cnVjdCBpZmluZm9t
c2cgaW5mbyA9IHsgLmlmaV9mYW1pbHkgPSBBRl9VTlNQRUMgfTsKIAlzdHJ1Y3QgdHN0X25ldGxp
bmtfY29udGV4dCAqY3R4OwotCXN0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3QgYXR0cnNbXSA9IHsK
KwlzdHJ1Y3QgdHN0X25ldGxpbmtfYXR0cl9saXN0IGF0dHJzW10gPSB7CiAJCXtJRkxBX0lGTkFN
RSwgaWZuYW1lLCBzdHJsZW4oaWZuYW1lKSArIDEsIE5VTEx9LAotCQl7SUZMQV9MSU5LSU5GTywg
TlVMTCwgMCwgKGNvbnN0IHN0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3RbXSl7CisJCXtJRkxBX0xJ
TktJTkZPLCBOVUxMLCAwLCAoY29uc3Qgc3RydWN0IHRzdF9uZXRsaW5rX2F0dHJfbGlzdFtdKXsK
IAkJCXtJRkxBX0lORk9fS0lORCwgZGV2dHlwZSwgc3RybGVuKGRldnR5cGUpLCBOVUxMfSwKIAkJ
CXswLCBOVUxMLCAtMSwgTlVMTH0KIAkJfX0sCkBAIC01MjcsNyArNTI3LDcgQEAgc3RhdGljIGlu
dCBtb2RpZnlfcWRpc2MoY29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywgaW50IHN0
cmljdCwKIAljb25zdCBjaGFyICpvYmplY3QsIHVuc2lnbmVkIGludCBhY3Rpb24sIHVuc2lnbmVk
IGludCBubF9mbGFncywKIAljb25zdCBjaGFyICppZm5hbWUsIHVuc2lnbmVkIGludCBmYW1pbHks
IHVuc2lnbmVkIGludCBwYXJlbnQsCiAJdW5zaWduZWQgaW50IGhhbmRsZSwgdW5zaWduZWQgaW50
IGluZm8sIGNvbnN0IGNoYXIgKnFkX2tpbmQsCi0JY29uc3Qgc3RydWN0IHRzdF9ydG5sX2F0dHJf
bGlzdCAqY29uZmlnKQorCWNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19hdHRyX2xpc3QgKmNvbmZp
ZykKIHsKIAlzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4OwogCWludCByZXQ7CkBAIC01
ODUsNyArNTg1LDcgQEAgc3RhdGljIGludCBtb2RpZnlfcWRpc2MoY29uc3QgY2hhciAqZmlsZSwg
Y29uc3QgaW50IGxpbmVubywgaW50IHN0cmljdCwKIGludCB0c3RfbmV0ZGV2X2FkZF9xZGlzYyhj
b25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLCBpbnQgc3RyaWN0LAogCWNvbnN0IGNo
YXIgKmlmbmFtZSwgdW5zaWduZWQgaW50IGZhbWlseSwgdW5zaWduZWQgaW50IHBhcmVudCwKIAl1
bnNpZ25lZCBpbnQgaGFuZGxlLCBjb25zdCBjaGFyICpxZF9raW5kLAotCWNvbnN0IHN0cnVjdCB0
c3RfcnRubF9hdHRyX2xpc3QgKmNvbmZpZykKKwljb25zdCBzdHJ1Y3QgdHN0X25ldGxpbmtfYXR0
cl9saXN0ICpjb25maWcpCiB7CiAJcmV0dXJuIG1vZGlmeV9xZGlzYyhmaWxlLCBsaW5lbm8sIHN0
cmljdCwgInF1ZXVlaW5nIGRpc2NpcGxpbmUiLAogCQlSVE1fTkVXUURJU0MsIE5MTV9GX0NSRUFU
RSB8IE5MTV9GX0VYQ0wsIGlmbmFtZSwgZmFtaWx5LApAQCAtNjA0LDcgKzYwNCw3IEBAIGludCB0
c3RfbmV0ZGV2X3JlbW92ZV9xZGlzYyhjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5v
LCBpbnQgc3RyaWN0LAogaW50IHRzdF9uZXRkZXZfYWRkX3RyYWZmaWNfY2xhc3MoY29uc3QgY2hh
ciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKIAlpbnQgc3RyaWN0LCBjb25zdCBjaGFyICppZm5h
bWUsIHVuc2lnbmVkIGludCBwYXJlbnQsCiAJdW5zaWduZWQgaW50IGhhbmRsZSwgY29uc3QgY2hh
ciAqcWRfa2luZCwKLQljb25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0ICpjb25maWcpCisJ
Y29uc3Qgc3RydWN0IHRzdF9uZXRsaW5rX2F0dHJfbGlzdCAqY29uZmlnKQogewogCXJldHVybiBt
b2RpZnlfcWRpc2MoZmlsZSwgbGluZW5vLCBzdHJpY3QsICJ0cmFmZmljIGNsYXNzIiwKIAkJUlRN
X05FV1RDTEFTUywgTkxNX0ZfQ1JFQVRFIHwgTkxNX0ZfRVhDTCwgaWZuYW1lLCBBRl9VTlNQRUMs
CkBAIC02MjMsNyArNjIzLDcgQEAgaW50IHRzdF9uZXRkZXZfcmVtb3ZlX3RyYWZmaWNfY2xhc3Mo
Y29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKIGludCB0c3RfbmV0ZGV2X2FkZF90
cmFmZmljX2ZpbHRlcihjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZW5vLAogCWludCBz
dHJpY3QsIGNvbnN0IGNoYXIgKmlmbmFtZSwgdW5zaWduZWQgaW50IHBhcmVudCwKIAl1bnNpZ25l
ZCBpbnQgaGFuZGxlLCB1bnNpZ25lZCBpbnQgcHJvdG9jb2wsIHVuc2lnbmVkIGludCBwcmlvcml0
eSwKLQljb25zdCBjaGFyICpmX2tpbmQsIGNvbnN0IHN0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3Qg
KmNvbmZpZykKKwljb25zdCBjaGFyICpmX2tpbmQsIGNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19h
dHRyX2xpc3QgKmNvbmZpZykKIHsKIAlyZXR1cm4gbW9kaWZ5X3FkaXNjKGZpbGUsIGxpbmVubywg
c3RyaWN0LCAidHJhZmZpYyBmaWx0ZXIiLAogCQlSVE1fTkVXVEZJTFRFUiwgTkxNX0ZfQ1JFQVRF
IHwgTkxNX0ZfRVhDTCwgaWZuYW1lLCBBRl9VTlNQRUMsCmRpZmYgLS1naXQgYS9saWIvdHN0X25l
dGxpbmsuYyBiL2xpYi90c3RfbmV0bGluay5jCmluZGV4IGJkMDVkZjgxYS4uN2JjOThhZjU2IDEw
MDY0NAotLS0gYS9saWIvdHN0X25ldGxpbmsuYworKysgYi9saWIvdHN0X25ldGxpbmsuYwpAQCAt
MjgzLDYgKzI4Myw4NiBAQCBpbnQgdHN0X25ldGxpbmtfYWRkX21lc3NhZ2UoY29uc3QgY2hhciAq
ZmlsZSwgY29uc3QgaW50IGxpbmVubywKIAlyZXR1cm4gMTsKIH0KIAoraW50IHRzdF9uZXRsaW5r
X2FkZF9hdHRyKGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCisJc3RydWN0IHRz
dF9uZXRsaW5rX2NvbnRleHQgKmN0eCwgdW5zaWduZWQgc2hvcnQgdHlwZSwKKwljb25zdCB2b2lk
ICpkYXRhLCB1bnNpZ25lZCBzaG9ydCBsZW4pCit7CisJc2l6ZV90IHNpemUgPSBOTEFfSERSTEVO
ICsgTkxBX0FMSUdOKGxlbik7CisJc3RydWN0IG5sYXR0ciAqYXR0cjsKKworCWlmICghY3R4LT5j
dXJtc2cpIHsKKwkJdHN0X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSywKKwkJCSIlcygpOiBObyBt
ZXNzYWdlIHRvIGFkZCBhdHRyaWJ1dGVzIHRvIiwgX19mdW5jX18pOworCQlyZXR1cm4gMDsKKwl9
CisKKwlpZiAoIW5ldGxpbmtfZ3Jvd19idWZmZXIoZmlsZSwgbGluZW5vLCBjdHgsIHNpemUpKQor
CQlyZXR1cm4gMDsKKworCXNpemUgPSBOTE1TR19BTElHTihjdHgtPmN1cm1zZy0+bmxtc2dfbGVu
KTsKKwlhdHRyID0gKHN0cnVjdCBubGF0dHIgKikoKChjaGFyICopY3R4LT5jdXJtc2cpICsgc2l6
ZSk7CisJYXR0ci0+bmxhX3R5cGUgPSB0eXBlOworCWF0dHItPm5sYV9sZW4gPSBOTEFfSERSTEVO
ICsgbGVuOworCW1lbWNweSgoKGNoYXIgKilhdHRyKSArIE5MQV9IRFJMRU4sIGRhdGEsIGxlbik7
CisJY3R4LT5jdXJtc2ctPm5sbXNnX2xlbiA9IHNpemUgKyBhdHRyLT5ubGFfbGVuOworCWN0eC0+
ZGF0YWxlbiA9IE5MTVNHX0FMSUdOKGN0eC0+ZGF0YWxlbikgKyBhdHRyLT5ubGFfbGVuOworCisJ
cmV0dXJuIDE7Cit9CisKK2ludCB0c3RfbmV0bGlua19hZGRfYXR0cl9zdHJpbmcoY29uc3QgY2hh
ciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAq
Y3R4LCB1bnNpZ25lZCBzaG9ydCB0eXBlLAorCWNvbnN0IGNoYXIgKmRhdGEpCit7CisJcmV0dXJu
IHRzdF9uZXRsaW5rX2FkZF9hdHRyKGZpbGUsIGxpbmVubywgY3R4LCB0eXBlLCBkYXRhLAorCQlz
dHJsZW4oZGF0YSkgKyAxKTsKK30KKworaW50IHRzdF9uZXRsaW5rX2FkZF9hdHRyX2xpc3QoY29u
c3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmVubywKKwlzdHJ1Y3QgdHN0X25ldGxpbmtfY29u
dGV4dCAqY3R4LAorCWNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19hdHRyX2xpc3QgKmxpc3QpCit7
CisJaW50IGksIHJldDsKKwlzaXplX3Qgb2Zmc2V0OworCisJZm9yIChpID0gMDsgbGlzdFtpXS5s
ZW4gPj0gMDsgaSsrKSB7CisJCWlmIChsaXN0W2ldLmxlbiA+IFVTSFJUX01BWCkgeworCQkJdHN0
X2Jya18oZmlsZSwgbGluZW5vLCBUQlJPSywKKwkJCQkiJXMoKTogQXR0cmlidXRlIHZhbHVlIHRv
byBsb25nIiwgX19mdW5jX18pOworCQkJcmV0dXJuIC0xOworCQl9CisKKwkJb2Zmc2V0ID0gTkxN
U0dfQUxJR04oY3R4LT5kYXRhbGVuKTsKKwkJcmV0ID0gdHN0X25ldGxpbmtfYWRkX2F0dHIoZmls
ZSwgbGluZW5vLCBjdHgsIGxpc3RbaV0udHlwZSwKKwkJCWxpc3RbaV0uZGF0YSwgbGlzdFtpXS5s
ZW4pOworCisJCWlmICghcmV0KQorCQkJcmV0dXJuIC0xOworCisJCWlmIChsaXN0W2ldLnN1Ymxp
c3QpIHsKKwkJCXN0cnVjdCBydGF0dHIgKmF0dHI7CisKKwkJCXJldCA9IHRzdF9uZXRsaW5rX2Fk
ZF9hdHRyX2xpc3QoZmlsZSwgbGluZW5vLCBjdHgsCisJCQkJbGlzdFtpXS5zdWJsaXN0KTsKKwor
CQkJaWYgKHJldCA8IDApCisJCQkJcmV0dXJuIHJldDsKKworCQkJYXR0ciA9IChzdHJ1Y3QgcnRh
dHRyICopKGN0eC0+YnVmZmVyICsgb2Zmc2V0KTsKKworCQkJaWYgKGN0eC0+ZGF0YWxlbiAtIG9m
ZnNldCA+IFVTSFJUX01BWCkgeworCQkJCXRzdF9icmtfKGZpbGUsIGxpbmVubywgVEJST0ssCisJ
CQkJCSIlcygpOiBTdWJsaXN0IHRvbyBsb25nIiwgX19mdW5jX18pOworCQkJCXJldHVybiAtMTsK
KwkJCX0KKworCQkJYXR0ci0+cnRhX2xlbiA9IGN0eC0+ZGF0YWxlbiAtIG9mZnNldDsKKwkJfQor
CX0KKworCXJldHVybiBpOworfQorCiBpbnQgdHN0X3J0bmxfYWRkX2F0dHIoY29uc3QgY2hhciAq
ZmlsZSwgY29uc3QgaW50IGxpbmVubywKIAlzdHJ1Y3QgdHN0X25ldGxpbmtfY29udGV4dCAqY3R4
LCB1bnNpZ25lZCBzaG9ydCB0eXBlLAogCWNvbnN0IHZvaWQgKmRhdGEsIHVuc2lnbmVkIHNob3J0
IGxlbikKQEAgLTMyMCw3ICs0MDAsNyBAQCBpbnQgdHN0X3J0bmxfYWRkX2F0dHJfc3RyaW5nKGNv
bnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCiAKIGludCB0c3RfcnRubF9hZGRfYXR0
cl9saXN0KGNvbnN0IGNoYXIgKmZpbGUsIGNvbnN0IGludCBsaW5lbm8sCiAJc3RydWN0IHRzdF9u
ZXRsaW5rX2NvbnRleHQgKmN0eCwKLQljb25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0ICps
aXN0KQorCWNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19hdHRyX2xpc3QgKmxpc3QpCiB7CiAJaW50
IGksIHJldDsKIAlzaXplX3Qgb2Zmc2V0OwpkaWZmIC0tZ2l0IGEvdGVzdGNhc2VzL2N2ZS90Y2lu
ZGV4MDEuYyBiL3Rlc3RjYXNlcy9jdmUvdGNpbmRleDAxLmMKaW5kZXggZDQ0MWEyNDQ5Li5iNGYy
YmIwMWEgMTAwNjQ0Ci0tLSBhL3Rlc3RjYXNlcy9jdmUvdGNpbmRleDAxLmMKKysrIGIvdGVzdGNh
c2VzL2N2ZS90Y2luZGV4MDEuYwpAQCAtNDYsMTUgKzQ2LDE1IEBAIHN0YXRpYyBjb25zdCBzdHJ1
Y3QgdGNfaHRiX2dsb2IgcWRfb3B0ID0gewogc3RhdGljIHN0cnVjdCB0Y19odGJfb3B0IGNsc19v
cHQgPSB7fTsKIAogLyogaHRiIHFkaXNjIGFuZCBjbGFzcyBvcHRpb25zICovCi1zdGF0aWMgY29u
c3Qgc3RydWN0IHRzdF9ydG5sX2F0dHJfbGlzdCBxZF9jb25maWdbXSA9IHsKLQl7VENBX09QVElP
TlMsIE5VTEwsIDAsIChjb25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0W10peworc3RhdGlj
IGNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19hdHRyX2xpc3QgcWRfY29uZmlnW10gPSB7CisJe1RD
QV9PUFRJT05TLCBOVUxMLCAwLCAoY29uc3Qgc3RydWN0IHRzdF9uZXRsaW5rX2F0dHJfbGlzdFtd
KXsKIAkJe1RDQV9IVEJfSU5JVCwgJnFkX29wdCwgc2l6ZW9mKHFkX29wdCksIE5VTEx9LAogCQl7
MCwgTlVMTCwgLTEsIE5VTEx9CiAJfX0sCiAJezAsIE5VTEwsIC0xLCBOVUxMfQogfTsKLXN0YXRp
YyBjb25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0IGNsc19jb25maWdbXSA9IHsKLQl7VENB
X09QVElPTlMsIE5VTEwsIDAsIChjb25zdCBzdHJ1Y3QgdHN0X3J0bmxfYXR0cl9saXN0W10pewor
c3RhdGljIGNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19hdHRyX2xpc3QgY2xzX2NvbmZpZ1tdID0g
eworCXtUQ0FfT1BUSU9OUywgTlVMTCwgMCwgKGNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19hdHRy
X2xpc3RbXSl7CiAJCXtUQ0FfSFRCX1BBUk1TLCAmY2xzX29wdCwgc2l6ZW9mKGNsc19vcHQpLCBO
VUxMfSwKIAkJezAsIE5VTEwsIC0xLCBOVUxMfQogCX19LApAQCAtNjIsOCArNjIsOCBAQCBzdGF0
aWMgY29uc3Qgc3RydWN0IHRzdF9ydG5sX2F0dHJfbGlzdCBjbHNfY29uZmlnW10gPSB7CiB9Owog
CiAvKiB0Y2luZGV4IGZpbHRlciBvcHRpb25zICovCi1zdGF0aWMgY29uc3Qgc3RydWN0IHRzdF9y
dG5sX2F0dHJfbGlzdCBmX2NvbmZpZ1tdID0gewotCXtUQ0FfT1BUSU9OUywgTlVMTCwgMCwgKGNv
bnN0IHN0cnVjdCB0c3RfcnRubF9hdHRyX2xpc3RbXSl7CitzdGF0aWMgY29uc3Qgc3RydWN0IHRz
dF9uZXRsaW5rX2F0dHJfbGlzdCBmX2NvbmZpZ1tdID0geworCXtUQ0FfT1BUSU9OUywgTlVMTCwg
MCwgKGNvbnN0IHN0cnVjdCB0c3RfbmV0bGlua19hdHRyX2xpc3RbXSl7CiAJCXtUQ0FfVENJTkRF
WF9NQVNLLCAmbWFzaywgc2l6ZW9mKG1hc2spLCBOVUxMfSwKIAkJe1RDQV9UQ0lOREVYX1NISUZU
LCAmc2hpZnQsIHNpemVvZihzaGlmdCksIE5VTEx9LAogCQl7VENBX1RDSU5ERVhfQ0xBU1NJRCwg
JmNsc2lkLCBzaXplb2YoY2xzaWQpLCBOVUxMfSwKLS0gCjIuNDIuMQoKCi0tIApNYWlsaW5nIGxp
c3QgaW5mbzogaHR0cHM6Ly9saXN0cy5saW51eC5pdC9saXN0aW5mby9sdHAK
