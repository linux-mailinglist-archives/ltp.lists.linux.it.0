Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [IPv6:2001:1418:10:5::2])
	by mail.lfdr.de (Postfix) with ESMTPS id C3E89ACEF9C
	for <lists+linux-ltp@lfdr.de>; Thu,  5 Jun 2025 14:53:44 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=lists.linux.it;
 i=@lists.linux.it; q=dns/txt; s=picard; t=1749128024; h=date :
 mime-version : message-id : references : in-reply-to : to : subject :
 list-id : list-unsubscribe : list-archive : list-post : list-help :
 list-subscribe : from : reply-to : cc : content-type :
 content-transfer-encoding : sender : from;
 bh=1Anz5nIgUlMfsCHsw3vIpuRp2JQt4Gx3KzEHOTIhPlA=;
 b=ctwXCjAYlx25g62AVGlnSQIFtdot7PpMBroxSa6ItOg0mwjs7hGuLbnsEBTNowpqoWO13
 cfUWJSWW2JKUIaptKScv8Kmko4v4m9pM46C4NwXtap/EVtrJkw39IrMXe0Vyc+xZY4SN6l8
 MSMkLUF4Ts3jJDF2krLpAxaKuAVEXhA=
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id 811463CA44D
	for <lists+linux-ltp@lfdr.de>; Thu,  5 Jun 2025 14:53:44 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-3.smtp.seeweb.it (in-3.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::3])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (secp384r1))
 (No client certificate requested)
 by picard.linux.it (Postfix) with ESMTPS id A966F3CA3C5
 for <ltp@lists.linux.it>; Thu,  5 Jun 2025 14:52:34 +0200 (CEST)
Received: from mail-wm1-x32a.google.com (mail-wm1-x32a.google.com
 [IPv6:2a00:1450:4864:20::32a])
 (using TLSv1.3 with cipher TLS_AES_128_GCM_SHA256 (128/128 bits)
 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256)
 (No client certificate requested)
 by in-3.smtp.seeweb.it (Postfix) with ESMTPS id 590721A00F0D
 for <ltp@lists.linux.it>; Thu,  5 Jun 2025 14:52:33 +0200 (CEST)
Received: by mail-wm1-x32a.google.com with SMTP id
 5b1f17b1804b1-450ce671a08so5836585e9.3
 for <ltp@lists.linux.it>; Thu, 05 Jun 2025 05:52:33 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=suse.com; s=google; t=1749127952; x=1749732752; darn=lists.linux.it;
 h=cc:to:in-reply-to:references:message-id:content-transfer-encoding
 :mime-version:subject:date:from:from:to:cc:subject:date:message-id
 :reply-to; bh=wKeSSeXYBcnZRob1rTmy+CufjSOO98C3WVqKIcfuOKc=;
 b=FKGIV/8MrWg1LO9bR3IyZaHAtCzKHppnfpR7isji/XbjrLn9tK4T8eIiGZvtrlDGJJ
 3e7uT2Phw+Z41d2joZgVWp3ik9JAkzFxWZ7EMbhP+mzU3v41mcCFNoE+RwBT0TqIUTWD
 Ec+TeMlFYme/BH6q5f1m8rz5kD6j1j98zli8umiEK+VTa8YGIXO9OJodgPoCeM3lrMgN
 O+/EiCoYmjs9dm8EUIwr6pPn3uIwiNS37XN5gkMrgrJWMw2tZBhG/R07dRBaQ9sD7znj
 +K8HMpgjK1ZiCiCDRE9PhDJCLeM9gX6OjfJnxmPrVCknHK4rzxA9TDDte6qS991KzkZ5
 h/8g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20230601; t=1749127952; x=1749732752;
 h=cc:to:in-reply-to:references:message-id:content-transfer-encoding
 :mime-version:subject:date:from:x-gm-message-state:from:to:cc
 :subject:date:message-id:reply-to;
 bh=wKeSSeXYBcnZRob1rTmy+CufjSOO98C3WVqKIcfuOKc=;
 b=s2i3xy5c+GH9SnQeo+Kynak5n5wSBbeyvMTJaajPS2BmD1FF3uU/VZk8ABZu5OhmQn
 CCvrkEeT9b3C3eW36UWguEikJBgLN3L8QaiKlN+qUrWssBhvgZA38pPdpnLEbRb9mwuE
 3LKK88Bv4dRQubV7e33TAzs5NhHTqVX4Qd7uTMiHBj/NMjNKy1OjG1jBG3efJGJi4vRc
 NZHt74zafMnvoHxquMLo6LmvZFJ2ST7leVLCcONE9PoJO12sa717CNJ2trtCTwhRK7eP
 dR/B5s5xPCWjFocfwWSb9ENdDoV4Z4vkd8wb+YudejiWgl8riVqbKw8axW0M+YnktPuR
 nX5Q==
X-Gm-Message-State: AOJu0YymPAXB9ymcFjzBlqV6vtainLdLqUEctO78xumSe1PGVqhIgXh0
 wLaiiPix+3jwFB//e0f8JGyAUi5L+JhLgAqsTNlF7uLG4t7O9fg7aS+o/KW+b0K8RKd5hqGflIF
 6PQ/3
X-Gm-Gg: ASbGncuuircKXL6+d0NyW7Br9Y2stbAJqPO3jgn5MaonAn2UR/ZR+2w46PZB9PeLTfm
 i8y8XVlMyS1g8Bs3XKZyTRWxnx6N7TNDOd8QQlk0PXcbthllmND3LxEzVDx1Sw3LMvV6gAYctZg
 rK9S8bKKePCnp8ckPeX8QNRpPxuSJyY++XMcy9lmGQCkxMfJTqyjZHuxOhzq+tgkmBVRinlt1JX
 zniqGyzPRlnwga1XnX/QbCChthBnEyPOVWwdhtzcAN7QDbNfyiJ9Q33V4to0Mj/v156gpWzdqEl
 O0zwgiSIHHn7TwggFcbHAlAPFuWCIeMxSin7/94=
X-Google-Smtp-Source: AGHT+IFfgbYTylb33jifLRhl7WgwWUs16RKWx/JSRCF4m2PIooYD3cT0bwJC9Zk+isX3c6Bhpp5ksQ==
X-Received: by 2002:a05:6000:4202:b0:3a4:f900:21c4 with SMTP id
 ffacd0b85a97d-3a51d9329dfmr6086418f8f.26.1749127952185; 
 Thu, 05 Jun 2025 05:52:32 -0700 (PDT)
Received: from localhost ([189.99.237.136])
 by smtp.gmail.com with UTF8SMTPSA id
 a1e0cc1a2514c-87e2a27b97csm10599513241.3.2025.06.05.05.52.31
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 05 Jun 2025 05:52:31 -0700 (PDT)
Date: Thu, 05 Jun 2025 09:52:19 -0300
MIME-Version: 1.0
Message-Id: <20250605-conversions-mknod-v5-3-0b5cff90c21c@suse.com>
References: <20250605-conversions-mknod-v5-0-0b5cff90c21c@suse.com>
In-Reply-To: <20250605-conversions-mknod-v5-0-0b5cff90c21c@suse.com>
To: Linux Test Project <ltp@lists.linux.it>
X-Mailer: b4 0.14.2
X-Developer-Signature: v=1; a=openpgp-sha256; l=10906; i=rbm@suse.com;
 h=from:subject:message-id; bh=Z0LKvrLYpZ6IFKCWWCJZM8g6dQfPYgSMMw1tywVpces=;
 b=owEBbQKS/ZANAwAIAckLinxjhlimAcsmYgBoQZMCS+Yu1Skd7RDM1XRiCpsysMZ6yK0dKmrfZ
 Dn1zlZDeNWJAjMEAAEIAB0WIQQDCo6eQk7jwGVXh+HJC4p8Y4ZYpgUCaEGTAgAKCRDJC4p8Y4ZY
 pvHdEACcXV63EXj9jxqC9Nwox8/YWwt9WlHLmCilsT9GDZ3ibNRqkQ7INKNhkpDW1OJ2+8GznTu
 J3HoztFyGdS79/d8PklxYNKqSO8UONRP45rUju271qO3oEH/fmyyEkfZfuGsvQY1UrWEf/7S7nt
 DE/GcRHsxny7dW4Bvv/XO40YSpglRvt8wG4QbcsEXPmAXW3Bj7FG/Yo927hJNzfubKW6TxaOryc
 ux0eMXulBw6HKICFNaIBnyjoOxKQK5dpVxwq0gQBpKd/Ukx1dI+PGc5o3s1wP9YBziSiEnHDu1b
 S2oe796iiN1vPlf2dl31RdX9oahVij1JXppb3ieECjno4prcoiwzuRqFbtbkTaL0MnlGoivj5Ad
 Mhc1LWzhyCYTxZAzFse81s1xn6slIlZuhLtgf6ZwGvSVoSavg8Xuz1PGT3jnkdCJT7cE8+jUShW
 2oXlyYIZE2T1gyHAvYUgCs/kD3tZRGl/0i5bzONcXqAdTu6jugYF+URnYr4hz6hb+78vOwiFQSu
 /JLUyIsocdEv9720OoI9h2f1b3yk7HzUPXgd9QOztKMNQg5f1gKfelJlkFaxCQLdks+PzOquAN9
 A9R1cVE02FO9ens1SOXtQy3hE8L5FhioL0nuzbDWUT2xTZ31FEjBXXsb7T6jIE2SvtaYwfrVLgj
 J0JJIg2sd43GXkA==
X-Developer-Key: i=rbm@suse.com; a=openpgp;
 fpr=030A8E9E424EE3C0655787E1C90B8A7C638658A6
X-Spam-Status: No, score=0.1 required=7.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,DKIM_VALID_EF,SPF_HELO_NONE,SPF_PASS shortcircuit=no
 autolearn=disabled version=4.0.1
X-Spam-Checker-Version: SpamAssassin 4.0.1 (2024-03-25) on in-3.smtp.seeweb.it
X-Virus-Scanned: clamav-milter 1.0.7 at in-3.smtp.seeweb.it
X-Virus-Status: Clean
Subject: [LTP] [PATCH v5 3/8] syscalls/mknod03: Convert to new API
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
From: =?utf-8?q?Ricardo_B=2E_Marli=C3=A8re_via_ltp?= <ltp@lists.linux.it>
Reply-To: =?utf-8?B?UmljYXJkbyBCLiBNYXJsacOocmU=?= <rbm@suse.com>
Cc: =?utf-8?q?Ricardo_B=2E_Marli=C3=A8re?= <rbm@suse.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

RnJvbTogUmljYXJkbyBCLiBNYXJsacOocmUgPHJibUBzdXNlLmNvbT4KClNpZ25lZC1vZmYtYnk6
IFJpY2FyZG8gQi4gTWFybGnDqHJlIDxyYm1Ac3VzZS5jb20+Ci0tLQogdGVzdGNhc2VzL2tlcm5l
bC9zeXNjYWxscy9ta25vZC9ta25vZDAzLmMgfCAzMTMgKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMzkgaW5zZXJ0aW9ucygrKSwgMjc0IGRlbGV0aW9ucygt
KQoKZGlmZiAtLWdpdCBhL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvbWtub2QvbWtub2QwMy5j
IGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9ta25vZC9ta25vZDAzLmMKaW5kZXggN2VjYWRi
NWIzN2MzYWI3ZWRlZDkwYWE4YTZkMWUyN2YwNzIzNmIxZi4uMDBhNjEzM2Y3YTE1YzFkZDljOWU2
N2JhMDgzMTVmMjE4ZjE2ZDBkNiAxMDA2NDQKLS0tIGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxs
cy9ta25vZC9ta25vZDAzLmMKKysrIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9ta25vZC9t
a25vZDAzLmMKQEAgLTEsMjk2ICsxLDYxIEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjog
R1BMLTIuMC1vbmx5CiAvKgotICoKLSAqICAgQ29weXJpZ2h0IChjKSBJbnRlcm5hdGlvbmFsIEJ1
c2luZXNzIE1hY2hpbmVzICBDb3JwLiwgMjAwMQotICoKLSAqICAgVGhpcyBwcm9ncmFtIGlzIGZy
ZWUgc29mdHdhcmU7ICB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5Ci0gKiAg
IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMg
cHVibGlzaGVkIGJ5Ci0gKiAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2
ZXJzaW9uIDIgb2YgdGhlIExpY2Vuc2UsIG9yCi0gKiAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxh
dGVyIHZlcnNpb24uCi0gKgotICogICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhl
IGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKLSAqICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJB
TlRZOyAgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCi0gKiAgIE1FUkNIQU5U
QUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZQotICogICB0
aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KLSAqCi0gKiAg
IFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1Ymxp
YyBMaWNlbnNlCi0gKiAgIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtOyAgaWYgbm90LCB3cml0ZSB0
byB0aGUgRnJlZSBTb2Z0d2FyZQotICogICBGb3VuZGF0aW9uLCBJbmMuLCA1MSBGcmFua2xpbiBT
dHJlZXQsIEZpZnRoIEZsb29yLCBCb3N0b24sIE1BIDAyMTEwLTEzMDEgVVNBCisgKiBDb3B5cmln
aHQgKGMpIEludGVybmF0aW9uYWwgQnVzaW5lc3MgTWFjaGluZXMgQ29ycC4sIDIwMDEKKyAqCTA3
LzIwMDEgUG9ydGVkIGJ5IFdheW5lIEJveWVyCisgKiBDb3B5cmlnaHQgKGMpIDIwMjUgU1VTRSBM
TEMgUmljYXJkbyBCLiBNYXJsacOocmUgPHJibUBzdXNlLmNvbT4KICAqLwogCi0vKgotICogVGVz
dCBOYW1lOiBta25vZDAzCi0gKgotICogVGVzdCBEZXNjcmlwdGlvbjoKLSAqICBWZXJpZnkgdGhh
dCBta25vZCgyKSBzdWNjZWVkcyB3aGVuIHVzZWQgdG8gY3JlYXRlIGEgZmlsZXN5c3RlbQotICog
IG5vZGUgd2l0aCBzZXQgZ3JvdXAtSUQgYml0IHNldCBvbiBhIGRpcmVjdG9yeSB3aXRoIHNldCBn
cm91cC1JRCBiaXQgc2V0LgotICogIFRoZSBub2RlIGNyZWF0ZWQgc2hvdWxkIGhhdmUgc2V0IGdy
b3VwLUlEIGJpdCBzZXQgYW5kIGl0cyBnaWQgc2hvdWxkIGJlCi0gKiAgZXF1YWwgdG8gdGhlIGVm
ZmVjdGl2ZSBnaWQgb2YgdGhlIHByb2Nlc3MuCi0gKgotICogRXhwZWN0ZWQgUmVzdWx0OgotICog
IG1rbm9kKCkgc2hvdWxkIHJldHVybiB2YWx1ZSAwIG9uIHN1Y2Nlc3MgYW5kIG5vZGUgY3JlYXRl
ZCBzaG91bGQgaGF2ZQotICogIHNldCBncm91cC1JRCBiaXQgc2V0LCBpdHMgZ2lkIHNob3VsZCBi
ZSBlcXVhbCB0byB0aGUgZWZmZWN0aXZlIGdpZCBvZgotICogIHRoZSBwcm9jZXNzLgotICoKLSAq
IEFsZ29yaXRobToKLSAqICBTZXR1cDoKLSAqICAgU2V0dXAgc2lnbmFsIGhhbmRsaW5nLgotICog
ICBDcmVhdGUgdGVtcG9yYXJ5IGRpcmVjdG9yeS4KLSAqICAgUGF1c2UgZm9yIFNJR1VTUjEgaWYg
b3B0aW9uIHNwZWNpZmllZC4KLSAqCi0gKiAgVGVzdDoKLSAqICAgTG9vcCBpZiB0aGUgcHJvcGVy
IG9wdGlvbnMgYXJlIGdpdmVuLgotICogICBFeGVjdXRlIHN5c3RlbSBjYWxsCi0gKiAgIENoZWNr
IHJldHVybiBjb2RlLCBpZiBzeXN0ZW0gY2FsbCBmYWlsZWQgKHJldHVybj0tMSkKLSAqICAgCUxv
ZyB0aGUgZXJybm8gYW5kIElzc3VlIGEgRkFJTCBtZXNzYWdlLgotICogICBPdGhlcndpc2UsCi0g
KiAgIAlWZXJpZnkgdGhlIEZ1bmN0aW9uYWxpdHkgb2Ygc3lzdGVtIGNhbGwKLSAqICAgICAgaWYg
c3VjY2Vzc2Z1bCwKLSAqICAgICAgCUlzc3VlIEZ1bmN0aW9uYWxpdHktUGFzcyBtZXNzYWdlLgot
ICogICAgICBPdGhlcndpc2UsCi0gKgkJSXNzdWUgRnVuY3Rpb25hbGl0eS1GYWlsIG1lc3NhZ2Uu
Ci0gKiAgQ2xlYW51cDoKLSAqICAgUHJpbnQgZXJybm8gbG9nIGFuZC9vciB0aW1pbmcgc3RhdHMg
aWYgb3B0aW9ucyBnaXZlbgotICogICBEZWxldGUgdGhlIHRlbXBvcmFyeSBkaXJlY3RvcnkgY3Jl
YXRlZC4KLSAqCi0gKiBVc2FnZTogIDxmb3IgY29tbWFuZC1saW5lPgotICogIG1rbm9kMDMgWy1j
IG5dIFstZl0gWy1pIG5dIFstSSB4XSBbLVAgeF0gWy10XQotICogICAgIHdoZXJlLCAgLWMgbiA6
IFJ1biBuIGNvcGllcyBjb25jdXJyZW50bHkuCi0gKiAgICAgICAgICAgICAtZiAgIDogVHVybiBv
ZmYgZnVuY3Rpb25hbGl0eSBUZXN0aW5nLgotICoJICAgICAgIC1pIG4gOiBFeGVjdXRlIHRlc3Qg
biB0aW1lcy4KLSAqCSAgICAgICAtSSB4IDogRXhlY3V0ZSB0ZXN0IGZvciB4IHNlY29uZHMuCi0g
KgkgICAgICAgLVAgeCA6IFBhdXNlIGZvciB4IHNlY29uZHMgYmV0d2VlbiBpdGVyYXRpb25zLgot
ICoJICAgICAgIC10ICAgOiBUdXJuIG9uIHN5c2NhbGwgdGltaW5nLgotICoKLSAqIEhJU1RPUlkK
LSAqCTA3LzIwMDEgUG9ydGVkIGJ5IFdheW5lIEJveWVyCi0gKgotICogUkVTVFJJQ1RJT05TOgot
ICogIFRoaXMgdGVzdCBzaG91bGQgYmUgcnVuIGJ5ICdzdXBlci11c2VyJyAocm9vdCkgb25seS4K
LSAqCisvKlwKKyAqIFZlcmlmeSB0aGF0IG1rbm9kKDIpIHN1Y2NlZWRzIHdoZW4gdXNlZCB0byBj
cmVhdGUgYSBmaWxlc3lzdGVtIG5vZGUgd2l0aAorICogc2V0LWdyb3VwLUlEIGJpdCBzZXQgb24g
YSBkaXJlY3Rvcnkgd2l0aCBzZXQtZ3JvdXAtSUQgYml0IHNldC4gVGhlIG5vZGUKKyAqIGNyZWF0
ZWQgc2hvdWxkIGhhdmUgc2V0LWdyb3VwLUlEIGJpdCBzZXQgYW5kIGl0cyBnaWQgc2hvdWxkIGJl
IGVxdWFsIHRvCisgKiB0aGUgIm5vYm9keSIgZ2lkLgogICovCiAKLSNpbmNsdWRlIDxzdGRpby5o
PgotI2luY2x1ZGUgPHN0ZGxpYi5oPgotI2luY2x1ZGUgPHVuaXN0ZC5oPgotI2luY2x1ZGUgPGVy
cm5vLmg+Ci0jaW5jbHVkZSA8c3RyaW5nLmg+Ci0jaW5jbHVkZSA8c2lnbmFsLmg+CiAjaW5jbHVk
ZSA8cHdkLmg+Ci0jaW5jbHVkZSA8c3lzL3R5cGVzLmg+Ci0jaW5jbHVkZSA8c3lzL3N0YXQuaD4K
LQotI2luY2x1ZGUgInRlc3QuaCIKLSNpbmNsdWRlICJzYWZlX21hY3Jvcy5oIgotCi0jZGVmaW5l
IExUUFVTRVIJCSJub2JvZHkiCi0jZGVmaW5lIE1PREVfUldYCVNfSUZJRk8gfCBTX0lSV1hVIHwg
U19JUldYRyB8IFNfSVJXWE8KLSNkZWZpbmUgTU9ERV9TR0lEICAgICAgIFNfSUZJRk8gfCBTX0lT
R0lEIHwgU19JUldYVSB8IFNfSVJXWEcgfCBTX0lSV1hPCi0jZGVmaW5lIERJUl9URU1QCSJ0ZXN0
ZGlyXzMiCi0jZGVmaW5lIFROT0RFCQkidG5vZGVfJWQiCisjaW5jbHVkZSAidHN0X3VpZC5oIgor
I2luY2x1ZGUgInRzdF90ZXN0LmgiCiAKLXN0cnVjdCBzdGF0IGJ1ZjsJCS8qIHN0cnVjdC4gdG8g
aG9sZCBzdGF0KDIpIG8vcCBjb250ZW50cyAqLwotc3RydWN0IHBhc3N3ZCAqdXNlcjE7CQkvKiBz
dHJ1Y3QuIHRvIGhvbGQgZ2V0cHduYW0oMykgby9wIGNvbnRlbnRzICovCisjZGVmaW5lIE1PREVf
UldYIDA3NzcKKyNkZWZpbmUgTU9ERV9GSUZPX1NHSUQgKFNfSUZJRk8gfCBTX0lTR0lEIHwgMDc3
NykKIAotY2hhciAqVENJRCA9ICJta25vZDAzIjsKLWludCBUU1RfVE9UQUwgPSAxOwotY2hhciBu
b2RlX25hbWVbUEFUSF9NQVhdOwkvKiBidWZmZXIgdG8gaG9sZCBub2RlIG5hbWUgY3JlYXRlZCAq
LworI2RlZmluZSBURU1QX0RJUiAidGVzdGRpciIKKyNkZWZpbmUgVEVNUF9OT0RFIFRFTVBfRElS
ICIvdGVzdG5vZGUiCiAKLWdpZF90IGdyb3VwMV9naWQsIGdyb3VwMl9naWQsIG15Z2lkOwkvKiB1
c2VyIGFuZCBwcm9jZXNzIGdyb3VwIGlkJ3MgKi8KLXVpZF90IHNhdmVfbXl1aWQsIHVzZXIxX3Vp
ZDsJLyogdXNlciBhbmQgcHJvY2VzcyB1c2VyIGlkJ3MgKi8KLXBpZF90IG15cGlkOwkJCS8qIHBy
b2Nlc3MgaWQgKi8KK3N0YXRpYyB1aWRfdCBub2JvZHlfdWlkOworc3RhdGljIGdpZF90IG5vYm9k
eV9naWQsIGZyZWVfZ2lkOwogCi12b2lkIHNldHVwKCk7CQkJLyogc2V0dXAgZnVuY3Rpb24gZm9y
IHRoZSB0ZXN0ICovCi12b2lkIGNsZWFudXAoKTsJCQkvKiBjbGVhbnVwIGZ1bmN0aW9uIGZvciB0
aGUgdGVzdCAqLwotCi1pbnQgbWFpbihpbnQgYWMsIGNoYXIgKiphdikKK3N0YXRpYyB2b2lkIHJ1
bih2b2lkKQogewotCWludCBsYzsKLQlpbnQgZmZsYWc7Ci0KLQl0c3RfcGFyc2Vfb3B0cyhhYywg
YXYsIE5VTEwsIE5VTEwpOwotCi0Jc2V0dXAoKTsKLQotCWZvciAobGMgPSAwOyBURVNUX0xPT1BJ
TkcobGMpOyBsYysrKSB7Ci0KLQkJdHN0X2NvdW50ID0gMDsKKwlzdHJ1Y3Qgc3RhdCBidWY7CiAK
LQkJLyoKLQkJICogIEF0dGVtcHQgdG8gY3JlYXRlIGEgZmlsZXN5c3RlbSBub2RlIHdpdGggZ3Jv
dXAgaWQgKHNnaWQpCi0JCSAqICBiaXQgc2V0IG9uIGEgZGlyZWN0b3J5IHdpdGggZ3JvdXAgaWQg
KHNnaWQpIGJpdCBzZXQKLQkJICogIHN1Y2ggdGhhdCwgdGhlIG5vZGUgY3JlYXRlZCBieSBta25v
ZCgyKSBzaG91bGQgaGF2ZQotCQkgKiAgZ3JvdXAgaWQgKHNnaWQpIGJpdCBzZXQgYW5kIG5vZGUn
cyBnaWQgc2hvdWxkIGJlIGVxdWFsCi0JCSAqICB0byB0aGF0IG9mIGVmZmVjdGl2ZSBnaWQgb2Yg
dGhlIHByb2Nlc3MuCi0JCSAqLwotCQlURVNUKG1rbm9kKG5vZGVfbmFtZSwgTU9ERV9TR0lELCAw
KSk7CisJU0FGRV9NS05PRChURU1QX05PREUsIE1PREVfRklGT19TR0lELCAwKTsKIAotCQkvKiBD
aGVjayByZXR1cm4gY29kZSBmcm9tIG1rbm9kKDIpICovCi0JCWlmIChURVNUX1JFVFVSTiA9PSAt
MSkgewotCQkJdHN0X3Jlc20oVEZBSUwsICJta25vZCglcywgJSNvLCAwKSAgZmFpbGVkLCBlcnJu
bz0lZCA6ICIKLQkJCQkgIiVzIiwgbm9kZV9uYW1lLCBNT0RFX1NHSUQsIFRFU1RfRVJSTk8sCi0J
CQkJIHN0cmVycm9yKFRFU1RfRVJSTk8pKTsKLQkJCWNvbnRpbnVlOwotCQl9Ci0JCS8qIFNldCB0
aGUgZnVuY3Rpb25hbGl0eSBmbGFnICovCi0JCWZmbGFnID0gMTsKKwlTQUZFX1NUQVQoVEVNUF9O
T0RFLCAmYnVmKTsKKwlUU1RfRVhQX0VRX0xJKGJ1Zi5zdF9naWQsIGZyZWVfZ2lkKTsKIAotCQkv
KiBDaGVjayBmb3Igbm9kZSdzIGNyZWF0aW9uICovCi0JCWlmIChzdGF0KG5vZGVfbmFtZSwgJmJ1
ZikgPCAwKSB7Ci0JCQl0c3RfcmVzbShURkFJTCwgInN0YXQoKSBvZiAlcyBmYWlsZWQsIGVycm5v
OiVkIiwKLQkJCQkgbm9kZV9uYW1lLCBURVNUX0VSUk5PKTsKLQkJCS8qIHVuc2V0IGZ1bmN0aW9u
YWxpdHkgZmxhZyAqLwotCQkJZmZsYWcgPSAwOwotCQl9Ci0KLQkJLyoKLQkJICogU2tpcCBTX0lT
R0lEIGNoZWNrCi0JCSAqIDBmYTNlY2Q4Nzg0OCAoIkZpeCB1cCBub24tZGlyZWN0b3J5IGNyZWF0
aW9uIGluIFNHSUQgZGlyZWN0b3JpZXMiKQotCQkgKiBjbGVhcnMgU19JU0dJRCBmb3IgZmlsZXMg
Y3JlYXRlZCBieSBub24tZ3JvdXAgbWVtYmVycwotCQkgKi8KLQotCQkvKiBWZXJpZnkgZ3JvdXAg
SUQgKi8KLQkJaWYgKGJ1Zi5zdF9naWQgIT0gZ3JvdXAyX2dpZCkgewotCQkJdHN0X3Jlc20oVEZB
SUwsICIlczogSW5jb3JyZWN0IGdyb3VwIiwKLQkJCQkgbm9kZV9uYW1lKTsKLQkJCS8qIHVuc2V0
IGZsYWcgYXMgZnVuY3Rpb25hbGl0eSBmYWlscyAqLwotCQkJZmZsYWcgPSAwOwotCQl9Ci0JCWlm
IChmZmxhZykgewotCQkJdHN0X3Jlc20oVFBBU1MsICJGdW5jdGlvbmFsaXR5IG9mIG1rbm9kKCVz
LCAiCi0JCQkJICIlI28sIDApIHN1Y2Nlc3NmdWwiLAotCQkJCSBub2RlX25hbWUsIE1PREVfU0dJ
RCk7Ci0JCX0KLQotCQkvKiBSZW1vdmUgdGhlIG5vZGUgZm9yIHRoZSBuZXh0IGdvIGByb3VuZCAq
LwotCQlpZiAodW5saW5rKG5vZGVfbmFtZSkgPT0gLTEpIHsKLQkJCXRzdF9yZXNtKFRXQVJOLCAi
dW5saW5rKCVzKSBmYWlsZWQsIGVycm5vOiVkICVzIiwKLQkJCQkgbm9kZV9uYW1lLCBlcnJubywg
c3RyZXJyb3IoZXJybm8pKTsKLQkJfQotCX0KLQotCS8qIENoYW5nZSB0aGUgZGlyZWN0b3J5IGJh
Y2sgdG8gdGVtcG9yYXJ5IGRpcmVjdG9yeSAqLwotCVNBRkVfQ0hESVIoY2xlYW51cCwgIi4uIik7
Ci0KLQkvKgotCSAqIEludm9rZSBjbGVhbnVwKCkgdG8gZGVsZXRlIHRoZSB0ZXN0IGRpcmVjdG9y
aWVzIGNyZWF0ZWQKLQkgKiBpbiB0aGUgc2V0dXAoKSBhbmQgZXhpdCBtYWluKCkuCi0JICovCi0J
Y2xlYW51cCgpOwotCi0JdHN0X2V4aXQoKTsKKwlTQUZFX1VOTElOSyhURU1QX05PREUpOwogfQog
Ci0vKgotICogc2V0dXAodm9pZCkgLSBwZXJmb3JtcyBhbGwgT05FIFRJTUUgc2V0dXAgZm9yIHRo
aXMgdGVzdC4KLSAqIAlFeGl0IHRoZSB0ZXN0IHByb2dyYW0gb24gcmVjZWlwdCBvZiB1bmV4cGVj
dGVkIHNpZ25hbHMuCi0gKglDcmVhdGUgYSB0ZW1wb3JhcnkgZGlyZWN0b3J5IHVzZWQgdG8gaG9s
ZCB0ZXN0IGRpcmVjdG9yaWVzIGNyZWF0ZWQKLSAqCWFuZCBjaGFuZ2UgdGhlIGRpcmVjdG9yeSB0
byBpdC4KLSAqCVZlcmlmeSB0aGF0IHBpZCBvZiBwcm9jZXNzIGV4ZWN1dGluZyB0aGUgdGVzdCBp
cyByb290LgotICoJQ3JlYXRlIGEgdGVzdCBkaXJlY3Rvcnkgb24gdGVtcG9yYXJ5IGRpcmVjdG9y
eSBhbmQgc2V0IHRoZSBvd25lcnNoaXAKLSAqCW9mIHRlc3QgZGlyZWN0b3J5IHRvIGd1ZXN0IHVz
ZXIgYW5kIHByb2Nlc3MsIGNoYW5nZSBtb2RlIHBlcm1pc3Npb25zCi0gKgl0byBzZXQgZ3JvdXAg
aWQgYml0IG9uIGl0LgotICoJU2V0IHRoZSBlZmZlY3RpdmUgdWlkL2dpZCBvZiB0aGUgcHJvY2Vz
cyB0byB0aGF0IG9mIGd1ZXN0IHVzZXIuCi0gKi8KLXZvaWQgc2V0dXAodm9pZCkKK3N0YXRpYyB2
b2lkIHNldHVwKHZvaWQpCiB7Ci0JdHN0X3JlcXVpcmVfcm9vdCgpOwotCi0JLyogQ2FwdHVyZSB1
bmV4cGVjdGVkIHNpZ25hbHMgKi8KLQl0c3Rfc2lnKE5PRk9SSywgREVGX0hBTkRMRVIsIGNsZWFu
dXApOworCXN0cnVjdCBwYXNzd2QgKmx0cHVzZXIgPSBTQUZFX0dFVFBXTkFNKCJub2JvZHkiKTsK
IAotCVRFU1RfUEFVU0U7CisJbm9ib2R5X3VpZCA9IGx0cHVzZXItPnB3X3VpZDsKKwlub2JvZHlf
Z2lkID0gbHRwdXNlci0+cHdfZ2lkOworCWZyZWVfZ2lkID0gdHN0X2dldF9mcmVlX2dpZChub2Jv
ZHlfZ2lkKTsKIAotCS8qIE1ha2UgYSB0ZW1wIGRpciBhbmQgY2QgdG8gaXQgKi8KLQl0c3RfdG1w
ZGlyKCk7CisJU0FGRV9NS0RJUihURU1QX0RJUiwgTU9ERV9SV1gpOworCVNBRkVfQ0hPV04oVEVN
UF9ESVIsIG5vYm9keV91aWQsIGZyZWVfZ2lkKTsKKwlTQUZFX0NITU9EKFRFTVBfRElSLCBNT0RF
X0ZJRk9fU0dJRCk7CiAKLQkvKiBmaXggcGVybWlzc2lvbnMgb24gdGhlIHRtcGRpciAqLwotCWlm
IChjaG1vZCgiLiIsIDA3MTEpICE9IDApIHsKLQkJdHN0X2Jya20oVEJST0ssIGNsZWFudXAsICJj
aG1vZCgpIGZhaWxlZCIpOwotCX0KLQotCS8qIFNhdmUgdGhlIHJlYWwgdXNlciBpZCBvZiB0aGUg
Y3VycmVudCB0ZXN0IHByb2Nlc3MgKi8KLQlzYXZlX215dWlkID0gZ2V0dWlkKCk7Ci0JLyogU2F2
ZSB0aGUgcHJvY2VzcyBpZCBvZiB0aGUgY3VycmVudCB0ZXN0IHByb2Nlc3MgKi8KLQlteXBpZCA9
IGdldHBpZCgpOwotCi0JLyogR2V0IHRoZSBub2RlIG5hbWUgdG8gYmUgY3JlYXRlZCBpbiB0aGUg
dGVzdCAqLwotCXNwcmludGYobm9kZV9uYW1lLCBUTk9ERSwgbXlwaWQpOwotCi0JLyogR2V0IHRo
ZSB1aWQvZ2lkIG9mIGx0cHVzZXIgdXNlciAqLwotCWlmICgodXNlcjEgPSBnZXRwd25hbShMVFBV
U0VSKSkgPT0gTlVMTCkgewotCQl0c3RfYnJrbShUQlJPSywgY2xlYW51cCwgIiVzIG5vdCBpbiAv
ZXRjL3Bhc3N3ZCIsIExUUFVTRVIpOwotCX0KLQl1c2VyMV91aWQgPSB1c2VyMS0+cHdfdWlkOwot
CWdyb3VwMV9naWQgPSB1c2VyMS0+cHdfZ2lkOwotCi0JLyogR2V0IHRoZSBlZmZlY3RpdmUgZ3Jv
dXAgaWQgb2YgdGhlIHRlc3QgcHJvY2VzcyAqLwotCWdyb3VwMl9naWQgPSBnZXRlZ2lkKCk7Ci0K
LQkvKgotCSAqIENyZWF0ZSBhIHRlc3QgZGlyZWN0b3J5IHVuZGVyIHRlbXBvcmFyeSBkaXJlY3Rv
cnkgd2l0aCB0aGUKLQkgKiBzcGVjaWZpZWQgbW9kZSBwZXJtaXNzaW9ucywgd2l0aCB1aWQvZ2lk
IHNldCB0byB0aGF0IG9mIGd1ZXN0Ci0JICogdXNlciBhbmQgdGhlIHRlc3QgcHJvY2Vzcy4KLQkg
Ki8KLQlTQUZFX01LRElSKGNsZWFudXAsIERJUl9URU1QLCBNT0RFX1JXWCk7Ci0JU0FGRV9DSE9X
TihjbGVhbnVwLCBESVJfVEVNUCwgdXNlcjFfdWlkLCBncm91cDJfZ2lkKTsKLQlTQUZFX0NITU9E
KGNsZWFudXAsIERJUl9URU1QLCBNT0RFX1NHSUQpOwotCi0JLyoKLQkgKiBWZXJpZnkgdGhhdCB0
ZXN0IGRpcmVjdG9yeSBjcmVhdGVkIHdpdGggZXhwZWN0ZWQgcGVybWlzc2lvbiBtb2RlcwotCSAq
IGFuZCBvd25lcnNoaXBzLgotCSAqLwotCVNBRkVfU1RBVChjbGVhbnVwLCBESVJfVEVNUCwgJmJ1
Zik7Ci0KLQkvKiBWZXJpZnkgbW9kZXMgb2YgdGVzdCBkaXJlY3RvcnkgKi8KLQlpZiAoIShidWYu
c3RfbW9kZSAmIFNfSVNHSUQpKSB7Ci0JCXRzdF9icmttKFRCUk9LLCBjbGVhbnVwLAotCQkJICIl
czogSW5jb3JyZWN0IG1vZGVzLCBzZXRnaWQgYml0IG5vdCBzZXQiLCBESVJfVEVNUCk7Ci0JfQot
Ci0JLyogVmVyaWZ5IGdyb3VwIElEIG9mIHRlc3QgZGlyZWN0b3J5ICovCi0JaWYgKGJ1Zi5zdF9n
aWQgIT0gZ3JvdXAyX2dpZCkgewotCQl0c3RfYnJrbShUQlJPSywgY2xlYW51cCwgIiVzOiBJbmNv
cnJlY3QgZ3JvdXAiLCBESVJfVEVNUCk7Ci0JfQotCi0JLyoKLQkgKiBTZXQgdGhlIGVmZmVjdGl2
ZSBncm91cCBpZCBhbmQgdXNlciBpZCBvZiB0aGUgdGVzdCBwcm9jZXNzCi0JICogdG8gdGhhdCBv
ZiBndWVzdCB1c2VyIChub2JvZHkpCi0JICovCi0JU0FGRV9TRVRHSUQoY2xlYW51cCwgZ3JvdXAx
X2dpZCk7Ci0JaWYgKHNldHJldWlkKC0xLCB1c2VyMV91aWQpIDwgMCkgewotCQl0c3RfYnJrbShU
QlJPSywgY2xlYW51cCwKLQkJCSAiVW5hYmxlIHRvIHNldCBwcm9jZXNzIHVpZCB0byB0aGF0IG9m
IGx0cCB1c2VyIik7Ci0JfQotCi0JLyogU2F2ZSB0aGUgcmVhbCBncm91cCBJRCBvZiB0aGUgY3Vy
cmVudCBwcm9jZXNzICovCi0JbXlnaWQgPSBnZXRnaWQoKTsKLQotCS8qIENoYW5nZSBkaXJlY3Rv
cnkgdG8gRElSX1RFTVAgKi8KLQlTQUZFX0NIRElSKGNsZWFudXAsIERJUl9URU1QKTsKKwlTQUZF
X1NFVEdJRChub2JvZHlfZ2lkKTsKKwlTQUZFX1NFVFJFVUlEKC0xLCBub2JvZHlfdWlkKTsKIH0K
IAotLyoKLSAqIGNsZWFudXAoKSAtIFBlcmZvcm1zIGFsbCBPTkUgVElNRSBjbGVhbnVwIGZvciB0
aGlzIHRlc3QgYXQKLSAqICAgICAgICAgICAgIGNvbXBsZXRpb24gb3IgcHJlbWF0dXJlIGV4aXQu
Ci0gKglQcmludCB0ZXN0IHRpbWluZyBzdGF0cyBhbmQgZXJybm8gbG9nIGlmIHRlc3QgZXhlY3V0
ZWQgd2l0aCBvcHRpb25zLgotICoJUmVzdG9yZSB0aGUgcmVhbC9lZmZlY3RpdmUgdXNlciBpZCBv
ZiB0aGUgcHJvY2VzcyBjaGFuZ2VkIGR1cmluZwotICoJc2V0dXAoKS4KLSAqCVJlbW92ZSB0ZW1w
b3JhcnkgZGlyZWN0b3J5IGFuZCBzdWItZGlyZWN0b3JpZXMvZmlsZXMgdW5kZXIgaXQKLSAqCWNy
ZWF0ZWQgZHVyaW5nIHNldHVwKCkuCi0gKglFeGl0IHRoZSB0ZXN0IHByb2dyYW0gd2l0aCBub3Jt
YWwgZXhpdCBjb2RlLgotICovCi12b2lkIGNsZWFudXAodm9pZCkKLXsKLQotCS8qCi0JICogUmVz
dG9yZSB0aGUgZWZmZWN0aXZlIHVpZCBvZiB0aGUgcHJvY2VzcyBjaGFuZ2VkIGluIHRoZQotCSAq
IHNldHVwKCkuCi0JICovCi0JaWYgKHNldHJldWlkKC0xLCBzYXZlX215dWlkKSA8IDApIHsKLQkJ
dHN0X2Jya20oVEJST0ssIE5VTEwsCi0JCQkgInJlc2V0dGluZyBwcm9jZXNzIHJlYWwvZWZmZWN0
aXZlIHVpZCBmYWlsZWQiKTsKLQl9Ci0KLQl0c3Rfcm1kaXIoKTsKLQotfQorc3RhdGljIHN0cnVj
dCB0c3RfdGVzdCB0ZXN0ID0geworCS5zZXR1cCA9IHNldHVwLAorCS50ZXN0X2FsbCA9IHJ1biwK
KwkubmVlZHNfcm9vdCA9IDEsCisJLm5lZWRzX3RtcGRpciA9IDEsCit9OwoKLS0gCjIuNDkuMAoK
Ci0tIApNYWlsaW5nIGxpc3QgaW5mbzogaHR0cHM6Ly9saXN0cy5saW51eC5pdC9saXN0aW5mby9s
dHAK
