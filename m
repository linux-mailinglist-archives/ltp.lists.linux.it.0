Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [IPv6:2001:1418:10:5::2])
	by mail.lfdr.de (Postfix) with ESMTPS id 8BB6A22B6D
	for <lists+linux-ltp@lfdr.de>; Mon, 20 May 2019 07:50:57 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id 547162D014D
	for <lists+linux-ltp@lfdr.de>; Mon, 20 May 2019 07:50:57 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-4.smtp.seeweb.it (in-4.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::4])
 by picard.linux.it (Postfix) with ESMTP id 2F713294AE8
 for <ltp@lists.linux.it>; Mon, 20 May 2019 07:50:53 +0200 (CEST)
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by in-4.smtp.seeweb.it (Postfix) with ESMTPS id A06C21000CBB
 for <ltp@lists.linux.it>; Mon, 20 May 2019 07:50:43 +0200 (CEST)
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id AC429AE4B
 for <ltp@lists.linux.it>; Mon, 20 May 2019 05:50:44 +0000 (UTC)
From: Christian Amann <camann@suse.com>
To: ltp@lists.linux.it
Date: Mon, 20 May 2019 07:50:37 +0200
Message-Id: <20190520055038.11499-1-camann@suse.com>
X-Mailer: git-send-email 2.16.4
X-Virus-Scanned: clamav-milter 0.99.2 at in-4.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=0.0 required=7.0 tests=SPF_HELO_NONE,SPF_PASS
 autolearn=disabled version=3.4.0
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on in-4.smtp.seeweb.it
Subject: [LTP] [PATCH v1 1/2] syscalls/fstat{01,02}: rewrote testcases
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

TWVyZ2VkIHRoZSB0d28gdGVzdHM6Cglmc3RhdDAxIGlzIGEgc3Vic2V0IG9mIGZzdGF0MDIgYW5k
IGlzIHRoZXJlZm9yZSBub3QgbmVlZGVkCglhbnltb3JlLgpSZXdyb3RlIHRlc3RjYXNlOgoJQ2xl
YW5lZCB1cCwgcG9ydGVkIHRvIG5ldyBsaWJyYXJ5IGFuZCBhZGRlZCB2YXJpYW50cyB0byB0ZXN0
Cglmb3IgbGliYyBhc3dlbGwgYXMgdGhlIHJhdyBzeXNjYWxsLgoKU2lnbmVkLW9mZi1ieTogQ2hy
aXN0aWFuIEFtYW5uIDxjYW1hbm5Ac3VzZS5jb20+Ci0tLQogcnVudGVzdC9zeXNjYWxscyAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHwgICAyIC0KIHRlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMv
ZnN0YXQvLmdpdGlnbm9yZSB8ICAgMiAtCiB0ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2ZzdGF0
L2ZzdGF0LmggICAgfCAgMzQgKysrKysrCiB0ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2ZzdGF0
L2ZzdGF0MDEuYyAgfCAxNzUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIHRlc3RjYXNl
cy9rZXJuZWwvc3lzY2FsbHMvZnN0YXQvZnN0YXQwMi5jICB8IDE0MSArKysrKysrLS0tLS0tLS0t
LS0tLS0tLQogNSBmaWxlcyBjaGFuZ2VkLCA3NiBpbnNlcnRpb25zKCspLCAyNzggZGVsZXRpb25z
KC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3RhdC9m
c3RhdC5oCiBkZWxldGUgbW9kZSAxMDA2NDQgdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3Rh
dC9mc3RhdDAxLmMKCmRpZmYgLS1naXQgYS9ydW50ZXN0L3N5c2NhbGxzIGIvcnVudGVzdC9zeXNj
YWxscwppbmRleCAyYjhjYTcxOWIuLjVjMmY0Y2VjNiAxMDA2NDQKLS0tIGEvcnVudGVzdC9zeXNj
YWxscworKysgYi9ydW50ZXN0L3N5c2NhbGxzCkBAIC0zMzQsOCArMzM0LDYgQEAgZnBhdGhjb25m
MDEgZnBhdGhjb25mMDEKIGZyZW1vdmV4YXR0cjAxIGZyZW1vdmV4YXR0cjAxCiBmcmVtb3ZleGF0
dHIwMiBmcmVtb3ZleGF0dHIwMgogCi1mc3RhdDAxIGZzdGF0MDEKLWZzdGF0MDFfNjQgZnN0YXQw
MV82NAogZnN0YXQwMiBmc3RhdDAyCiBmc3RhdDAyXzY0IGZzdGF0MDJfNjQKIGZzdGF0MDMgZnN0
YXQwMwpkaWZmIC0tZ2l0IGEvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3RhdC8uZ2l0aWdu
b3JlIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3RhdC8uZ2l0aWdub3JlCmluZGV4IGNm
NTIwNWQ0NC4uMWM2NmJkZjEwIDEwMDY0NAotLS0gYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxz
L2ZzdGF0Ly5naXRpZ25vcmUKKysrIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3RhdC8u
Z2l0aWdub3JlCkBAIC0xLDUgKzEsMyBAQAotL2ZzdGF0MDEKLS9mc3RhdDAxXzY0CiAvZnN0YXQw
MgogL2ZzdGF0MDJfNjQKIC9mc3RhdDAzCmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMva2VybmVsL3N5
c2NhbGxzL2ZzdGF0L2ZzdGF0LmggYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2ZzdGF0L2Zz
dGF0LmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwLi4yMjY0MjgwNzEKLS0t
IC9kZXYvbnVsbAorKysgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2ZzdGF0L2ZzdGF0LmgK
QEAgLTAsMCArMSwzNCBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3It
bGF0ZXIKKy8qCisgKiBDb3B5cmlnaHQgKGMpIFNVU0UgTExDLCAyMDE5CisgKiBBdXRob3I6IENo
cmlzdGlhbiBBbWFubiA8Y2FtYW5uQHN1c2UuY29tPgorICovCisKKyNpZm5kZWYgX19GU1RBVF9I
X18KKyNkZWZpbmUgX19GU1RBVF9IX18KKworI2luY2x1ZGUgPHN5cy90eXBlcy5oPgorI2luY2x1
ZGUgPHN5cy9zdGF0Lmg+CisjaW5jbHVkZSA8dW5pc3RkLmg+CisjaW5jbHVkZSAibGFwaS9zeXNj
YWxscy5oIgorCisjZGVmaW5lIFRFU1RfVkFSSUFOVFMJMgorI2RlZmluZSBURVNURklMRQkidGVz
dF9maWxlIgorCitzdGF0aWMgdm9pZCBzeXNjYWxsX2luZm8odm9pZCkKK3sKKwlpZiAodHN0X3Zh
cmlhbnQgPT0gMCkgeworCQl0c3RfcmVzKFRJTkZPLCAiVGVzdGluZyBsaWJjIGZzdGF0KCkiKTsK
KwkJcmV0dXJuOworCX0KKwl0c3RfcmVzKFRJTkZPLCAiVGVzdGluZyBzeXNjYWxsIGZzdGF0KCki
KTsKK30KKworc3RhdGljIGludCB0c3RfZnN0YXQoaW50IGZkLCBzdHJ1Y3Qgc3RhdCAqc3RhdGJ1
ZikKK3sKKwlpZiAodHN0X3ZhcmlhbnQgPT0gMCkKKwkJcmV0dXJuIGZzdGF0KGZkLCBzdGF0YnVm
KTsKKwlyZXR1cm4gdHN0X3N5c2NhbGwoX19OUl9mc3RhdCwgZmQsIHN0YXRidWYpOworfQorCisj
ZW5kaWYgLyogX19GU1RBVF9IX18gKi8KZGlmZiAtLWdpdCBhL3Rlc3RjYXNlcy9rZXJuZWwvc3lz
Y2FsbHMvZnN0YXQvZnN0YXQwMS5jIGIvdGVzdGNhc2VzL2tlcm5lbC9zeXNjYWxscy9mc3RhdC9m
c3RhdDAxLmMKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IGE1OTQwYzYyNy4uMDAwMDAw
MDAwCi0tLSBhL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvZnN0YXQvZnN0YXQwMS5jCisrKyAv
ZGV2L251bGwKQEAgLTEsMTc1ICswLDAgQEAKLS8qCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAgU2ls
aWNvbiBHcmFwaGljcywgSW5jLiAgQWxsIFJpZ2h0cyBSZXNlcnZlZC4KLSAqCi0gKiBUaGlzIHBy
b2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1v
ZGlmeSBpdAotICogdW5kZXIgdGhlIHRlcm1zIG9mIHZlcnNpb24gMiBvZiB0aGUgR05VIEdlbmVy
YWwgUHVibGljIExpY2Vuc2UgYXMKLSAqIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBG
b3VuZGF0aW9uLgotICoKLSAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9w
ZSB0aGF0IGl0IHdvdWxkIGJlIHVzZWZ1bCwgYnV0Ci0gKiBXSVRIT1VUIEFOWSBXQVJSQU5UWTsg
d2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCi0gKiBNRVJDSEFOVEFCSUxJVFkg
b3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuCi0gKgotICogRnVydGhlciwgdGhp
cyBzb2Z0d2FyZSBpcyBkaXN0cmlidXRlZCB3aXRob3V0IGFueSB3YXJyYW50eSB0aGF0IGl0IGlz
Ci0gKiBmcmVlIG9mIHRoZSByaWdodGZ1bCBjbGFpbSBvZiBhbnkgdGhpcmQgcGVyc29uIHJlZ2Fy
ZGluZyBpbmZyaW5nZW1lbnQKLSAqIG9yIHRoZSBsaWtlLiAgQW55IGxpY2Vuc2UgcHJvdmlkZWQg
aGVyZWluLCB3aGV0aGVyIGltcGxpZWQgb3IKLSAqIG90aGVyd2lzZSwgYXBwbGllcyBvbmx5IHRv
IHRoaXMgc29mdHdhcmUgZmlsZS4gIFBhdGVudCBsaWNlbnNlcywgaWYKLSAqIGFueSwgcHJvdmlk
ZWQgaGVyZWluIGRvIG5vdCBhcHBseSB0byBjb21iaW5hdGlvbnMgb2YgdGhpcyBwcm9ncmFtIHdp
dGgKLSAqIG90aGVyIHNvZnR3YXJlLCBvciBhbnkgb3RoZXIgcHJvZHVjdCB3aGF0c29ldmVyLgot
ICoKLSAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFs
IFB1YmxpYyBMaWNlbnNlIGFsb25nCi0gKiB3aXRoIHRoaXMgcHJvZ3JhbTsgaWYgbm90LCB3cml0
ZSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuLAotICogNTEgRnJhbmtsaW4gU3Ry
ZWV0LCBGaWZ0aCBGbG9vciwgQm9zdG9uLCBNQSAwMjExMC0xMzAxIFVTQS4KLSAqCi0gKiBDb250
YWN0IGluZm9ybWF0aW9uOiBTaWxpY29uIEdyYXBoaWNzLCBJbmMuLCAxNjAwIEFtcGhpdGhlYXRy
ZSBQa3d5LAotICogTW91bnRhaW4gVmlldywgQ0EgIDk0MDQzLCBvcjoKLSAqCi0gKiBodHRwOi8v
d3d3LnNnaS5jb20KLSAqCi0gKiBGb3IgZnVydGhlciBpbmZvcm1hdGlvbiByZWdhcmRpbmcgdGhp
cyBub3RpY2UsIHNlZToKLSAqCi0gKiBodHRwOi8vb3NzLnNnaS5jb20vcHJvamVjdHMvR2VuSW5m
by9Ob3RpY2VFeHBsYW4vCi0gKgotICovCi0vKiAkSWQ6IGZzdGF0MDEuYyx2IDEuNiAyMDA5LzA4
LzI4IDEyOjUxOjM0IHZhcGllciBFeHAgJCAqLwotLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqCi0gKiAgICBPUyBUZXN0IC0gU2ls
aWNvbiBHcmFwaGljcywgSW5jLgotICoKLSAqICAgIFRFU1QgSURFTlRJRklFUgk6IGZzdGF0MDEK
LSAqCi0gKiAgICBFWEVDVVRFRCBCWQk6IGFueW9uZQotICoKLSAqICAgIFRFU1QgVElUTEUJOiBC
YXNpYyB0ZXN0IGZvciBmc3RhdCgyKQotICoKLSAqICAgIFBBUkVOVCBET0NVTUVOVAk6IHVzY3Rw
bDAxCi0gKgotICogICAgVEVTVCBDQVNFIFRPVEFMCTogMQotICoKLSAqICAgIFdBTEwgQ0xPQ0sg
VElNRQk6IDEKLSAqCi0gKiAgICBDUFUgVFlQRVMJCTogQUxMCi0gKgotICogICAgQVVUSE9SCQk6
IFdpbGxpYW0gUm9za2UKLSAqCi0gKiAgICBDTy1QSUxPVAkJOiBEYXZlIEZlbm5lcgotICoKLSAq
ICAgIERBVEUgU1RBUlRFRAk6IDAzLzMwLzkyCi0gKgotICogICAgSU5JVElBTCBSRUxFQVNFCTog
VU5JQ09TIDcuMAotICoKLSAqICAgIFRFU1QgQ0FTRVMKLSAqCi0gKgkxLikgZnN0YXQoMikgcmV0
dXJucy4uLihTZWUgRGVzY3JpcHRpb24pCi0gKgotICogICAgSU5QVVQgU1BFQ0lGSUNBVElPTlMK
LSAqCVRoZSBzdGFuZGFyZCBvcHRpb25zIGZvciBzeXN0ZW0gY2FsbCB0ZXN0cyBhcmUgYWNjZXB0
ZWQuCi0gKgkoU2VlIHRoZSBwYXJzZV9vcHRzKDMpIG1hbiBwYWdlKS4KLSAqCi0gKiAgICBPVVRQ
VVQgU1BFQ0lGSUNBVElPTlMKLSAqCi0gKiAgICBEVVJBVElPTgotICoJVGVybWluYXRlcyAtIHdp
dGggZnJlcXVlbmN5IGFuZCBpbmZpbml0ZSBtb2Rlcy4KLSAqCi0gKiAgICBTSUdOQUxTCi0gKglV
c2VzIFNJR1VTUjEgdG8gcGF1c2UgYmVmb3JlIHRlc3QgaWYgb3B0aW9uIHNldC4KLSAqCShTZWUg
dGhlIHBhcnNlX29wdHMoMykgbWFuIHBhZ2UpLgotICoKLSAqICAgIFJFU09VUkNFUwotICoJTm9u
ZQotICoKLSAqICAgIEVOVklST05NRU5UQUwgTkVFRFMKLSAqICAgICAgTm8gcnVuLXRpbWUgZW52
aXJvbm1lbnRhbCBuZWVkcy4KLSAqCi0gKiAgICBTUEVDSUFMIFBST0NFRFVSQUwgUkVRVUlSRU1F
TlRTCi0gKglOb25lCi0gKgotICogICAgSU5URVJDQVNFIERFUEVOREVOQ0lFUwotICoJTm9uZQot
ICoKLSAqICAgIERFVEFJTEVEIERFU0NSSVBUSU9OCi0gKglUaGlzIGlzIGEgUGhhc2UgSSB0ZXN0
IGZvciB0aGUgZnN0YXQoMikgc3lzdGVtIGNhbGwuICBJdCBpcyBpbnRlbmRlZAotICoJdG8gcHJv
dmlkZSBhIGxpbWl0ZWQgZXhwb3N1cmUgb2YgdGhlIHN5c3RlbSBjYWxsLCBmb3Igbm93LiAgSXQK
LSAqCXNob3VsZC93aWxsIGJlIGV4dGVuZGVkIHdoZW4gZnVsbCBmdW5jdGlvbmFsIHRlc3RzIGFy
ZSB3cml0dGVuIGZvcgotICoJZnN0YXQoMikuCi0gKgotICoJU2V0dXA6Ci0gKgkgIFNldHVwIHNp
Z25hbCBoYW5kbGluZy4KLSAqCSAgUGF1c2UgZm9yIFNJR1VTUjEgaWYgb3B0aW9uIHNwZWNpZmll
ZC4KLSAqCi0gKglUZXN0OgotICoJIExvb3AgaWYgdGhlIHByb3BlciBvcHRpb25zIGFyZSBnaXZl
bi4KLSAqCSAgRXhlY3V0ZSBzeXN0ZW0gY2FsbAotICoJICBDaGVjayByZXR1cm4gY29kZSwgaWYg
c3lzdGVtIGNhbGwgZmFpbGVkIChyZXR1cm49LTEpCi0gKgkJTG9nIHRoZSBlcnJubyBhbmQgSXNz
dWUgYSBGQUlMIG1lc3NhZ2UuCi0gKgkgIE90aGVyd2lzZSwgSXNzdWUgYSBQQVNTIG1lc3NhZ2Uu
Ci0gKgotICoJQ2xlYW51cDoKLSAqCSAgUHJpbnQgZXJybm8gbG9nIGFuZC9vciB0aW1pbmcgc3Rh
dHMgaWYgb3B0aW9ucyBnaXZlbgotICoKLSAqCi0gKiMqIyojKiMqIyojKiMqIyojKiMqIyojKiMq
IyojKiMqIyojKiMqIyojKiMqIyojKiMqIyojKiMqIyoqLwotCi0jaW5jbHVkZSA8c3lzL3R5cGVz
Lmg+Ci0jaW5jbHVkZSA8ZmNudGwuaD4KLSNpbmNsdWRlIDxzeXMvc3RhdC5oPgotI2luY2x1ZGUg
PGVycm5vLmg+Ci0jaW5jbHVkZSA8c3RyaW5nLmg+Ci0jaW5jbHVkZSA8c2lnbmFsLmg+Ci0jaW5j
bHVkZSAidGVzdC5oIgotI2luY2x1ZGUgInNhZmVfbWFjcm9zLmgiCi0KLXZvaWQgc2V0dXAoKTsK
LXZvaWQgY2xlYW51cCgpOwotCi1jaGFyICpUQ0lEID0gImZzdGF0MDEiOwotaW50IFRTVF9UT1RB
TCA9IDE7Ci0KLWNoYXIgZm5hbWVbMjU1XTsKLWludCBmZDsKLXN0cnVjdCBzdGF0IHN0YXR0ZXI7
Ci0KLWludCBtYWluKGludCBhYywgY2hhciAqKmF2KQotewotCWludCBsYzsKLQotCXRzdF9wYXJz
ZV9vcHRzKGFjLCBhdiwgTlVMTCwgTlVMTCk7Ci0KLQlzZXR1cCgpOwotCi0JZm9yIChsYyA9IDA7
IFRFU1RfTE9PUElORyhsYyk7IGxjKyspIHsKLQotCQl0c3RfY291bnQgPSAwOwotCi0JCVRFU1Qo
ZnN0YXQoZmQsICZzdGF0dGVyKSk7Ci0KLQkJaWYgKFRFU1RfUkVUVVJOID09IC0xKQotCQkJdHN0
X3Jlc20oVEZBSUwgfCBUVEVSUk5PLCAiZnN0YXQgZmFpbGVkIik7Ci0JCWVsc2UKLQkJCXRzdF9y
ZXNtKFRQQVNTLCAiZnN0YXQgcmV0dXJuZWQgJWxkIiwgVEVTVF9SRVRVUk4pOwotCX0KLQotCWNs
ZWFudXAoKTsKLQl0c3RfZXhpdCgpOwotfQotCi12b2lkIHNldHVwKHZvaWQpCi17Ci0KLQl0c3Rf
c2lnKE5PRk9SSywgREVGX0hBTkRMRVIsIGNsZWFudXApOwotCi0JVEVTVF9QQVVTRTsKLQotCXRz
dF90bXBkaXIoKTsKLQotCXNwcmludGYoZm5hbWUsICJ0ZmlsZV8lZCIsIGdldHBpZCgpKTsKLQlm
ZCA9IFNBRkVfT1BFTihjbGVhbnVwLCBmbmFtZSwgT19SRFdSIHwgT19DUkVBVCwgMDcwMCk7Ci19
Ci0KLXZvaWQgY2xlYW51cCh2b2lkKQotewotCWlmIChjbG9zZShmZCkgPT0gLTEpCi0JCXRzdF9y
ZXNtKFRXQVJOIHwgVEVSUk5PLCAiY2xvc2UoJXMpIGZhaWxlZCIsIGZuYW1lKTsKLQotCXRzdF9y
bWRpcigpOwotCi19CmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2ZzdGF0
L2ZzdGF0MDIuYyBiL3Rlc3RjYXNlcy9rZXJuZWwvc3lzY2FsbHMvZnN0YXQvZnN0YXQwMi5jCmlu
ZGV4IDIxZWYxNjYxNy4uMmI5NTU4NmE0IDEwMDY0NAotLS0gYS90ZXN0Y2FzZXMva2VybmVsL3N5
c2NhbGxzL2ZzdGF0L2ZzdGF0MDIuYworKysgYi90ZXN0Y2FzZXMva2VybmVsL3N5c2NhbGxzL2Zz
dGF0L2ZzdGF0MDIuYwpAQCAtMSwxNTIgKzEsOTUgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlm
aWVyOiBHUEwtMi4wLW9yLWxhdGVyCiAvKgogICogQ29weXJpZ2h0IChjKSBJbnRlcm5hdGlvbmFs
IEJ1c2luZXNzIE1hY2hpbmVzICBDb3JwLiwgMjAwMQogICogIDA3LzIwMDEgUG9ydGVkIGJ5IFdh
eW5lIEJveWVyCi0gKgotICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7ICB5b3UgY2Fu
IHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5Ci0gKiBpdCB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieQotICogdGhlIEZy
ZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMiBvZiB0aGUgTGljZW5zZSwg
b3IKLSAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCi0gKgotICogVGhpcyBw
cm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWws
Ci0gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7ICB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQg
d2FycmFudHkgb2YKLSAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VM
QVIgUFVSUE9TRS4gIFNlZQotICogdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBt
b3JlIGRldGFpbHMuCi0gKgotICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0
aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UKLSAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFt
OyAgaWYgbm90LCB3cml0ZSB0byB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLAotICogSW5j
LiwgNTEgRnJhbmtsaW4gU3RyZWV0LCBGaWZ0aCBGbG9vciwgQm9zdG9uLCBNQSAwMjExMC0xMzAx
IFVTQQorICogIDA1LzIwMTkgUG9ydGVkIHRvIG5ldyBsaWJyYXJ5OiBDaHJpc3RpYW4gQW1hbm4g
PGNhbWFubkBzdXNlLmNvbT4KICAqLwogLyoKLSAqIGZzdGF0KCkgc2hvdWxkIHJldHVybiB2YWx1
ZSAwIG9uIHN1Y2Nlc3MgYW5kIHRoZSBzdGF0IHN0cnVjdHVyZSBlbGVtZW50cwotICogc2hvdWxk
IGJlIGZpbGxlZCB3aXRoIHNwZWNpZmllZCAnZmlsZScgaW5mb3JtYXRpb24uCisgKiBUZXN0cyBp
ZiBmc3RhdCgpIHJldHVybnMgY29ycmVjdGx5IGFuZCByZXBvcnRzIGNvcnJlY3QgZmlsZSBpbmZv
cm1hdGlvbgorICogdXNpbmcgdGhlIHN0YXQgc3RydWN0dXJlLgogICovCi0jaW5jbHVkZSA8c3Rk
aW8uaD4KLSNpbmNsdWRlIDxzeXMvdHlwZXMuaD4KLSNpbmNsdWRlIDxmY250bC5oPgotI2luY2x1
ZGUgPHN5cy9zdGF0Lmg+CisKICNpbmNsdWRlIDxlcnJuby5oPgotI2luY2x1ZGUgPHN0cmluZy5o
PgotI2luY2x1ZGUgPHNpZ25hbC5oPgogI2luY2x1ZGUgPHB3ZC5oPgorI2luY2x1ZGUgInRzdF90
ZXN0LmgiCisjaW5jbHVkZSAidHN0X3NhZmVfbWFjcm9zLmgiCisjaW5jbHVkZSAiZnN0YXQuaCIK
IAotI2luY2x1ZGUgInRlc3QuaCIKLSNpbmNsdWRlICJzYWZlX21hY3Jvcy5oIgotCi0jZGVmaW5l
IEZJTEVfTU9ERQkwNjQ0Ci0jZGVmaW5lIFRFU1RGSUxFCSJ0ZXN0ZmlsZSIKICNkZWZpbmUgRklM
RV9TSVpFICAgICAgIDEwMjQKLSNkZWZpbmUgQlVGX1NJWkUJMjU2Ci0jZGVmaW5lIE1BU0sJCTA3
NzcKKyNkZWZpbmUgRklMRV9NT0RFCTA2NDQKIAotY2hhciAqVENJRCA9ICJmc3RhdDAyIjsKLWlu
dCBUU1RfVE9UQUwgPSAxOwogc3RhdGljIHVpZF90IHVzZXJfaWQ7CiBzdGF0aWMgZ2lkX3QgZ3Jv
dXBfaWQ7CiBzdGF0aWMgaW50IGZpbGRlczsKIAotc3RhdGljIHZvaWQgc2V0dXAodm9pZCk7Ci1z
dGF0aWMgdm9pZCBjbGVhbnVwKHZvaWQpOwotCi1zdGF0aWMgdm9pZCB2ZXJpZnkodm9pZCkKK3N0
YXRpYyB2b2lkIHJ1bih2b2lkKQogeworCWludCBmYWlsOwogCXN0cnVjdCBzdGF0IHN0YXRfYnVm
OwotCWludCBmYWlsID0gMDsKIAotCVRFU1QoZnN0YXQoZmlsZGVzLCAmc3RhdF9idWYpKTsKKwlU
RVNUKHRzdF9mc3RhdChmaWxkZXMsICZzdGF0X2J1ZikpOwogCi0JaWYgKFRFU1RfUkVUVVJOID09
IC0xKSB7Ci0JCXRzdF9yZXNtKFRGQUlMIHwgVFRFUlJOTywgImZzdGF0KCVzKSBmYWlsZWQiLCBU
RVNURklMRSk7CisJaWYgKFRTVF9SRVQgPT0gLTEpIHsKKwkJdHN0X3JlcyhURkFJTCB8IFRURVJS
Tk8sICJmc3RhdCgpIGZhaWxlZCIpOwogCQlyZXR1cm47CiAJfQogCisJZmFpbCA9IDA7CiAJaWYg
KHN0YXRfYnVmLnN0X3VpZCAhPSB1c2VyX2lkKSB7Ci0JCXRzdF9yZXNtKFRJTkZPLCAic3RhdF9i
dWYuc3RfdWlkID0gJWkgZXhwZWN0ZWQgJWkiLAotCQkgICAgICAgICBzdGF0X2J1Zi5zdF91aWQs
IHVzZXJfaWQpOworCQl0c3RfcmVzKFRGQUlMLCAic3RhdF9idWYuc3RfdWlkID0gJWkgZXhwZWN0
ZWQgJWkiLAorCQkJc3RhdF9idWYuc3RfdWlkLCB1c2VyX2lkKTsKIAkJZmFpbCsrOwogCX0KIAog
CWlmIChzdGF0X2J1Zi5zdF9naWQgIT0gZ3JvdXBfaWQpIHsKLQkJdHN0X3Jlc20oVElORk8sICJz
dGF0X2J1Zi5zdF9naWQgPSAlaSBleHBlY3RlZCAlaSIsCi0JCSAgICAgICAgIHN0YXRfYnVmLnN0
X2dpZCwgZ3JvdXBfaWQpOworCQl0c3RfcmVzKFRGQUlMLCAic3RhdF9idWYuc3RfZ2lkID0gJWkg
ZXhwZWN0ZWQgJWkiLAorCQkJc3RhdF9idWYuc3RfZ2lkLCBncm91cF9pZCk7CiAJCWZhaWwrKzsK
IAl9CiAKIAlpZiAoc3RhdF9idWYuc3Rfc2l6ZSAhPSBGSUxFX1NJWkUpIHsKLQkJdHN0X3Jlc20o
VElORk8sICJzdGF0X2J1Zi5zdF9zaXplID0gJWxpIGV4cGVjdGVkICVpIiwKLQkJICAgICAgICAg
KGxvbmcpc3RhdF9idWYuc3Rfc2l6ZSwgRklMRV9TSVpFKTsKKwkJdHN0X3JlcyhURkFJTCwgInN0
YXRfYnVmLnN0X3NpemUgPSAlbGkgZXhwZWN0ZWQgJWkiLAorCQkJKGxvbmcpc3RhdF9idWYuc3Rf
c2l6ZSwgRklMRV9TSVpFKTsKIAkJZmFpbCsrOwogCX0KIAotICAgICAgICBpZiAoKHN0YXRfYnVm
LnN0X21vZGUgJiBNQVNLKSAhPSBGSUxFX01PREUpIHsKLQkJdHN0X3Jlc20oVElORk8sICJzdGF0
X2J1Zi5zdF9tb2RlID0gJW8gZXhwZWN0ZWQgJW8iLAotCQkgICAgICAgICAoc3RhdF9idWYuc3Rf
bW9kZSAmIE1BU0spLCBGSUxFX01PREUpOworCWlmICgoc3RhdF9idWYuc3RfbW9kZSAmIDA3Nzcp
ICE9IEZJTEVfTU9ERSkgeworCQl0c3RfcmVzKFRGQUlMLCAic3RhdF9idWYuc3RfbW9kZSA9ICVv
IGV4cGVjdGVkICVvIiwKKwkJCShzdGF0X2J1Zi5zdF9tb2RlICYgMDc3NyksIEZJTEVfTU9ERSk7
CiAJCWZhaWwrKzsKIAl9CiAKIAlpZiAoZmFpbCkgewotCQl0c3RfcmVzbShURkFJTCwgImZ1bmN0
aW9uYWxpdHkgb2YgZnN0YXQgaW5jb3JyZWN0Iik7CisJCXRzdF9yZXMoVEZBSUwsICJmc3RhdCgp
IHJlcG9ydGVkIHdyb25nIHZhbHVlcy4iKTsKIAkJcmV0dXJuOwogCX0KIAotCXRzdF9yZXNtKFRQ
QVNTLCAiZnVuY3Rpb25hbGl0eSBvZiBmc3RhdCBjb3JyZWN0Iik7Ci19Ci0KLWludCBtYWluKGlu
dCBhYywgY2hhciAqKmF2KQotewotCWludCBsYzsKLQotCXRzdF9wYXJzZV9vcHRzKGFjLCBhdiwg
TlVMTCwgTlVMTCk7Ci0KLQlzZXR1cCgpOwotCi0JZm9yIChsYyA9IDA7IFRFU1RfTE9PUElORyhs
Yyk7IGxjKyspCi0JCXZlcmlmeSgpOwotCi0JY2xlYW51cCgpOwotCXRzdF9leGl0KCk7CisJdHN0
X3JlcyhUUEFTUywgImZzdGF0KCkgcmVwb3J0ZWQgY29ycmVjdCB2YWx1ZXMuIik7CiB9CiAKIHN0
YXRpYyB2b2lkIHNldHVwKHZvaWQpCiB7Ci0Jc3RydWN0IHBhc3N3ZCAqbHRwdXNlcjsKLQljaGFy
IHRzdF9idWZmW0JVRl9TSVpFXTsKLQlpbnQgd2J5dGVzOwotCWludCB3cml0ZV9sZW4gPSAwOwor
CXN5c2NhbGxfaW5mbygpOwogCi0JdHN0X3JlcXVpcmVfcm9vdCgpOwotCi0JdHN0X3NpZyhOT0ZP
UkssIERFRl9IQU5ETEVSLCBjbGVhbnVwKTsKLQotCWx0cHVzZXIgPSBTQUZFX0dFVFBXTkFNKE5V
TEwsICJub2JvZHkiKTsKLQlTQUZFX1NFVFVJRChOVUxMLCBsdHB1c2VyLT5wd191aWQpOwotCi0J
VEVTVF9QQVVTRTsKLQotCXRzdF90bXBkaXIoKTsKLQotCXVtYXNrKDAyMik7Ci0KLQlmaWxkZXMg
PSBTQUZFX09QRU4odHN0X3JtZGlyLCBURVNURklMRSwgT19XUk9OTFkgfCBPX0NSRUFULCBGSUxF
X01PREUpOwotCi0JLyogRmlsbCB0aGUgdGVzdCBidWZmZXIgd2l0aCB0aGUga25vd24gZGF0YSAq
LwotCW1lbXNldCh0c3RfYnVmZiwgJ2EnLCBCVUZfU0laRSAtIDEpOworCXVzZXJfaWQgID0gZ2V0
dWlkKCk7CisJZ3JvdXBfaWQgPSBnZXRnaWQoKTsKIAotCS8qIFdyaXRlIHRvIHRoZSBmaWxlIDFr
IGRhdGEgZnJvbSB0aGUgYnVmZmVyICovCi0Jd2hpbGUgKHdyaXRlX2xlbiA8IEZJTEVfU0laRSkg
ewotCQlpZiAoKHdieXRlcyA9IHdyaXRlKGZpbGRlcywgdHN0X2J1ZmYsIHNpemVvZih0c3RfYnVm
ZikpKSA8PSAwKQotCQkJdHN0X2Jya20oVEJST0sgfCBURVJSTk8sIGNsZWFudXAsICJ3cml0ZSBm
YWlsZWQiKTsKLQkJZWxzZQotCQkJd3JpdGVfbGVuICs9IHdieXRlczsKLQl9CisJZmlsZGVzID0g
U0FGRV9PUEVOKFRFU1RGSUxFLCBPX1dST05MWSB8IE9fQ1JFQVQsIEZJTEVfTU9ERSk7CiAKLQl1
c2VyX2lkID0gZ2V0dWlkKCk7Ci0JZ3JvdXBfaWQgPSBnZXRnaWQoKTsKKwlpZiAodHN0X2ZpbGxf
ZmlsZShURVNURklMRSwgJ2EnLCBGSUxFX1NJWkUsIDEpKQorCQl0c3RfYnJrKFRCUk9LLCAiQ291
bGQgbm90IGZpbGwgVGVzdGZpbGUhIik7CiB9CiAKIHN0YXRpYyB2b2lkIGNsZWFudXAodm9pZCkK
IHsKLQlpZiAoY2xvc2UoZmlsZGVzKSA9PSAtMSkKLQkJdHN0X3Jlc20oVFdBUk4gfCBURVJSTk8s
ICJjbG9zZSBmYWlsZWQiKTsKLQotCXRzdF9ybWRpcigpOworCWlmIChmaWxkZXMgPiAwKQorCQlT
QUZFX0NMT1NFKGZpbGRlcyk7CiB9CisKK3N0YXRpYyBzdHJ1Y3QgdHN0X3Rlc3QgdGVzdCA9IHsK
KwkudGVzdF9hbGwgPSBydW4sCisJLnRlc3RfdmFyaWFudHMgPSBURVNUX1ZBUklBTlRTLAorCS5z
ZXR1cCA9IHNldHVwLAorCS5jbGVhbnVwID0gY2xlYW51cCwKKwkubmVlZHNfdG1wZGlyID0gMSwK
K307Ci0tIAoyLjE2LjQKCgotLSAKTWFpbGluZyBsaXN0IGluZm86IGh0dHBzOi8vbGlzdHMubGlu
dXguaXQvbGlzdGluZm8vbHRwCg==
