Return-Path: <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>
X-Original-To: lists+linux-ltp@lfdr.de
Delivered-To: lists+linux-ltp@lfdr.de
Received: from picard.linux.it (picard.linux.it [IPv6:2001:1418:10:5::2])
	by mail.lfdr.de (Postfix) with ESMTPS id 8961A4323E
	for <lists+linux-ltp@lfdr.de>; Thu, 13 Jun 2019 04:38:03 +0200 (CEST)
Received: from picard.linux.it (localhost [IPv6:::1])
	by picard.linux.it (Postfix) with ESMTP id 5EB233EAE20
	for <lists+linux-ltp@lfdr.de>; Thu, 13 Jun 2019 04:38:03 +0200 (CEST)
X-Original-To: ltp@lists.linux.it
Delivered-To: ltp@picard.linux.it
Received: from in-4.smtp.seeweb.it (in-4.smtp.seeweb.it
 [IPv6:2001:4b78:1:20::4])
 by picard.linux.it (Postfix) with ESMTP id 8B63B3EA6CF
 for <ltp@lists.linux.it>; Thu, 13 Jun 2019 04:38:01 +0200 (CEST)
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by in-4.smtp.seeweb.it (Postfix) with ESMTPS id 76EA91001550
 for <ltp@lists.linux.it>; Thu, 13 Jun 2019 04:37:24 +0200 (CEST)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 12 Jun 2019 19:37:26 -0700
X-ExtLoop1: 1
Received: from yifei-server.sh.intel.com ([10.239.13.18])
 by fmsmga004.fm.intel.com with ESMTP; 12 Jun 2019 19:37:25 -0700
From: Ammy Yi <ammy.yi@intel.com>
To: ltp@lists.linux.it
Date: Thu, 13 Jun 2019 10:11:38 +0800
Message-Id: <20190613021138.5313-1-ammy.yi@intel.com>
X-Mailer: git-send-email 2.14.1
X-Virus-Scanned: clamav-milter 0.99.2 at in-4.smtp.seeweb.it
X-Virus-Status: Clean
X-Spam-Status: No, score=0.0 required=7.0 tests=SPF_HELO_NONE,SPF_PASS
 autolearn=disabled version=3.4.0
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on in-4.smtp.seeweb.it
Cc: Ammy Yi <ammy.yi@intel.com>
Subject: [LTP] [PATCH v5 ltp] Add 4 more cases for Intel PT.
X-BeenThere: ltp@lists.linux.it
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: Linux Test Project <ltp.lists.linux.it>
List-Unsubscribe: <https://lists.linux.it/options/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=unsubscribe>
List-Archive: <http://lists.linux.it/pipermail/ltp/>
List-Post: <mailto:ltp@lists.linux.it>
List-Help: <mailto:ltp-request@lists.linux.it?subject=help>
List-Subscribe: <https://lists.linux.it/listinfo/ltp>,
 <mailto:ltp-request@lists.linux.it?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it
Sender: "ltp" <ltp-bounces+lists+linux-ltp=lfdr.de@lists.linux.it>

MS4gQWRkIEludGVsIFBUIHNhbnBzaG90IG1vZGUgdGVzdC4KMi4gQWRkIEludGVsIFBUIGV4Y2x1
ZGUgdXNlciB0cmFjZSBtb2RlIHRlc3QuCjMuIEFkZCBJbnRlbCBQVCBleGNsdWRlIGtlcm5lbCB0
cmFjZSBtb2RlIHRlc3QuCjQuIEFkZCBJbnRlbCBQVCBkaXNhYmxlIGJyYW5jaCB0cmFjZSBtb2Rl
IHRlc3QuCgpTaWduZWQtb2ZmLWJ5OiBBbW15IFlpIDxhbW15LnlpQGludGVsLmNvbT4KLS0tCiBy
dW50ZXN0L3RyYWNpbmcgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgNCArKwogdGVzdGNh
c2VzL2tlcm5lbC90cmFjaW5nL3B0X3Rlc3QvcHRfdGVzdC5jIHwgNjcgKysrKysrKysrKysrKysr
KysrKysrKysrLS0tLS0tCiAyIGZpbGVzIGNoYW5nZWQsIDU4IGluc2VydGlvbnMoKyksIDEzIGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL3J1bnRlc3QvdHJhY2luZyBiL3J1bnRlc3QvdHJhY2lu
ZwppbmRleCA1MDQxMzJkNzAuLmQyNzAwY2E1NyAxMDA2NDQKLS0tIGEvcnVudGVzdC90cmFjaW5n
CisrKyBiL3J1bnRlc3QvdHJhY2luZwpAQCAtNCwzICs0LDcgQEAgZnRyYWNlX3JlZ3Jlc3Npb24w
MglmdHJhY2VfcmVncmVzc2lvbjAyLnNoCiBmdHJhY2Utc3RyZXNzLXRlc3QJZnRyYWNlX3N0cmVz
c190ZXN0LnNoIDkwCiBkeW5hbWljX2RlYnVnMDEJCWR5bmFtaWNfZGVidWcwMS5zaAogcHRfZnVs
bF90cmFjZV9iYXNpYyBwdF90ZXN0CitwdF9zbmFwc2hvdF90cmFjZV9iYXNpYyBwdF90ZXN0IC1t
CitwdF9leF91c2VyIHB0X3Rlc3QgLWUgdXNlcgorcHRfZXhfa2VybmVsIHB0X3Rlc3QgLWUga2Vy
bmVsCitwdF9kaXNhYmxlX2JyYW5jaCBwdF90ZXN0IC1iCmRpZmYgLS1naXQgYS90ZXN0Y2FzZXMv
a2VybmVsL3RyYWNpbmcvcHRfdGVzdC9wdF90ZXN0LmMgYi90ZXN0Y2FzZXMva2VybmVsL3RyYWNp
bmcvcHRfdGVzdC9wdF90ZXN0LmMKaW5kZXggNWZlYjFhYTYzLi41OTNmNmMyNjAgMTAwNjQ0Ci0t
LSBhL3Rlc3RjYXNlcy9rZXJuZWwvdHJhY2luZy9wdF90ZXN0L3B0X3Rlc3QuYworKysgYi90ZXN0
Y2FzZXMva2VybmVsL3RyYWNpbmcvcHRfdGVzdC9wdF90ZXN0LmMKQEAgLTYsMTQgKzYsMTQgQEAK
ICAqLwogCiAvKgotICogVGhpcyB0ZXN0IHdpbGwgY2hlY2sgaWYgSW50ZWwgUFQoSW50ZWwgUHJv
Y2Vzc2VyIFRyYWNlKSBmdWxsIHRyYWNlIG1vZGUgaXMKLSAqIHdvcmtpbmcuCisgKiBUaGlzIHRl
c3Qgd2lsbCBjaGVjayBpZiBJbnRlbCBQVChJbnRlbCBQcm9jZXNzZXIgVHJhY2UpIGlzIHdvcmtp
bmcuCiAgKgogICogSW50ZWwgQ1BVIG9mIDV0aC1nZW5lcmF0aW9uIENvcmUgKEJyb2Fkd2VsbCkg
b3IgbmV3ZXIgaXMgcmVxdWlyZWQgZm9yIHRoZSB0ZXN0LgogICoKICAqIGtjb25maWcgcmVxdWly
ZW1lbnQ6IENPTkZJR19QRVJGX0VWRU5UUwogICovCiAKKwogI2luY2x1ZGUgPHNjaGVkLmg+CiAj
aW5jbHVkZSA8c3RkbGliLmg+CiAjaW5jbHVkZSA8c3RkaW8uaD4KQEAgLTQwLDIyICs0MCwzNSBA
QCBpbnQgZmRlID0gLTE7CiAvL21hcCBoZWFkIGFuZCBzaXplCiB1aW50NjRfdCAqKmJ1Zm07CiBs
b25nIGJ1aHN6Oworc3RhdGljIGNoYXIgKnN0cl9tb2RlOworc3RhdGljIGNoYXIgKnN0cl9leGNs
dWRlX2luZm87CitzdGF0aWMgY2hhciAqc3RyX2JyYW5jaF9mbGFnOworaW50IG1vZGUgPSAxOwog
Ci1zdGF0aWMgdWludDY0X3QgKipjcmVhdGVfbWFwKGludCBmZGUsIGxvbmcgYnVmc2l6ZSkKK3N0
YXRpYyB1aW50NjRfdCAqKmNyZWF0ZV9tYXAoaW50IGZkZSwgbG9uZyBidWZzaXplLCBpbnQgZmxh
ZykKIHsKIAl1aW50NjRfdCAqKmJ1Zl9ldjsKKwlpbnQgcHJvX2ZsYWc7CiAJc3RydWN0IHBlcmZf
ZXZlbnRfbW1hcF9wYWdlICpwYzsKIAogCWJ1Zl9ldiA9IFNBRkVfTUFMTE9DKDIqc2l6ZW9mKHVp
bnQ2NF90ICopKTsKIAlidWZfZXZbMF0gPSBOVUxMOwogCWJ1Zl9ldlsxXSA9IE5VTEw7CisJaWYg
KGZsYWcgPT0gMSkgeworCQl0c3RfcmVzKFRJTkZPLCAibWVtb3J5IHdpbGwgYmUgci93IGZvciBm
dWxsIHRyYWNlIG1vZGUhIik7CisJCXByb19mbGFnID0gUFJPVF9SRUFEIHwgUFJPVF9XUklURTsK
Kwl9IGVsc2UgeworCQl0c3RfcmVzKFRJTkZPLCAibWVtb3J5IHdpbGwgYmUgciBvbmx5IGZvciBz
bmFwc2hvdCBtb2RlISIpOworCQlwcm9fZmxhZyA9IFBST1RfUkVBRDsKKwl9CiAJYnVmX2V2WzBd
ID0gU0FGRV9NTUFQKE5VTEwsIElOVEVMX1BUX01FTVNJWkUsIFBST1RfUkVBRCB8IFBST1RfV1JJ
VEUsCiAJCQkJCQkJTUFQX1NIQVJFRCwgZmRlLCAwKTsKIAorCXRzdF9yZXMoVElORk8sICJPcGVu
IEludGVsIFBUIGV2ZW50IGZhaWxlZC4iKTsKIAlwYyA9IChzdHJ1Y3QgcGVyZl9ldmVudF9tbWFw
X3BhZ2UgKilidWZfZXZbMF07CiAJcGMtPmF1eF9vZmZzZXQgPSBJTlRFTF9QVF9NRU1TSVpFOwog
CXBjLT5hdXhfc2l6ZSA9IGJ1ZnNpemU7Ci0JYnVmX2V2WzFdID0gU0FGRV9NTUFQKE5VTEwsIGJ1
ZnNpemUsIFBST1RfUkVBRCB8IFBST1RfV1JJVEUsCisJYnVmX2V2WzFdID0gU0FGRV9NTUFQKE5V
TEwsIGJ1ZnNpemUsIHByb19mbGFnLAogCQkJCQlNQVBfU0hBUkVELCBmZGUsIElOVEVMX1BUX01F
TVNJWkUpOwogCXJldHVybiBidWZfZXY7CiB9CkBAIC04OSw3ICsxMDIsNyBAQCBzdGF0aWMgdm9p
ZCBkZWxfbWFwKHVpbnQ2NF90ICoqYnVmX2V2LCBsb25nIGJ1ZnNpemUpCiAJZnJlZShidWZfZXYp
OwogfQogCi1zdGF0aWMgdm9pZCBpbnRlbF9wdF9mdWxsX3RyYWNlX2NoZWNrKHZvaWQpCitzdGF0
aWMgdm9pZCBpbnRlbF9wdF90cmFjZV9jaGVjayh2b2lkKQogewogCXVpbnQ2NF90IGF1eF9oZWFk
ID0gMDsKIAlzdHJ1Y3QgcGVyZl9ldmVudF9tbWFwX3BhZ2UgKnBtcDsKQEAgLTEwNCwxMSArMTE3
LDExIEBAIHN0YXRpYyB2b2lkIGludGVsX3B0X2Z1bGxfdHJhY2VfY2hlY2sodm9pZCkKIAlwbXAg
PSAoc3RydWN0IHBlcmZfZXZlbnRfbW1hcF9wYWdlICopYnVmbVswXTsKIAlhdXhfaGVhZCA9ICoo
dm9sYXRpbGUgdWludDY0X3QgKikmcG1wLT5hdXhfaGVhZDsKIAlpZiAoYXV4X2hlYWQgPT0gMCkg
ewotCQl0c3RfcmVzKFRGQUlMLCAiVGhlcmUgaXMgbm8gdHJhY2UhIik7CisJCXRzdF9yZXMoVEZB
SUwsICJUaGVyZSBpcyBubyB0cmFjZS4iKTsKIAkJcmV0dXJuOwogCX0KIAotCXRzdF9yZXMoVFBB
U1MsICJwZXJmIHRyYWNlIGZ1bGwgbW9kZSBpcyBwYXNzZWQhIik7CisJdHN0X3JlcyhUUEFTUywg
InBlcmYgdHJhY2UgdGVzdCBpcyBwYXNzZWQuIik7CiB9CiAKIHN0YXRpYyB2b2lkIHNldHVwKHZv
aWQpCkBAIC0xMTYsNiArMTI5LDcgQEAgc3RhdGljIHZvaWQgc2V0dXAodm9pZCkKIAlzdHJ1Y3Qg
cGVyZl9ldmVudF9hdHRyIGF0dHIgPSB7fTsKIAogCWJ1aHN6ID0gMiAqIFBBR0VTSVpFOworCiAJ
aWYgKGFjY2VzcyhJTlRFTF9QVF9QQVRILCBGX09LKSkgewogCQl0c3RfYnJrKFRDT05GLAogCQkJ
IlJlcXVpcmVzIEludGVsIENvcmUgNXRoKyBnZW5lcmF0aW9uIChCcm9hZHdlbGwgYW5kIG5ld2Vy
KSIKQEAgLTEzMCwyMCArMTQ0LDM4IEBAIHN0YXRpYyB2b2lkIHNldHVwKHZvaWQpCiAJYXR0ci5j
b25maWcJPSBCSVQoaW50ZWxfcHRfcG11X3ZhbHVlKElOVEVMX1BUX0ZPUk1BVF9UU0MpKSB8CiAJ
CQkJQklUKGludGVsX3B0X3BtdV92YWx1ZShJTlRFTF9QVF9GT1JNQVRfTlJUKSk7CiAJYXR0ci5z
aXplCT0gc2l6ZW9mKHN0cnVjdCBwZXJmX2V2ZW50X2F0dHIpOwotCWF0dHIuZXhjbHVkZV9rZXJu
ZWwJCT0gMDsKLQlhdHRyLmV4Y2x1ZGVfdXNlcgkJPSAwOwogCWF0dHIubW1hcAkJCT0gMTsKKwlp
ZiAoc3RyX2JyYW5jaF9mbGFnKSB7CisJCXRzdF9yZXMoVElORk8sICJJbnRlbCBQVCB3aWxsIGRp
c2FibGUgYnJhbmNoIHRyYWNlLiIpOworCQlhdHRyLmNvbmZpZyB8PSAxOworCX0KKworCWF0dHIu
ZXhjbHVkZV9rZXJuZWwJPSAwOworCWF0dHIuZXhjbHVkZV91c2VyCT0gMDsKKwlpZiAoc3RyX2V4
Y2x1ZGVfaW5mbykgeworCQlpZiAoIXN0cmNtcChzdHJfZXhjbHVkZV9pbmZvLCAidXNlciIpKSB7
CisJCQl0c3RfcmVzKFRJTkZPLCAiSW50ZWwgUFQgd2lsbCBleGNsdWRlIHVzZXIgdHJhY2UuIik7
CisJCQlhdHRyLmV4Y2x1ZGVfdXNlciA9IDE7CisJCX0gZWxzZSBpZiAoIXN0cmNtcChzdHJfZXhj
bHVkZV9pbmZvLCAia2VybmVsIikpIHsKKwkJCXRzdF9yZXMoVElORk8sICJJbnRlbCBQVCB3aWxs
IGV4Y2x1ZGUga2VybmVsIHRyYWNlLiIpOworCQkJYXR0ci5leGNsdWRlX2tlcm5lbCA9IDE7CisJ
CX0gZWxzZSB7CisJCQl0c3RfYnJrKFRCUk9LLCAiSW52YWxpZCAtZSAnJXMnIiwgc3RyX2V4Y2x1
ZGVfaW5mbyk7CisJCX0KKwl9CiAKIAkvKiBvbmx5IGdldCB0cmFjZSBmb3Igb3duIHBpZCAqLwog
CWZkZSA9IHRzdF9zeXNjYWxsKF9fTlJfcGVyZl9ldmVudF9vcGVuLCAmYXR0ciwgMCwgLTEsIC0x
LCAwKTsKIAlpZiAoZmRlIDwgMCkgewotCQl0c3RfcmVzKFRJTkZPLCAiT3BlbiBJbnRlbCBQVCBl
dmVudCBmYWlsZWQhIik7Ci0JCXRzdF9yZXMoVEZBSUwsICJwZXJmIHRyYWNlIGZ1bGwgbW9kZSBp
cyBmYWlsZWQhIik7CisJCXRzdF9yZXMoVElORk8sICJPcGVuIEludGVsIFBUIGV2ZW50IGZhaWxl
ZC4iKTsKKwkJdHN0X3JlcyhURkFJTCwgInBlcmYgdHJhY2UgZnVsbCBtb2RlIGlzIGZhaWxlZC4i
KTsKIAkJcmV0dXJuOwogCX0KIAlidWZtID0gTlVMTDsKLQlidWZtID0gY3JlYXRlX21hcChmZGUs
IGJ1aHN6KTsKKwlpZiAoc3RyX21vZGUpCisJCW1vZGUgPSAwOwogCisJYnVmbSA9IGNyZWF0ZV9t
YXAoZmRlLCBidWhzeiwgbW9kZSk7CiB9CiAKIHN0YXRpYyB2b2lkIGNsZWFudXAodm9pZCkKQEAg
LTE1NCw4ICsxODYsMTcgQEAgc3RhdGljIHZvaWQgY2xlYW51cCh2b2lkKQogCWRlbF9tYXAoYnVm
bSwgYnVoc3opOwogfQogCitzdGF0aWMgc3RydWN0IHRzdF9vcHRpb24gb3B0aW9uc1tdID0gewor
CXsibSIsICZzdHJfbW9kZSwgIi1tIGRpZmZlcmVudCBtb2RlLCBkZWZhdWx0IGlzIGZ1bGwgbW9k
ZSJ9LAorCXsiZToiLCAmc3RyX2V4Y2x1ZGVfaW5mbywgIi1lIGV4Y2x1ZGUgaW5mbywgdXNlciBv
ciBrZXJuZWwifSwKKwl7ImIiLCAmc3RyX2JyYW5jaF9mbGFnLCAiLWIgaWYgZGlzYWJsZSBicmFu
Y2ggdHJhY2UifSwKKwl7TlVMTCwgTlVMTCwgTlVMTH0KK307CisKKwogc3RhdGljIHN0cnVjdCB0
c3RfdGVzdCB0ZXN0ID0gewotCS50ZXN0X2FsbCA9IGludGVsX3B0X2Z1bGxfdHJhY2VfY2hlY2ss
CisJLnRlc3RfYWxsID0gaW50ZWxfcHRfdHJhY2VfY2hlY2ssCisJLm9wdGlvbnMgPSBvcHRpb25z
LAogCS5taW5fa3ZlciA9ICI0LjEiLAogCS5zZXR1cCA9IHNldHVwLAogCS5jbGVhbnVwID0gY2xl
YW51cCwKLS0gCjIuMTQuMQoKCi0tIApNYWlsaW5nIGxpc3QgaW5mbzogaHR0cHM6Ly9saXN0cy5s
aW51eC5pdC9saXN0aW5mby9sdHAK
